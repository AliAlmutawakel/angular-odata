var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Annotation.html",[0,1.283,1,1.283]],["body/interfaces/Annotation.html",[0,2.355,1,1.853,2,1.417,3,0.069,4,0.061,5,0.069,6,0.044,7,1.534,8,0.044,9,0.265,10,0.217,11,3.438,12,3.438,13,3.438,14,0.179,15,0.125,16,0.978,17,0.012,18,1.222,19,0.347,20,1.473,21,1.112,22,1.77,23,1.012,24,0.171,25,1.473,26,1.417,27,2.213,28,2.886,29,1.923,30,1.6,31,2.827,32,2.071,33,1.27,34,1.077,35,0.671,36,0.897,37,1.077,38,1.012,39,2.303,40,1.976,41,2.303,42,2.303,43,2.128,44,1.976,45,1.316,46,1.6,47,1.316,48,2.555,49,1.308,50,0.846,51,0.732,52,2.071,53,1.234,54,1.227,55,1.782,56,0.846,57,2.229,58,0.846,59,1.365,60,2.128,61,1.108,62,2.403,63,1.6,64,1.6,65,1.6,66,1.6,67,1.534,68,1.6,69,1.6,70,1.6,71,0.173,72,2.461,73,1.6,74,1.6,75,1.6,76,1.6,77,1.6,78,1.365,79,1.6,80,1.148,81,1.6,82,1.6,83,1.6,84,1.6,85,1.6,86,1.6,87,1.6,88,1.6,89,1.6,90,1.6,91,1.6,92,1.6,93,1.6,94,1.6,95,1.6,96,2.509,97,1.395,98,2.291,99,1.724,100,1.617,101,2.212,102,2.212,103,2.735,104,1.6,105,2.403,106,1.6,107,1.417,108,1.6,109,1.6,110,3.004,111,1.843,112,1.818,113,1.942,114,3.375,115,2.687,116,2.886,117,2.403,118,1.187,119,1.6,120,2.403,121,2.766,122,3.044,123,1.6,124,1.6,125,1.6,126,3.194,127,2.14,128,2.766,129,2.886,130,1.6,131,2.212,132,1.6,133,3.208,134,0.767,135,1.473,136,1.6,137,1.534,138,1.534,139,1.6,140,1.6,141,1.6,142,1.6,143,2.212,144,0.483,145,1.6,146,2.403,147,2.403,148,2.461,149,2.403,150,2.303,151,1.534,152,1.6,153,1.417,154,2.128,155,1.6,156,2.461,157,1.473,158,1.473,159,1.473,160,2.128,161,1.534,162,1.473,163,1.534,164,2.212,165,0.425,166,0.775,167,1.365,168,1.473,169,2.159,170,1.128,171,1.27,172,2.128,173,2.212,174,1.417,175,1.473,176,1.534,177,1.534,178,1.316,179,1.388,180,1.27,181,1.112,182,1.365,183,1.316,184,0.798,185,1.365,186,0.615,187,1.077,188,1.417,189,1.365,190,1.473,191,1.534,192,1.534,193,1.534,194,1.365,195,1.473,196,2.212,197,3.323,198,1.044,199,0.775,200,1.534,201,2.049,202,1.148,203,2.049,204,1.534,205,1.976,206,1.534,207,2.212,208,1.417,209,2.212,210,1.473,211,1.316,212,1.843,213,1.534,214,1.365,215,1.534,216,1.27,217,2.303,218,2.049,219,0.924,220,1.534,221,1.534,222,0.069,223,1.112,224,0.004,225,0.006,226,0.004]],["title/interfaces/ApiOptions.html",[0,1.283,172,1.966]],["body/interfaces/ApiOptions.html",[0,2.358,1,1.674,2,1.427,3,0.07,4,0.061,5,0.07,6,0.044,7,1.545,8,0.044,9,0.228,10,0.209,11,2.416,12,2.416,13,2.416,14,0.179,15,0.125,16,0.979,17,0.012,18,1.195,19,0.349,20,1.484,21,1.12,22,1.778,23,1.019,24,0.171,25,1.484,26,1.427,27,2.223,28,2.898,29,1.928,30,1.612,31,2.836,32,2.08,33,1.279,34,1.085,35,0.676,36,0.904,37,1.085,38,1.019,39,2.316,40,1.987,41,2.316,42,2.316,43,2.139,44,1.987,45,1.325,46,1.612,47,1.325,48,2.566,49,1.315,50,0.852,51,0.737,52,2.08,53,1.241,54,1.236,55,1.792,56,0.852,57,2.234,58,0.852,59,1.374,60,2.139,61,1.113,62,2.416,63,1.612,64,1.612,65,1.612,66,1.612,67,1.545,68,1.612,69,1.612,70,1.612,71,0.173,72,2.471,73,1.612,74,1.612,75,1.612,76,1.612,77,1.612,78,1.374,79,1.612,80,1.157,81,1.612,82,1.612,83,1.612,84,1.612,85,1.612,86,1.612,87,1.612,88,1.612,89,1.612,90,1.612,91,1.612,92,1.612,93,1.612,94,1.612,95,1.612,96,2.515,97,1.43,98,2.3,99,2.475,100,2.321,101,2.224,102,2.224,103,3.367,104,1.612,105,2.416,106,1.612,107,1.427,108,1.612,109,1.612,110,3.006,111,1.853,112,1.823,113,1.951,114,3.378,115,2.694,116,2.898,117,2.416,118,1.195,119,1.612,120,2.416,121,2.778,122,3.053,123,1.612,124,1.612,125,1.612,126,3.201,127,2.149,128,2.778,129,2.898,130,1.612,131,2.224,132,1.612,133,3.219,134,0.77,135,1.484,136,1.612,137,1.545,138,1.545,139,1.612,140,1.612,141,1.612,142,1.612,143,2.224,144,0.487,145,1.612,146,2.416,147,2.416,148,2.471,149,2.416,150,2.316,151,1.545,152,1.612,153,1.427,154,2.139,155,1.612,156,2.471,157,1.484,158,1.484,159,1.484,160,2.139,161,1.545,162,1.484,163,1.545,164,2.224,165,0.428,166,0.781,167,1.374,168,1.484,169,2.167,170,1.212,171,1.279,172,2.566,173,2.224,174,2.85,175,1.484,176,1.545,177,1.545,178,1.325,179,1.396,180,1.279,181,1.12,182,1.374,183,1.325,184,0.804,185,1.374,186,0.619,187,1.085,188,1.427,189,1.374,190,1.484,191,1.545,192,1.545,193,1.545,194,1.374,195,1.484,196,2.224,197,3.332,198,1.051,199,0.781,200,1.545,201,2.06,202,1.157,203,2.06,204,1.545,205,1.987,206,1.545,207,2.224,208,1.427,209,2.224,210,1.484,211,1.325,212,1.853,213,1.545,214,1.374,215,1.545,216,1.279,217,2.316,218,2.06,219,0.931,220,1.545,221,1.545,222,0.07,223,1.12,224,0.004,225,0.006,226,0.004,227,1.975]],["title/interfaces/Cache.html",[0,1.283,110,1.494]],["body/interfaces/Cache.html",[0,2.36,1,1.677,2,1.431,3,0.07,4,0.061,5,0.07,6,0.08,7,1.549,8,0.044,9,0.171,10,0.131,11,2.421,12,2.421,13,2.421,14,0.179,15,0.124,16,0.968,17,0.012,18,1.195,19,0.35,20,1.488,21,1.123,22,1.781,23,1.022,24,0.171,25,1.488,26,1.431,27,2.227,28,2.903,29,2.066,30,1.616,31,2.839,32,2.083,33,1.283,34,1.088,35,0.678,36,0.906,37,1.088,38,1.022,39,2.321,40,1.991,41,2.321,42,2.321,43,2.144,44,1.991,45,1.329,46,1.616,47,1.329,48,2.57,49,1.318,50,0.855,51,1.328,52,2.083,53,1.243,54,1.24,55,1.796,56,0.855,57,2.237,58,0.855,59,1.378,60,2.144,61,1.115,62,2.421,63,1.616,64,1.616,65,1.616,66,1.616,67,1.549,68,1.616,69,1.616,70,1.616,71,0.173,72,2.476,73,1.616,74,1.616,75,1.616,76,1.616,77,1.616,78,1.378,79,1.616,80,1.16,81,1.616,82,1.616,83,1.616,84,1.616,85,1.616,86,1.616,87,1.616,88,1.616,89,1.616,90,1.616,91,1.616,92,1.616,93,1.616,94,1.616,95,1.616,96,2.518,97,1.399,98,2.304,99,1.737,100,1.63,101,2.229,102,2.229,103,2.749,104,1.616,105,2.421,106,1.616,107,1.431,108,1.616,109,1.616,110,3.016,111,1.857,112,1.826,113,1.954,114,3.379,115,2.696,116,2.903,117,2.421,118,1.199,119,1.616,120,2.421,121,2.783,122,3.057,123,1.616,124,1.616,125,1.616,126,3.204,127,2.153,128,2.783,129,2.903,130,1.616,131,2.229,132,1.616,133,3.224,134,0.771,135,1.488,136,1.616,137,1.549,138,1.549,139,1.616,140,1.616,141,1.616,142,1.616,143,2.229,144,0.488,145,1.616,146,2.421,147,2.421,148,2.476,149,2.421,150,2.321,151,1.549,152,1.616,153,1.431,154,2.144,155,1.616,156,2.476,157,1.488,158,1.488,159,1.488,160,2.144,161,1.549,162,1.488,163,1.549,164,2.229,165,0.43,166,0.783,167,1.378,168,1.488,169,2.17,170,1.133,171,1.283,172,2.144,173,2.229,174,1.431,175,1.488,176,1.549,177,1.549,178,1.329,179,1.399,180,1.283,181,1.123,182,2.065,183,2.387,184,1.208,185,2.065,186,0.93,187,1.088,188,1.431,189,1.378,190,1.488,191,1.549,192,1.549,193,1.549,194,1.378,195,1.488,196,2.229,197,3.336,198,1.054,199,0.783,200,1.549,201,2.065,202,1.16,203,2.065,204,1.549,205,1.991,206,1.549,207,2.229,208,1.431,209,2.229,210,1.488,211,1.329,212,1.857,213,1.549,214,1.378,215,1.549,216,1.283,217,2.321,218,2.065,219,0.934,220,1.549,221,1.549,222,0.126,223,1.123,224,0.004,225,0.006,226,0.004,228,0.958,229,2.532,230,0.242,231,3.052,232,0.93,233,3.052]],["title/classes/CsdlAction.html",[234,0.313,235,2.322]],["body/classes/CsdlAction.html",[3,0.111,4,0.097,5,0.111,6,0.118,8,0.071,9,0.237,10,0.237,14,0.176,15,0.12,16,0.985,17,0.011,18,1.231,24,0.16,34,2.255,50,1.772,53,1.721,56,1.772,58,1.772,71,0.167,165,1.255,222,0.185,224,0.006,225,0.008,226,0.006,230,0.421,234,0.594,235,3.504,236,0.304,237,2.137,238,2.628,239,3.129,240,4.852,241,4.852,242,4.852,243,0.647,244,1.483,245,4.612,246,4.612,247,4.846,248,1.309,249,4.846,250,4.846,251,4.846,252,4.846,253,4.846,254,2.685,255,2.961,256,2.685,257,3.129,258,2.815,259,2.685,260,1.784,261,2.57]],["title/classes/CsdlActionImport.html",[234,0.313,259,2.322]],["body/classes/CsdlActionImport.html",[3,0.116,4,0.102,5,0.116,6,0.115,8,0.074,9,0.245,10,0.206,14,0.177,15,0.117,16,0.956,17,0.011,18,1.247,24,0.162,34,2.868,50,1.828,53,1.775,56,1.828,58,1.828,71,0.168,165,1.255,222,0.165,224,0.007,225,0.008,226,0.007,230,0.403,234,0.602,235,2.817,236,0.319,237,2.077,238,2.555,239,3.284,240,3.988,241,3.988,242,3.988,243,0.655,244,1.556,245,4.185,246,4.185,248,0.892,254,2.817,255,3.108,256,2.817,257,3.284,258,2.954,259,3.615,260,2.893,261,2.651,262,5.086,263,5.086,264,5.086,265,5.086]],["title/classes/CsdlAnnotable.html",[234,0.313,266,2.22]],["body/classes/CsdlAnnotable.html",[3,0.132,4,0.116,5,0.132,6,0.111,8,0.084,9,0.265,10,0.218,14,0.173,15,0.111,16,0.685,17,0.011,18,1.183,24,0.16,50,1.615,53,1.569,56,1.615,58,1.615,71,0.142,165,1.237,170,1.074,222,0.132,224,0.007,225,0.009,226,0.007,230,0.374,234,0.595,236,0.362,237,2.017,243,0.637,248,1.011,261,2.343,266,4.043,267,4.236,268,4.52,269,5.767,270,4.216,271,5.767,272,5.767,273,3.724,274,3.524,275,3.35,276,4.101,277,3.195,278,3.956,279,3.524,280,3.956,281,3.055,282,3.956]],["title/classes/CsdlAnnotation.html",[234,0.313,270,2.128]],["body/classes/CsdlAnnotation.html",[3,0.129,4,0.114,5,0.129,6,0.115,8,0.082,9,0.261,10,0.217,14,0.176,15,0.115,16,0.671,17,0.011,18,1.172,24,0.159,50,1.583,53,1.537,56,1.583,58,1.583,71,0.14,165,1.239,170,1.052,222,0.129,224,0.007,225,0.009,226,0.007,230,0.401,234,0.591,236,0.355,237,2.087,243,0.632,248,0.991,261,2.296,266,3.694,267,4.151,268,3.863,270,4.01,273,3.649,274,3.453,275,3.282,276,4.799,277,3.13,278,5.418,279,3.453,280,3.877,281,2.994,282,3.877,283,5.652,284,5.652,285,5.652,286,5.652]],["title/classes/CsdlAnnotations.html",[234,0.313,274,2.561]],["body/classes/CsdlAnnotations.html",[3,0.126,4,0.111,5,0.126,6,0.114,8,0.08,9,0.257,10,0.231,14,0.176,15,0.117,16,0.655,17,0.011,18,1.159,24,0.157,50,1.544,53,1.499,56,1.544,58,1.544,71,0.138,165,1.241,170,1.279,222,0.126,224,0.007,225,0.009,226,0.007,230,0.415,234,0.585,236,0.346,237,2.068,243,0.626,248,0.966,261,2.239,266,4.147,267,4.048,268,4.548,270,4.169,273,3.558,274,4.195,275,4.546,276,4.769,277,3.053,278,3.781,279,3.368,280,3.781,281,2.919,282,3.781,287,5.511,288,5.511,289,5.511,290,5.511,291,2.317,292,4.048]],["title/classes/CsdlComplexType.html",[234,0.313,293,2.434]],["body/classes/CsdlComplexType.html",[3,0.112,4,0.098,5,0.112,6,0.093,8,0.071,9,0.316,10,0.242,14,0.172,15,0.118,16,1.014,17,0.011,19,0.373,24,0.156,35,1.084,51,1.182,71,0.165,165,1.235,170,1.316,199,1.253,222,0.112,224,0.006,225,0.008,226,0.006,230,0.429,234,0.58,236,0.306,237,1.679,243,0.637,244,1.493,248,1.361,291,3.345,293,3.69,294,3.52,295,2.703,296,5.409,297,2.782,298,5.362,299,5.697,300,5.362,301,3.95,302,3.95,303,4.88,304,4.278,305,4.278,306,4.278,307,4.278,308,4.278,309,4.278,310,2.289,311,2.478,312,3.366,313,2.834,314,3.883,315,3.151,316,3.348,317,3.883]],["title/classes/CsdlEntityContainer.html",[234,0.313,318,3.079]],["body/classes/CsdlEntityContainer.html",[3,0.122,4,0.107,5,0.122,6,0.122,8,0.078,9,0.252,10,0.245,14,0.168,15,0.12,17,0.011,19,0.564,24,0.107,33,2.244,36,2.507,71,0.16,165,1.233,208,3.741,222,0.122,224,0.007,225,0.009,226,0.007,230,0.438,234,0.399,236,0.335,237,2.21,238,1.734,243,0.539,244,1.633,248,1.399,256,4.419,259,4.419,260,1.964,310,3.456,318,4.942,319,4.678,320,7.977,321,7.977,322,7.977,323,7.977,324,5.859,325,5.859,326,5.337,327,5.337,328,4.678,329,4.678,330,5.337,331,4.678,332,4.678,333,3.446]],["title/classes/CsdlEntitySet.html",[234,0.313,324,3.079]],["body/classes/CsdlEntitySet.html",[3,0.132,4,0.116,5,0.132,6,0.121,8,0.084,9,0.265,10,0.234,14,0.171,15,0.119,16,0.945,17,0.011,19,0.442,24,0.116,35,1.283,36,2.467,54,2.346,71,0.164,165,1.223,222,0.132,224,0.007,225,0.009,226,0.007,230,0.432,234,0.432,236,0.362,237,2.195,243,0.566,244,1.767,248,1.239,258,4.741,310,2.709,324,5.191,334,5.062,335,5.599,336,7.155,337,5.599,338,5.775,339,5.062,340,5.062,341,5.775,342,5.062,343,4.593]],["title/classes/CsdlEntityType.html",[234,0.313,313,2.434]],["body/classes/CsdlEntityType.html",[3,0.107,4,0.094,5,0.107,6,0.107,8,0.068,9,0.314,10,0.245,14,0.171,15,0.12,16,1.021,17,0.011,19,0.358,24,0.154,35,1.038,51,1.854,71,0.164,165,1.238,170,1.288,199,1.2,222,0.107,224,0.006,225,0.008,226,0.006,230,0.436,234,0.572,236,0.293,237,1.945,243,0.629,244,1.43,248,1.406,291,3.306,293,2.715,294,4.077,295,2.589,296,5.369,297,2.759,298,5.318,299,5.65,300,5.318,301,3.91,302,3.91,304,4.098,305,4.098,306,4.098,307,4.098,308,4.098,309,4.098,310,2.192,311,2.373,312,3.272,313,3.588,314,4.676,315,4.941,316,3.207,317,3.775,344,4.098,345,4.675,346,4.098]],["title/classes/CsdlEnumMember.html",[234,0.313,347,3.079]],["body/classes/CsdlEnumMember.html",[3,0.138,4,0.121,5,0.138,6,0.117,8,0.088,9,0.271,10,0.222,14,0.168,15,0.113,16,0.713,17,0.011,18,1.25,24,0.145,61,1.679,71,0.168,165,1.219,211,2.616,222,0.138,224,0.008,225,0.009,226,0.008,230,0.411,234,0.541,236,0.377,237,2.131,243,0.622,244,1.838,248,1.053,295,3.327,347,5.705,348,4.271,349,4.411,350,5.264,351,6.006,352,4.12,353,4.776,354,4.776]],["title/classes/CsdlEnumType.html",[234,0.313,352,2.875]],["body/classes/CsdlEnumType.html",[3,0.131,4,0.115,5,0.131,6,0.121,8,0.083,9,0.263,10,0.233,14,0.172,15,0.119,16,0.942,17,0.011,18,0.887,24,0.141,61,1.164,71,0.167,165,1.23,211,3.546,222,0.131,224,0.007,225,0.009,226,0.007,230,0.431,234,0.525,236,0.359,237,2.189,243,0.609,244,1.75,248,1.232,295,3.169,347,5.979,348,4.39,352,4.82,353,6.474,354,6.474,355,5.721,356,5.014,357,5.721,358,5.014,359,5.014]],["title/classes/CsdlFunction.html",[234,0.313,254,2.322]],["body/classes/CsdlFunction.html",[3,0.109,4,0.096,5,0.109,6,0.119,8,0.069,9,0.234,10,0.237,14,0.175,15,0.12,16,1.005,17,0.011,18,1.225,24,0.159,34,2.228,50,1.751,53,1.7,56,1.751,58,1.751,71,0.166,165,1.255,222,0.184,224,0.006,225,0.008,226,0.006,230,0.427,234,0.591,235,2.636,236,0.299,237,2.159,238,2.655,239,3.073,240,4.828,241,4.828,242,4.828,243,0.645,244,1.456,245,4.589,246,4.589,248,1.3,254,3.462,255,4.704,256,2.636,257,3.073,258,2.764,259,2.636,260,1.751,261,2.539,360,4.759,361,4.759,362,4.759,363,4.759,364,4.759,365,4.759,366,4.759]],["title/classes/CsdlFunctionImport.html",[234,0.313,256,2.322]],["body/classes/CsdlFunctionImport.html",[3,0.114,4,0.1,5,0.114,6,0.117,8,0.072,9,0.241,10,0.223,14,0.177,15,0.119,16,0.99,17,0.011,18,1.239,24,0.161,34,2.851,50,1.801,53,1.749,56,1.801,58,1.801,71,0.167,165,1.255,222,0.163,224,0.006,225,0.008,226,0.006,230,0.413,234,0.598,235,2.754,236,0.312,237,2.113,238,2.598,239,3.21,240,3.93,241,3.93,242,3.93,243,0.651,244,1.521,245,4.14,246,4.14,248,1.128,254,2.754,255,3.038,256,3.562,257,5.04,258,4.534,259,2.754,260,1.83,261,2.613,367,4.972,368,4.972,369,4.972,370,4.972,371,4.972]],["title/classes/CsdlInclude.html",[234,0.313,372,2.875]],["body/classes/CsdlInclude.html",[1,1.779,3,0.133,4,0.117,5,0.133,6,0.116,8,0.085,9,0.266,10,0.219,14,0.175,15,0.112,17,0.011,19,0.445,24,0.154,71,0.117,165,1.224,170,1.083,198,2.756,199,2.099,222,0.133,224,0.007,225,0.009,226,0.007,230,0.406,234,0.573,236,0.365,237,2.107,243,0.638,248,1.02,266,3.759,268,3.221,270,3.603,276,3.377,277,3.221,310,2.727,372,5.254,373,4.624,374,5.097,375,5.815,376,5.815,377,5.815,378,3.989,379,4.271,380,4.624,381,4.624,382,4.868,383,4.271,384,4.271]],["title/classes/CsdlIncludeAnnotations.html",[234,0.313,382,2.875]],["body/classes/CsdlIncludeAnnotations.html",[1,1.736,3,0.13,4,0.114,5,0.13,6,0.118,8,0.083,9,0.262,10,0.232,14,0.176,15,0.115,17,0.011,19,0.434,24,0.152,71,0.114,165,1.228,170,1.057,198,1.961,199,1.456,222,0.13,224,0.007,225,0.009,226,0.007,230,0.419,234,0.567,236,0.356,237,2.146,243,0.633,248,1.226,266,3.703,268,3.143,270,3.55,276,4.717,277,3.143,310,2.661,372,4.796,373,4.512,378,3.893,379,4.168,380,4.512,381,4.512,382,5.198,383,5.809,384,5.965,385,5.674,386,5.674,387,5.674,388,5.674,389,5.674]],["title/classes/CsdlKey.html",[234,0.313,314,2.561]],["body/classes/CsdlKey.html",[3,0.125,4,0.11,5,0.125,6,0.108,8,0.079,9,0.311,10,0.156,14,0.169,15,0.099,16,0.987,17,0.011,19,0.417,24,0.161,35,1.211,51,1.321,71,0.161,165,1.219,170,1.27,199,1.4,222,0.125,224,0.007,225,0.009,226,0.007,230,0.361,234,0.601,236,0.342,237,1.967,243,0.655,293,3.168,294,4.123,295,3.021,296,4.806,297,2.69,298,5.184,299,5.508,300,5.184,301,3.803,302,3.803,310,2.558,311,2.769,312,3.613,313,3.168,314,4.548,315,3.521,316,5.35,317,4.906,390,5.454,391,5.454,392,5.454]],["title/classes/CsdlNavigationProperty.html",[234,0.313,302,2.044]],["body/classes/CsdlNavigationProperty.html",[3,0.111,4,0.097,5,0.111,6,0.116,8,0.07,9,0.236,10,0.241,14,0.176,15,0.126,16,1.001,17,0.011,18,1.09,24,0.155,35,1.073,50,1.353,53,2.255,56,1.353,58,1.353,71,0.162,165,1.245,170,1.309,222,0.111,224,0.006,225,0.008,226,0.006,230,0.434,234,0.578,236,0.303,237,2.096,243,0.635,244,1.478,248,1.356,260,1.778,261,1.962,281,2.558,291,2.956,297,1.618,301,2.355,302,3.077,311,4.028,312,3.343,393,3.313,394,5.218,395,4.994,396,4.994,397,4.994,398,5.306,399,4.726,400,4.726,401,4.83,402,4.83,403,4.83,404,4.83,405,4.83,406,4.234,407,4.234,408,4.234,409,2.951,410,3.118]],["title/classes/CsdlNavigationPropertyBinding.html",[234,0.313,337,2.875]],["body/classes/CsdlNavigationPropertyBinding.html",[3,0.142,4,0.124,5,0.142,6,0.119,8,0.09,9,0.276,10,0.177,14,0.173,15,0.115,17,0.011,24,0.124,35,1.808,54,3.308,71,0.124,165,1.188,219,2.491,222,0.142,224,0.008,225,0.009,226,0.008,230,0.417,234,0.462,236,0.388,237,2.151,243,0.589,275,4.83,337,5.051,411,6.182,412,6.182,413,6.182,414,6.182,415,6.182]],["title/classes/CsdlOnDelete.html",[234,0.313,400,2.561]],["body/classes/CsdlOnDelete.html",[3,0.127,4,0.111,5,0.127,6,0.109,8,0.081,9,0.258,10,0.158,14,0.175,15,0.121,16,0.957,17,0.011,18,1.16,24,0.162,35,1.227,50,1.548,53,2.192,56,1.548,58,1.548,71,0.157,165,1.237,170,1.281,222,0.127,224,0.007,225,0.009,226,0.007,230,0.364,234,0.603,236,0.347,237,1.978,243,0.658,260,2.884,261,2.245,281,2.927,297,1.851,301,2.694,302,2.694,311,3.802,312,3.643,393,3.791,394,4.834,395,3.568,396,3.568,397,3.568,398,3.791,399,4.202,400,4.575,409,3.376,410,3.568,416,5.526,417,5.526,418,5.526]],["title/classes/CsdlParameter.html",[234,0.313,246,2.434]],["body/classes/CsdlParameter.html",[3,0.107,4,0.094,5,0.107,6,0.12,8,0.068,9,0.231,10,0.24,14,0.176,15,0.124,16,0.978,17,0.011,18,1.327,24,0.158,34,2.197,50,2.2,53,2.137,56,2.2,58,2.2,71,0.165,165,1.255,222,0.158,224,0.006,225,0.008,226,0.006,230,0.431,234,0.587,235,2.581,236,0.292,237,2.175,238,2.675,239,3.008,240,3.766,241,3.766,242,3.766,243,0.641,244,1.426,245,4.012,246,4.269,248,1.341,254,2.581,255,2.847,256,2.581,257,3.008,258,2.706,259,2.581,260,1.715,261,3.191,419,4.659,420,4.659,421,4.659,422,4.659,423,4.659,424,4.659,425,4.659,426,4.659]],["title/classes/CsdlProperty.html",[234,0.313,301,2.044]],["body/classes/CsdlProperty.html",[3,0.106,4,0.093,5,0.106,6,0.118,8,0.067,9,0.23,10,0.245,14,0.176,15,0.126,16,0.994,17,0.011,18,1.306,24,0.153,35,1.028,50,2.136,53,2.236,56,2.136,58,2.136,71,0.161,165,1.246,170,1.282,222,0.106,224,0.006,225,0.008,226,0.006,230,0.44,234,0.571,236,0.291,237,2.146,243,0.627,244,1.416,248,1.403,260,1.703,261,3.099,281,4.041,291,2.895,297,1.551,301,2.992,302,2.257,311,4.124,312,3.251,393,3.175,394,5.164,395,2.988,396,2.988,397,2.988,398,3.175,399,3.75,400,3.75,406,4.057,407,4.057,408,4.057,409,4.661,410,2.988,427,4.628,428,4.628,429,4.628,430,4.628,431,4.628,432,4.628,433,4.628]],["title/classes/CsdlPropertyRef.html",[234,0.313,317,2.561]],["body/classes/CsdlPropertyRef.html",[3,0.122,4,0.107,5,0.122,6,0.113,8,0.078,9,0.31,10,0.211,14,0.174,15,0.107,16,0.982,17,0.011,19,0.407,24,0.16,35,1.182,51,1.29,71,0.168,165,1.224,170,1.251,199,2.046,222,0.122,224,0.007,225,0.009,226,0.007,230,0.39,234,0.596,236,0.334,237,2.043,243,0.651,244,1.629,248,0.933,293,3.092,294,4.282,295,2.949,296,4.753,297,2.671,298,5.146,299,5.468,300,5.146,301,3.77,302,3.77,310,2.497,311,2.703,312,3.559,313,3.092,314,4.105,315,3.437,316,3.652,317,4.498,434,5.323,435,5.323,436,5.323]],["title/classes/CsdlReference.html",[234,0.313,378,2.875]],["body/classes/CsdlReference.html",[1,1.691,3,0.127,4,0.111,5,0.127,6,0.117,8,0.081,9,0.258,10,0.239,14,0.171,15,0.117,17,0.011,19,0.423,24,0.15,71,0.111,165,1.232,170,1.281,198,1.909,199,1.418,222,0.127,224,0.007,225,0.009,226,0.007,230,0.427,234,0.56,236,0.347,237,2.13,243,0.627,248,1.313,266,4.15,268,4.464,270,4.092,276,3.209,277,3.061,291,2.324,292,4.059,310,2.592,372,5.529,373,4.394,378,4.718,379,5.755,380,6.409,381,6.409,382,5.529,383,4.059,384,4.059,437,5.526,438,5.526,439,5.526,440,5.526,441,5.526]],["title/classes/CsdlReferentialConstraint.html",[234,0.313,399,2.561]],["body/classes/CsdlReferentialConstraint.html",[3,0.124,4,0.109,5,0.124,6,0.113,8,0.079,9,0.254,10,0.155,14,0.176,15,0.122,16,0.952,17,0.011,18,1.15,24,0.161,35,1.727,50,1.516,53,2.179,56,1.516,58,1.516,71,0.156,165,1.239,170,1.264,222,0.124,224,0.007,225,0.009,226,0.007,230,0.393,234,0.599,236,0.34,237,2.055,243,0.654,260,1.992,261,2.199,281,2.867,297,1.813,301,2.639,302,2.639,311,3.949,312,3.596,393,3.713,394,4.789,395,3.494,396,3.494,397,3.494,398,3.713,399,4.532,400,4.148,409,3.307,410,5.172,442,5.412,443,5.412,444,5.412,445,5.412]],["title/classes/CsdlReturnType.html",[234,0.313,245,2.434]],["body/classes/CsdlReturnType.html",[3,0.109,4,0.095,5,0.109,6,0.119,8,0.069,9,0.234,10,0.24,14,0.175,15,0.123,16,0.981,17,0.011,18,1.329,24,0.159,34,2.223,50,2.211,53,2.147,56,2.211,58,2.211,71,0.159,165,1.255,222,0.16,224,0.006,225,0.008,226,0.006,230,0.426,234,0.59,235,2.627,236,0.298,237,2.157,238,2.653,239,3.062,240,3.811,241,3.811,242,3.811,243,0.644,245,4.299,246,4.047,248,1.348,254,2.627,255,2.898,256,2.627,257,3.062,258,2.755,259,2.627,260,1.746,261,3.207,446,4.743,447,4.743,448,4.743,449,4.743,450,4.743,451,4.743,452,4.743,453,4.743]],["title/classes/CsdlSchema.html",[234,0.313,454,3.333]],["body/classes/CsdlSchema.html",[1,1.377,3,0.103,4,0.09,5,0.103,6,0.123,8,0.066,9,0.226,10,0.249,14,0.162,15,0.125,17,0.011,19,0.595,24,0.09,36,1.337,71,0.09,165,1.245,170,1.122,198,2.505,199,1.94,222,0.103,224,0.006,225,0.008,226,0.006,230,0.447,234,0.337,235,4.186,236,0.282,237,2.23,238,1.462,243,0.482,248,1.46,254,4.186,260,1.656,266,3.84,268,4.186,270,3.837,274,4.618,277,2.493,279,4.618,291,1.892,292,3.305,293,4.389,294,2.493,310,3.647,313,4.389,318,5.551,348,2.384,352,5.184,374,3.945,454,4.79,455,4.5,456,7.557,457,7.557,458,7.557,459,6.624,460,7.557,461,7.557,462,4.618,463,7.557,464,7.557,465,5.551,466,4.5,467,4.5,468,4.5,469,4.5,470,4.5,471,4.5,472,4.5,473,4.5,474,4.5,475,4.5,476,4.5,477,4.5,478,3.945,479,3.579]],["title/classes/CsdlSingleton.html",[234,0.313,325,3.079]],["body/classes/CsdlSingleton.html",[3,0.137,4,0.121,5,0.137,6,0.12,8,0.087,9,0.271,10,0.222,14,0.172,15,0.125,17,0.011,19,0.459,24,0.121,35,1.332,54,2.436,71,0.166,165,1.212,222,0.137,224,0.008,225,0.009,226,0.008,230,0.427,234,0.449,236,0.376,237,2.18,243,0.579,244,1.835,248,1.052,310,2.813,325,5.311,337,5.659,343,4.769,480,5.997,481,8.249,482,5.997,483,5.997,484,5.997,485,5.997]],["title/classes/CsdlStructuralProperty.html",[234,0.313,394,2.706]],["body/classes/CsdlStructuralProperty.html",[3,0.121,4,0.106,5,0.121,6,0.116,8,0.077,9,0.251,10,0.21,14,0.176,15,0.126,16,0.992,17,0.011,18,1.137,24,0.16,35,1.173,50,1.48,53,2.292,56,1.48,58,1.48,71,0.166,165,1.241,170,1.245,222,0.121,224,0.007,225,0.009,226,0.007,230,0.408,234,0.595,236,0.332,237,2.101,243,0.65,244,1.617,248,0.926,260,1.945,261,2.147,281,2.799,297,1.77,301,2.576,302,2.576,311,4.038,312,3.542,393,3.624,394,4.978,395,3.411,396,3.411,397,3.411,398,3.624,399,4.086,400,4.086,409,3.228,410,3.411,486,5.283,487,5.283,488,5.283,489,5.283]],["title/classes/CsdlStructuredType.html",[234,0.313,296,2.706]],["body/classes/CsdlStructuredType.html",[3,0.111,4,0.098,5,0.111,6,0.12,8,0.071,9,0.316,10,0.241,14,0.172,15,0.118,16,1.013,17,0.011,19,0.372,24,0.156,35,1.079,51,1.177,71,0.165,165,1.235,170,1.18,199,1.247,222,0.111,224,0.006,225,0.008,226,0.006,230,0.429,234,0.58,236,0.305,237,2.168,243,0.636,244,1.486,248,1.359,293,2.821,294,4.546,295,2.691,296,4.823,297,2.78,298,5.357,299,5.692,300,5.357,301,3.946,302,3.946,310,2.278,311,2.466,312,3.356,313,2.821,314,3.871,315,3.136,316,3.332,317,3.871,349,3.568,356,4.258,358,4.258,359,4.258,490,3.863,491,3.863,492,3.863]],["title/classes/CsdlTerm.html",[234,0.313,279,2.561]],["body/classes/CsdlTerm.html",[3,0.109,4,0.096,5,0.109,6,0.123,8,0.069,9,0.234,10,0.247,14,0.177,15,0.125,16,0.88,17,0.011,18,1.311,24,0.149,50,2.155,53,2.093,56,2.155,58,2.155,71,0.155,165,1.248,170,0.885,222,0.109,224,0.006,225,0.008,226,0.006,230,0.445,234,0.554,236,0.298,237,2.235,243,0.593,244,1.455,248,1.432,261,3.126,266,3.309,267,3.492,268,3.46,270,3.542,273,3.069,274,2.905,275,2.761,276,3.627,277,2.633,278,3.261,279,3.816,280,5.279,281,4.076,282,5.279,493,4.754,494,4.754,495,4.754,496,4.754,497,4.754,498,4.754,499,4.754,500,4.754,501,4.754,502,4.754,503,4.754]],["title/classes/CsdlTypeDefinition.html",[234,0.313,465,3.079]],["body/classes/CsdlTypeDefinition.html",[1,1.575,3,0.118,4,0.103,5,0.118,6,0.122,8,0.075,9,0.246,10,0.246,14,0.172,15,0.127,16,0.907,17,0.011,18,1.326,19,0.394,24,0.103,50,2.21,56,2.21,58,2.21,71,0.159,165,1.24,170,1.225,222,0.118,224,0.007,225,0.008,226,0.007,230,0.444,234,0.385,236,0.323,237,2.216,243,0.526,244,1.575,248,1.415,261,3.206,266,4.045,268,4.371,270,4.006,277,2.852,291,2.165,292,3.781,310,2.414,409,4.822,465,4.831,504,5.148,505,7.891,506,5.148,507,5.148,508,5.148,509,5.148,510,5.148,511,5.148,512,5.148,513,5.148]],["title/interfaces/EnumTypeField.html",[0,1.283,60,1.966]],["body/interfaces/EnumTypeField.html",[0,2.369,1,2.008,2,1.454,3,0.071,4,0.062,5,0.071,6,0.045,7,1.574,8,0.045,9,0.23,10,0.132,11,2.45,12,2.45,13,2.45,14,0.179,15,0.124,16,0.971,17,0.012,18,1.228,19,0.354,20,1.512,21,1.141,22,1.798,23,1.039,24,0.171,25,1.512,26,1.454,27,2.248,28,2.931,29,1.94,30,1.643,31,2.859,32,2.103,33,1.304,34,1.106,35,0.689,36,0.921,37,1.106,38,1.039,39,2.349,40,2.015,41,2.349,42,2.349,43,2.17,44,2.015,45,1.351,46,1.643,47,1.351,48,2.595,49,1.334,50,0.868,51,0.751,52,2.103,53,1.258,54,1.26,55,1.817,56,0.868,57,2.405,58,0.868,59,1.401,60,2.595,61,1.401,62,2.45,63,1.643,64,1.643,65,1.643,66,1.643,67,1.574,68,1.643,69,1.643,70,1.643,71,0.173,72,2.499,73,1.643,74,1.643,75,1.643,76,1.643,77,1.643,78,1.401,79,1.643,80,1.179,81,1.643,82,1.643,83,1.643,84,1.643,85,1.643,86,1.643,87,1.643,88,1.643,89,1.643,90,1.643,91,1.643,92,1.643,93,1.643,94,1.643,95,1.643,96,2.533,97,1.406,98,2.327,99,1.758,100,1.649,101,2.256,102,2.256,103,2.771,104,1.643,105,2.45,106,1.643,107,1.454,108,1.643,109,1.643,110,3.012,111,1.879,112,1.838,113,1.973,114,3.386,115,2.711,116,2.931,117,2.45,118,1.218,119,1.643,120,2.45,121,2.809,122,3.078,123,1.643,124,1.643,125,1.643,126,3.221,127,2.174,128,2.809,129,2.931,130,1.643,131,2.256,132,1.643,133,3.25,134,0.779,135,1.512,136,1.643,137,1.574,138,1.574,139,1.643,140,1.643,141,1.643,142,1.643,143,2.256,144,0.496,145,1.643,146,2.45,147,2.45,148,2.499,149,2.45,150,2.349,151,1.574,152,1.643,153,1.454,154,2.17,155,1.643,156,2.499,157,1.512,158,1.512,159,1.512,160,2.17,161,1.574,162,1.512,163,1.574,164,2.256,165,0.437,166,0.796,167,1.401,168,1.512,169,2.187,170,1.142,171,1.304,172,2.17,173,2.256,174,1.454,175,1.512,176,1.574,177,1.574,178,1.351,179,1.416,180,1.304,181,1.141,182,1.401,183,1.351,184,0.819,185,1.401,186,0.631,187,1.106,188,1.454,189,1.401,190,1.512,191,1.574,192,1.574,193,1.574,194,1.401,195,1.512,196,2.256,197,3.356,198,1.071,199,0.796,200,1.574,201,2.09,202,1.179,203,2.09,204,1.574,205,2.015,206,1.574,207,2.256,208,1.454,209,2.256,210,1.512,211,1.351,212,1.879,213,1.574,214,1.401,215,1.574,216,1.304,217,2.349,218,2.09,219,0.949,220,1.574,221,1.574,222,0.071,223,1.141,224,0.004,225,0.006,226,0.004]],["title/classes/Field.html",[55,1.647,234,0.313]],["body/classes/Field.html",[1,1.378,3,0.069,4,0.06,5,0.069,6,0.088,8,0.079,9,0.169,10,0.086,14,0.142,15,0.103,17,0.012,19,0.608,24,0.06,26,4.155,32,2.059,33,1.894,34,1.606,35,1.339,36,1.338,38,1.509,50,0.838,51,0.725,53,0.814,54,1.216,55,2.128,56,0.838,57,0.944,58,0.838,61,0.609,71,0.136,98,2.856,144,1.332,154,2.113,156,2.447,165,1.021,166,2.271,170,0.557,179,0.916,195,1.459,198,1.034,199,0.768,213,1.52,218,1.352,219,0.916,222,0.069,224,0.004,225,0.006,226,0.004,230,0.287,234,0.337,235,1.658,236,0.188,238,1.76,240,1.829,241,1.829,242,1.829,243,0.24,244,0.916,245,1.738,246,1.738,254,1.658,255,1.829,256,1.658,258,1.738,259,1.658,260,1.994,261,1.216,270,1.52,273,1.932,274,1.829,275,1.738,276,1.738,278,3.09,279,1.829,280,2.053,281,1.585,282,2.053,293,1.738,294,1.658,297,1.003,298,1.932,300,1.932,301,1.459,302,1.459,311,1.52,313,1.738,314,1.829,315,1.932,317,1.829,318,2.198,324,2.198,325,2.198,333,1.932,335,3.09,336,2.624,337,2.053,343,2.38,347,2.198,348,2.386,352,2.053,353,2.38,354,2.38,372,2.053,378,3.09,379,2.198,382,2.053,383,2.198,384,2.198,395,1.932,396,1.932,397,1.932,399,1.829,400,1.829,409,1.829,410,1.932,454,3.582,459,2.624,465,2.198,478,2.624,479,2.38,514,2.624,515,6.627,516,2.993,517,4.505,518,7.78,519,0.704,520,2.624,521,2.198,522,3.582,523,1.304,524,2.624,525,3.949,526,2.624,527,2.624,528,5.407,529,2.993,530,2.993,531,2.993,532,2.993,533,2.993,534,2.993,535,2.993,536,2.993,537,2.993,538,2.993,539,2.993,540,2.993,541,2.993,542,2.993,543,2.993,544,2.993,545,2.993,546,2.993,547,2.993,548,2.993,549,2.993,550,2.993,551,2.993,552,2.993,553,2.993,554,1.932,555,2.993,556,2.993,557,2.993,558,2.993,559,2.993,560,2.993,561,2.993,562,2.993,563,2.993,564,2.993,565,2.993,566,2.993,567,2.993,568,2.993,569,2.993,570,2.993,571,2.993,572,4.308,573,2.993,574,2.993,575,2.993,576,2.993,577,2.993,578,2.993,579,2.993,580,2.993,581,2.993,582,2.993,583,2.993,584,2.993,585,2.993,586,2.993,587,2.993,588,2.993,589,2.993,590,2.993,591,2.993,592,2.993,593,2.993,594,2.993,595,2.993,596,2.993,597,2.993,598,2.993,599,2.993,600,2.993,601,2.993,602,2.993,603,2.993,604,2.993,605,2.993,606,2.993,607,2.993,608,2.993,609,2.993,610,2.993,611,2.993,612,2.993,613,2.993,614,2.993,615,2.993,616,2.624,617,2.157,618,4.505,619,5.417,620,2.993,621,2.993,622,2.993,623,2.198,624,2.993,625,2.993,626,6.027,627,4.505,628,2.993,629,2.993,630,2.993,631,2.993,632,2.993,633,7.868,634,2.993,635,4.505,636,2.993,637,4.505,638,2.993,639,2.624,640,2.993,641,2.993,642,2.993,643,2.993,644,2.993,645,2.993,646,2.993,647,2.993,648,2.993,649,2.993,650,2.993,651,2.993,652,2.993,653,2.993,654,2.939,655,2.993,656,2.053,657,1.962,658,2.993,659,2.198,660,2.993,661,5.417,662,4.505,663,5.417,664,1.606,665,2.993,666,2.993,667,2.993,668,2.993,669,2.993,670,2.993,671,2.38,672,2.993,673,2.993,674,1.52]],["title/classes/ODataAnnotation.html",[234,0.313,675,2.561]],["body/classes/ODataAnnotation.html",[3,0.146,4,0.128,5,0.146,6,0.116,8,0.093,9,0.281,10,0.183,14,0.151,15,0.122,17,0.011,19,0.489,24,0.128,71,0.128,197,4.012,222,0.146,224,0.008,225,0.01,226,0.008,230,0.398,234,0.478,236,0.401,243,0.511,519,1.503,675,4.587,676,6.388,677,7.507,678,7.507,679,7.507,680,3.71,681,4.382,682,4.692]],["title/classes/ODataApi.html",[234,0.313,683,2.322]],["body/classes/ODataApi.html",[3,0.063,4,0.055,5,0.063,6,0.123,8,0.04,9,0.157,10,0.237,14,0.175,15,0.127,16,0.499,17,0.012,19,0.574,21,1.005,22,2.218,23,0.915,24,0.055,29,1.857,38,2.422,49,1.658,52,1.596,61,0.855,71,0.17,97,1.19,98,2.153,99,1.038,110,2.049,112,1.434,113,0.973,127,2.258,134,1.141,143,2.496,144,0.992,154,1.97,165,1.209,166,1.314,172,1.28,179,1.759,184,0.721,186,1.333,187,2.049,189,2.596,190,2.803,191,2.599,192,2.599,193,1.386,194,2.596,195,3.026,214,1.233,216,1.766,222,0.191,223,2.115,224,0.004,225,0.005,226,0.004,227,1.663,228,0.88,230,0.446,232,1.616,234,0.204,236,0.171,238,1.365,243,0.218,519,0.642,523,1.189,617,0.835,623,3.085,639,2.393,654,1.331,664,1.497,683,2.326,684,2.73,685,5.119,686,5.038,687,2.326,688,4.2,689,3.681,690,4.2,691,4.2,692,4.2,693,3.681,694,4.2,695,3.681,696,4.2,697,4.2,698,2.973,699,4.2,700,4.2,701,3.681,702,1.83,703,4.2,704,1.546,705,3.512,706,2.73,707,2.73,708,2.73,709,2.73,710,2.73,711,2.73,712,4.071,713,2.73,714,2.73,715,2.73,716,2.973,717,2.73,718,2.73,719,2.326,720,2.73,721,1.446,722,4.2,723,2.73,724,3.681,725,2.73,726,4.2,727,2.73,728,4.2,729,2.73,730,4.2,731,2.73,732,3.681,733,2.73,734,4.2,735,2.73,736,3.681,737,2.73,738,4.2,739,2.73,740,4.2,741,2.73,742,4.2,743,2.73,744,4.2,745,2.73,746,4.2,747,2.73,748,3.681,749,2.73,750,4.2,751,3.327,752,2.73,753,1.762,754,4.2,755,2.73,756,4.2,757,2.393,758,1.386,759,1.512,760,4.2,761,2.73,762,1.873,763,1.873,764,1.762,765,1.873,766,2.73,767,2.439,768,2.566,769,2.393,770,1.446,771,2.171,772,3.34,773,2.73,774,3.34,775,1.873,776,4.2,777,2.73,778,2.73,779,2.73,780,2.73,781,2.393,782,2.005,783,2.005,784,2.73,785,2.73,786,2.73,787,2.73,788,1.331,789,1.28,790,2.171,791,2.171,792,2.73,793,2.005,794,2.73,795,2.73,796,1.446,797,2.73,798,2.73,799,2.73,800,2.73,801,4.2,802,2.73,803,4.2,804,2.73,805,2.73,806,2.73,807,2.73,808,4.2,809,2.73,810,2.73,811,2.73,812,2.73,813,3.616,814,2.73,815,2.73,816,2.73,817,2.73,818,2.73,819,2.73,820,2.73,821,2.73,822,2.73,823,2.712,824,2.73,825,2.393,826,4.2,827,2.73,828,2.73,829,2.73,830,2.73,831,2.73,832,2.73,833,2.73,834,2.73,835,2.73,836,2.73,837,2.73,838,5.748,839,4.222,840,2.73,841,5.748,842,5.748,843,2.73,844,2.73,845,2.73,846,4.2,847,2.73,848,2.881,849,2.73,850,2.73,851,2.73,852,2.393,853,2.73,854,2.73,855,2.73,856,2.73,857,2.73]],["title/classes/ODataApiOptions.html",[234,0.313,712,3.333]],["body/classes/ODataApiOptions.html",[3,0.117,4,0.102,5,0.117,6,0.124,8,0.074,9,0.245,10,0.243,14,0.162,15,0.124,16,0.985,17,0.012,19,0.552,24,0.102,32,2.742,71,0.102,98,3.034,99,2.742,100,2.572,101,3.518,102,3.518,103,3.636,134,0.718,156,3.259,160,3.383,168,3.518,169,2.572,171,3.034,172,3.775,173,3.187,174,3.383,222,0.117,224,0.007,225,0.008,226,0.007,227,2.124,230,0.45,234,0.381,236,0.32,243,0.408,519,1.2,523,2.221,623,3.745,702,2.847,704,1.876,712,5.198,774,5.198,790,4.054,858,5.098,859,3.319,860,2.258,861,6.536,862,5.098,863,5.098,864,5.098,865,5.098,866,5.098,867,5.098,868,5.098,869,5.098,870,4.469,871,5.098,872,6.536,873,4.469,874,4.054,875,4.054,876,4.469,877,4.469,878,4.469,879,4.469,880,4.469,881,4.469,882,4.469,883,5.098,884,4.054,885,5.098,886,4.469,887,5.098,888,4.469,889,5.098,890,4.469]],["title/classes/ODataBatchRequest.html",[234,0.313,891,3.674]],["body/classes/ODataBatchRequest.html",[3,0.068,4,0.06,5,0.068,6,0.099,8,0.094,9,0.168,10,0.155,14,0.172,15,0.106,17,0.012,18,1,19,0.577,20,2.633,21,1.096,22,1.458,23,0.998,24,0.09,51,0.721,71,0.109,96,2.665,100,2.3,112,1.684,115,1.132,122,1.397,127,2.845,134,1.127,144,1.125,150,1.512,154,3.18,165,0.632,166,1.152,170,1.006,184,1.427,186,0.606,187,1.6,215,3.275,219,0.911,222,0.124,223,1.652,224,0.004,225,0.006,226,0.004,227,1.954,228,0.94,229,1.65,230,0.342,232,1.099,234,0.336,236,0.187,238,2.096,243,0.238,273,1.923,522,3.569,523,1.297,528,1.82,616,2.611,617,2.429,654,2.188,664,2.913,674,2.279,683,3.573,704,1.096,751,3.442,753,2.898,758,1.512,759,1.65,770,2.861,813,3.925,891,4.734,892,2.611,893,4.734,894,4.488,895,4.488,896,3.33,897,2.978,898,2.978,899,2.978,900,4.488,901,5.443,902,2.978,903,4.488,904,4.488,905,2.978,906,2.978,907,2.861,908,3.137,909,1.82,910,3.941,911,2.377,912,1.578,913,3.674,914,2.611,915,5.401,916,3.934,917,4.488,918,3.934,919,2.978,920,2.978,921,4.738,922,4.488,923,4.488,924,4.488,925,3.934,926,2.978,927,4.488,928,2.978,929,3.934,930,2.978,931,2.978,932,2.188,933,2.978,934,2.368,935,2.978,936,2.742,937,5.401,938,2.611,939,6.012,940,2.368,941,4.295,942,2.611,943,4.734,944,3.934,945,2.978,946,2.611,947,2.978,948,2.978,949,3.934,950,2.978,951,2.978,952,2.978,953,6.779,954,2.978,955,4.734,956,2.978,957,2.611,958,2.978,959,4.488,960,2.978,961,2.607,962,2.978,963,2.978,964,4.124,965,6.012,966,2.978,967,2.043,968,2.043,969,5.401,970,4.488,971,1.82,972,2.978,973,2.978,974,2.368,975,4.488,976,5.401,977,4.416,978,2.978,979,6.012,980,3.492,981,3.967,982,5.401,983,5.401,984,2.978,985,2.978,986,2.978,987,2.978,988,2.978,989,2.978,990,2.043,991,3.079,992,2.978,993,2.978,994,2.978,995,4.488,996,2.611,997,1.923,998,2.611,999,4.488,1000,1.923,1001,2.611,1002,4.734,1003,2.611,1004,4.488,1005,2.978,1006,4.488,1007,1.887,1008,2.978,1009,2.188,1010,2.043,1011,2.188,1012,2.978,1013,2.978,1014,2.978,1015,4.488,1016,5.401,1017,2.611,1018,2.043,1019,4.488,1020,2.978,1021,2.368,1022,3.934,1023,2.978,1024,3.297,1025,2.978,1026,2.978,1027,2.978,1028,2.978,1029,2.978,1030,2.978,1031,2.368,1032,2.043,1033,2.368,1034,2.978,1035,2.978,1036,2.978,1037,7.41,1038,4.488,1039,2.377,1040,6.012,1041,2.978,1042,6.45,1043,4.488,1044,2.978,1045,2.978,1046,2.978,1047,5.401,1048,2.978,1049,2.978,1050,2.978,1051,2.978,1052,1.73,1053,2.978,1054,2.978,1055,2.978,1056,2.978,1057,2.368,1058,2.368,1059,2.978,1060,2.978,1061,2.978,1062,2.978,1063,2.978,1064,2.978,1065,2.978,1066,2.978,1067,2.978,1068,2.978,1069,2.978,1070,2.978,1071,2.978,1072,2.978,1073,2.978]],["title/classes/ODataCache.html",[234,0.313,705,2.561]],["body/classes/ODataCache.html",[0,1.196,3,0.09,4,0.079,5,0.09,6,0.12,8,0.057,9,0.205,10,0.227,14,0.15,15,0.12,16,0.65,17,0.012,18,1.27,19,0.55,22,2.422,23,1.309,24,0.11,29,2.123,51,1.528,71,0.159,110,2.828,111,1.588,126,3.086,134,1.099,135,3.331,144,0.625,166,1.619,167,1.765,182,2.47,183,3.4,184,1.805,185,2.47,186,1.463,222,0.182,224,0.005,225,0.007,226,0.005,227,1.777,228,1.146,229,3.029,230,0.434,232,1.614,234,0.292,236,0.245,243,0.313,248,1.106,297,2.563,519,0.92,523,1.702,617,2.091,705,3.341,751,4.161,753,4.411,758,3.203,759,2.165,770,4.053,813,4.256,859,2.777,940,4.349,991,2.681,1021,3.108,1074,3.426,1075,4.687,1076,5.766,1077,4.349,1078,4.349,1079,4.349,1080,4.349,1081,4.349,1082,4.349,1083,3.983,1084,3.341,1085,5.468,1086,2.681,1087,3.908,1088,4.017,1089,3.908,1090,5.018,1091,3.908,1092,3.751,1093,3.908,1094,4.017,1095,3.908,1096,3.108,1097,3.908,1098,4.017,1099,4.643,1100,3.908,1101,5.282,1102,3.908,1103,3.751,1104,3.908,1105,3.908,1106,3.108,1107,3.426,1108,3.426,1109,4.793,1110,2.165,1111,3.426,1112,3.426,1113,2.87,1114,3.426,1115,3.426,1116,3.426,1117,4.793,1118,3.426,1119,3.426,1120,3.426,1121,3.426,1122,3.426,1123,3.426,1124,6.842,1125,3.426,1126,3.426,1127,4.793,1128,3.426,1129,3.426,1130,3.426,1131,3.426,1132,3.426]],["title/interfaces/ODataCacheEntry.html",[0,1.283,1099,2.706]],["body/interfaces/ODataCacheEntry.html",[0,1.453,2,2.227,3,0.109,4,0.095,5,0.109,6,0.069,8,0.069,9,0.234,10,0.179,14,0.125,15,0.102,17,0.012,18,1.292,19,0.588,22,2.266,23,1.591,24,0.125,29,2.092,51,1.15,110,2.912,111,1.929,126,3.345,134,1.15,135,3.611,144,0.759,166,1.219,167,2.145,182,2.145,183,3.506,184,1.255,185,2.145,186,1.507,224,0.006,225,0.008,226,0.006,234,0.355,297,2.336,519,1.117,523,2.068,617,2.266,705,2.901,751,3.76,758,3.169,759,2.63,770,3.923,813,4.183,859,2.411,940,4.963,991,3.257,1021,3.776,1074,4.162,1075,4.281,1076,5.801,1083,3.457,1084,2.901,1088,3.488,1090,5.8,1092,3.257,1094,3.488,1098,3.488,1099,4.781,1101,5.439,1103,3.257,1106,3.776,1107,4.162,1108,4.162,1109,5.471,1110,2.63,1111,4.162,1112,4.162,1113,3.488,1114,4.162,1115,4.162,1116,4.162,1117,5.471,1118,4.162,1119,4.162,1120,4.162,1121,4.162,1122,4.162,1123,4.162,1124,7.159,1125,4.162,1126,4.162,1127,5.471,1128,4.162,1129,4.162,1130,4.162,1131,4.162,1132,4.162]],["title/classes/ODataCallable.html",[234,0.313,763,2.875]],["body/classes/ODataCallable.html",[3,0.116,4,0.102,5,0.116,6,0.124,8,0.074,9,0.244,10,0.234,14,0.166,15,0.125,16,0.933,17,0.012,19,0.551,24,0.102,38,2.775,71,0.162,97,1.382,112,1.423,134,0.918,144,0.812,179,2.405,184,1.342,186,1.034,194,2.295,205,3.31,219,2.204,220,3.657,221,3.657,222,0.165,224,0.007,225,0.008,226,0.007,227,2.119,228,1.366,230,0.447,232,1.327,234,0.38,236,0.319,243,0.407,519,1.195,687,3.612,698,2.95,702,2.841,704,1.87,716,4.671,719,3.612,721,2.691,763,4.473,788,2.477,789,3.058,860,2.253,936,3.104,1133,5.08,1134,4.473,1135,6.521,1136,5.08,1137,5.08,1138,5.08,1139,5.29,1140,5.08,1141,5.08,1142,5.08,1143,4.21,1144,5.08,1145,3.104,1146,5.08,1147,3.485,1148,3.731,1149,5.08,1150,6.521,1151,5.08,1152,5.08,1153,5.08,1154,5.08,1155,3.104,1156,5.08,1157,4.04,1158,2.691,1159,3.731,1160,3.731,1161,3.731,1162,3.28,1163,3.485,1164,4.453]],["title/classes/ODataCallableParser.html",[234,0.313,1139,3.079]],["body/classes/ODataCallableParser.html",[3,0.104,4,0.091,5,0.104,6,0.12,8,0.066,9,0.227,10,0.223,14,0.171,15,0.126,16,0.718,17,0.012,19,0.346,24,0.122,27,2.767,52,1.722,53,1.232,61,1.231,71,0.164,97,1.629,99,2.299,134,1.12,144,0.724,166,1.162,178,3.521,179,2.585,180,2.543,181,2.226,184,1.197,186,1.386,198,2.353,205,3.166,218,3.421,222,0.182,224,0.006,225,0.008,226,0.006,227,1.966,228,1.267,230,0.434,232,1.386,234,0.452,236,0.284,243,0.362,244,1.386,519,1.066,617,1.386,680,3.513,682,3.327,687,3.35,698,3.513,702,2.635,704,1.667,719,3.772,721,2.399,788,2.949,789,2.124,859,3.071,1139,4.443,1155,4.441,1165,3.97,1166,3.955,1167,3.458,1168,6.049,1169,4.529,1170,5.416,1171,4.529,1172,4.529,1173,4.529,1174,4.529,1175,4.529,1176,4.443,1177,5.302,1178,4.529,1179,5.563,1180,3.97,1181,2.924,1182,3.107,1183,3.97,1184,3.97,1185,3.327,1186,3.327,1187,5.302,1188,3.97,1189,5.302,1190,3.97,1191,2.924,1192,3.97,1193,3.97,1194,2.63,1195,3.97,1196,5.302,1197,3.97,1198,2.509,1199,2.509,1200,3.97,1201,3.97,1202,3.97,1203,3.97]],["title/classes/ODataCollection.html",[234,0.313,768,2.561]],["body/classes/ODataCollection.html",[3,0.063,4,0.056,5,0.063,6,0.122,8,0.04,9,0.159,10,0.212,14,0.138,15,0.117,16,0.505,17,0.012,18,1.022,19,0.443,22,2.408,23,0.928,24,0.056,27,1.726,49,0.799,59,1.919,61,1.051,71,0.149,97,1.393,107,1.993,112,1.447,113,0.988,118,1.089,134,1.178,144,1.205,148,2.822,165,0.727,166,1.326,186,0.564,202,1.615,216,2.173,219,1.3,222,0.175,224,0.004,225,0.005,226,0.004,227,1.679,228,0.89,230,0.442,232,1.592,234,0.207,236,0.174,238,0.9,243,0.222,248,1.016,260,1.02,275,3.365,554,2.743,654,3.613,656,2.915,657,3.576,664,2.687,674,1.407,704,1.02,758,1.407,759,1.535,767,1.609,768,3.157,771,2.204,783,3.795,859,2.157,860,1.468,911,4.185,912,3.925,971,4.782,997,1.789,1007,2.436,1033,3.379,1083,2.862,1176,3.121,1194,1.609,1204,2.771,1205,5.167,1206,4.529,1207,5.167,1208,4.529,1209,5.167,1210,3.724,1211,3.724,1212,3.121,1213,3.31,1214,5.793,1215,3.724,1216,5.793,1217,4.255,1218,5.167,1219,4.529,1220,4.529,1221,4.529,1222,4.249,1223,2.771,1224,3.74,1225,3.54,1226,2.771,1227,4.606,1228,2.771,1229,2.771,1230,2.771,1231,3.724,1232,2.771,1233,3.724,1234,2.771,1235,4.249,1236,2.771,1237,2.771,1238,3.724,1239,2.771,1240,2.771,1241,2.771,1242,3.724,1243,2.771,1244,4.249,1245,2.771,1246,4.249,1247,2.771,1248,4.249,1249,6.248,1250,2.771,1251,4.249,1252,2.771,1253,2.771,1254,2.771,1255,2.771,1256,2.771,1257,2.771,1258,2.771,1259,2.771,1260,2.429,1261,2.771,1262,2.429,1263,2.771,1264,2.429,1265,2.771,1266,3.379,1267,5.778,1268,4.607,1269,5.778,1270,3.724,1271,3.001,1272,2.429,1273,5.793,1274,4.249,1275,1.609,1276,1.609,1277,4.249,1278,4.249,1279,4.249,1280,5.167,1281,3.922,1282,7.335,1283,5.078,1284,3.724,1285,2.429,1286,2.771,1287,3.724,1288,3.724,1289,3.724,1290,6.206,1291,2.429,1292,4.529,1293,2.771,1294,2.771,1295,2.771,1296,2.771,1297,2.771,1298,4.249,1299,5.167,1300,4.249,1301,6.248,1302,4.249,1303,4.249,1304,4.249,1305,4.249,1306,4.249,1307,2.771,1308,2.771,1309,2.771,1310,3.121,1311,2.771,1312,2.771,1313,2.771,1314,2.429,1315,2.429,1316,2.429,1317,2.771,1318,2.771,1319,4.249,1320,2.771,1321,2.771,1322,2.771,1323,2.771,1324,3.724,1325,2.429,1326,5.167,1327,5.793,1328,3.724,1329,3.379,1330,3.724,1331,2.771,1332,4.249,1333,2.771,1334,7.26,1335,4.249,1336,2.771,1337,2.771,1338,2.771,1339,2.771,1340,4.249,1341,2.771,1342,4.249,1343,2.771,1344,2.771,1345,2.771,1346,2.771,1347,2.429,1348,2.771,1349,2.771,1350,2.771,1351,2.771]],["title/classes/ODataCountResource.html",[234,0.313,1352,3.674]],["body/classes/ODataCountResource.html",[3,0.089,4,0.078,5,0.089,6,0.099,8,0.057,9,0.204,10,0.234,14,0.157,15,0.124,17,0.012,19,0.584,22,2.575,23,1.303,24,0.078,36,1.156,49,2.071,61,1.612,71,0.166,97,1.631,113,1.387,115,2.592,127,2.141,134,0.886,144,0.872,170,1.015,181,1.432,187,1.943,199,1.399,202,1.479,219,1.19,222,0.19,223,2.006,224,0.005,225,0.007,226,0.005,228,1.142,229,3.019,230,0.454,232,1.724,234,0.291,236,0.244,248,1.196,291,3.576,297,1.826,519,1.605,523,1.695,528,3.845,657,3.691,896,3.485,907,3.803,908,4.17,909,2.377,910,4.547,911,4.557,912,3.333,967,3.739,968,3.739,997,2.512,1007,3.213,1009,2.857,1010,4.317,1011,4.004,1039,2.061,1052,3.166,1167,2.768,1213,2.061,1225,2.658,1227,3.331,1271,3.96,1281,3.777,1329,3.093,1352,5.977,1353,3.89,1354,4.004,1355,3.739,1356,4.004,1357,4.004,1358,4.622,1359,3.333,1360,3.093,1361,3.093,1362,4.387,1363,3.093,1364,3.89,1365,3.89,1366,4.622,1367,3.89,1368,2.259,1369,3.093,1370,2.857,1371,4.402,1372,3.093,1373,3.331,1374,2.857,1375,2.768,1376,3.093,1377,3.093,1378,2.857,1379,3.093,1380,3.093,1381,2.857,1382,3.093,1383,3.655,1384,3.093,1385,2.857,1386,3.093,1387,2.857,1388,3.093,1389,2.857,1390,3.093,1391,3.093,1392,3.093,1393,3.093,1394,3.093,1395,3.093,1396,2.857,1397,2.857,1398,3.89,1399,3.89,1400,3.89,1401,3.093,1402,3.89,1403,3.89,1404,3.41,1405,3.41]],["title/classes/ODataEntitiesMeta.html",[234,0.313,1225,2.044]],["body/classes/ODataEntitiesMeta.html",[3,0.08,4,0.07,5,0.08,6,0.119,8,0.051,9,0.222,10,0.212,14,0.168,15,0.117,17,0.012,18,0.541,19,0.386,21,1.285,24,0.13,29,1.373,31,2.198,35,1.121,36,1.499,49,1.007,57,1.869,71,0.149,72,2.28,78,1.577,80,2.468,97,1.482,100,1.245,114,3.08,118,2.328,134,1.224,144,1.038,166,2.013,169,2.315,170,1.209,171,1.468,186,1.206,222,0.158,224,0.004,225,0.007,226,0.004,228,1.057,230,0.446,232,1.506,234,0.486,236,0.219,238,1.64,291,3.113,297,2.48,462,3.968,519,0.822,617,1.068,654,1.702,657,1.521,664,2.113,796,3.922,860,1.744,913,3.084,961,2.027,1007,3.298,1039,1.849,1213,3.14,1225,3.166,1275,3.442,1276,3.442,1375,3.009,1406,2.564,1407,5.602,1408,4.769,1409,4.353,1410,4.353,1411,4.769,1412,4.353,1413,4.353,1414,3.491,1415,2.776,1416,2.776,1417,5.082,1418,2.776,1419,2.776,1420,3.491,1421,5.273,1422,3.491,1423,3.707,1424,3.491,1425,4.353,1426,3.491,1427,2.776,1428,2.776,1429,3.707,1430,2.776,1431,3.06,1432,3.491,1433,3.491,1434,3.491,1435,3.491,1436,3.491,1437,3.491,1438,3.491,1439,3.491,1440,3.491,1441,3.491,1442,3.491,1443,3.491,1444,3.491,1445,3.06,1446,3.491,1447,2.564,1448,2.395,1449,2.564,1450,2.395,1451,2.564,1452,2.564,1453,1.637,1454,2.564,1455,2.564,1456,2.564,1457,3.707,1458,4.353,1459,2.564,1460,4.353,1461,2.564,1462,2.564,1463,3.258,1464,2.564,1465,2.564,1466,4.353,1467,3.707,1468,2.564,1469,2.564,1470,2.564,1471,2.564,1472,2.564,1473,2.564,1474,2.564,1475,2.564,1476,2.564,1477,3.707,1478,2.564,1479,2.564,1480,2.564,1481,2.564,1482,2.564,1483,2.564,1484,2.564,1485,2.564,1486,5.273,1487,3.707,1488,3.707,1489,2.564,1490,2.564,1491,2.395,1492,2.564,1493,2.564,1494,2.564,1495,5.273,1496,4.353,1497,2.564,1498,3.707,1499,2.564,1500,2.564,1501,2.564]],["title/classes/ODataEntityContainer.html",[234,0.313,1502,3.333]],["body/classes/ODataEntityContainer.html",[1,1.709,3,0.128,4,0.112,5,0.128,6,0.122,8,0.081,9,0.259,10,0.16,14,0.139,15,0.118,17,0.012,19,0.601,24,0.112,36,1.659,38,2.85,57,2.372,71,0.158,97,1.443,134,0.786,144,1.107,207,3.835,208,3.528,222,0.128,224,0.007,225,0.009,226,0.007,230,0.436,234,0.418,236,0.35,243,0.447,319,4.895,328,4.895,329,4.895,331,4.895,332,6.068,333,3.605,519,1.314,675,4.597,702,3.015,704,2.055,716,4.785,764,4.857,788,2.723,789,2.619,860,2.392,1145,3.412,1147,3.831,1163,3.831,1453,3.246,1502,5.505,1503,7.32,1504,5.584,1505,4.749,1506,5.584,1507,5.584,1508,4.895,1509,5.584,1510,3.831,1511,3.831]],["title/classes/ODataEntityFieldParser.html",[234,0.313,1512,2.875]],["body/classes/ODataEntityFieldParser.html",[1,1.83,3,0.058,4,0.051,5,0.058,6,0.121,8,0.037,9,0.224,10,0.232,14,0.166,15,0.126,16,0.888,17,0.012,18,0.983,19,0.302,24,0.079,27,1.604,35,1.223,37,1.408,38,1.631,40,1.098,43,1.852,44,2.399,48,3.109,49,1.589,50,1.363,51,1.709,52,1.85,53,1.324,54,1.977,55,2.836,56,1.363,57,1.535,58,1.363,59,2.199,61,1.683,71,0.159,97,1.611,112,1.363,134,1.16,144,0.403,166,1.811,169,2.813,179,2.449,180,2.047,181,1.791,184,0.666,186,1.606,198,1.682,199,1.249,203,1.784,212,1.024,214,1.139,222,0.162,224,0.003,225,0.005,226,0.003,227,1.283,228,0.827,230,0.437,232,1.469,234,0.295,236,0.158,243,0.202,244,1.208,519,0.929,617,2.159,656,2.709,664,2.132,671,2.005,674,1.28,680,2.293,681,1.729,687,2.187,698,2.293,702,1.098,719,2.696,721,1.335,788,2.916,789,1.182,791,2.005,793,4.045,859,2.471,936,1.54,971,3.366,1143,1.628,1155,4.051,1158,1.335,1162,1.628,1166,3.473,1167,3.036,1179,4.045,1181,2.549,1182,2.709,1185,1.852,1191,1.628,1194,2.293,1198,3.051,1199,3.051,1224,2.549,1310,1.852,1359,2.092,1417,2.413,1453,1.182,1512,3.778,1513,2.21,1514,5.242,1515,4.828,1516,3.948,1517,3.14,1518,3.948,1519,2.521,1520,2.521,1521,2.521,1522,2.521,1523,2.521,1524,2.521,1525,2.521,1526,2.521,1527,2.521,1528,2.521,1529,2.521,1530,2.521,1531,2.521,1532,2.9,1533,2.521,1534,2.521,1535,2.521,1536,2.521,1537,2.521,1538,3.14,1539,5.413,1540,2.521,1541,3.461,1542,2.521,1543,2.521,1544,3.461,1545,2.521,1546,2.9,1547,2.521,1548,1.54,1549,3.14,1550,1.852,1551,2.21,1552,4.266,1553,2.21,1554,2.21,1555,3.461,1556,3.14,1557,3.14,1558,2.21,1559,3.461,1560,1.54,1561,3.461,1562,3.14,1563,2.21,1564,2.21,1565,2.21,1566,2.21,1567,2.21,1568,2.21,1569,3.461,1570,2.21,1571,1.852,1572,2.21,1573,2.21,1574,3.14,1575,3.461,1576,3.14,1577,2.21,1578,3.14,1579,3.14,1580,3.168,1581,3.461,1582,2.21,1583,3.14,1584,3.461,1585,2.21,1586,2.709,1587,2.21,1588,2.21,1589,2.21,1590,2.21,1591,3.87,1592,3.461,1593,2.21,1594,2.005,1595,3.14,1596,2.21,1597,4.045,1598,1.852,1599,4.102,1600,2.21,1601,2.21,1602,2.21,1603,5.242,1604,2.21,1605,4.266,1606,4.84,1607,3.461,1608,2.21,1609,2.21,1610,4.38,1611,2.21,1612,2.21,1613,2.21,1614,2.21,1615,2.21,1616,2.21,1617,2.21,1618,3.461,1619,2.21,1620,2.21,1621,2.21,1622,2.21,1623,2.21,1624,2.005,1625,2.21,1626,3.461,1627,2.21,1628,2.21,1629,2.21,1630,2.21,1631,4.266,1632,2.21,1633,2.21,1634,2.21,1635,2.21,1636,2.21,1637,2.21,1638,2.21,1639,1.852,1640,2.005,1641,2.21,1642,2.21,1643,2.005,1644,2.21,1645,2.21,1646,2.21,1647,2.21,1648,2.21,1649,2.21,1650,2.21,1651,2.21]],["title/classes/ODataEntityMeta.html",[234,0.313,1375,2.128]],["body/classes/ODataEntityMeta.html",[3,0.079,4,0.069,5,0.079,6,0.121,8,0.05,9,0.22,10,0.211,14,0.168,15,0.119,17,0.012,18,0.531,19,0.381,21,1.262,24,0.129,29,1.751,31,2.17,35,1.106,49,0.989,57,1.85,71,0.148,72,2.25,78,2.65,80,2.712,97,1.475,100,1.222,114,3.064,118,1.347,134,1.222,144,1.03,166,2.005,169,2.296,170,1.199,171,1.442,186,1.194,222,0.163,224,0.004,225,0.006,226,0.004,228,1.044,230,0.45,232,1.498,234,0.482,236,0.215,238,1.619,291,3.096,297,2.467,462,3.934,519,0.807,572,3.961,617,1.049,654,1.672,657,1.493,664,2.092,796,3.9,860,1.721,913,3.044,961,1.991,1007,3.284,1039,1.816,1213,1.816,1225,2.429,1275,1.991,1276,1.991,1375,3.269,1406,2.518,1407,5.585,1408,4.729,1409,4.309,1410,4.309,1411,4.729,1412,2.518,1413,2.518,1415,2.726,1416,2.726,1417,5.069,1418,2.726,1419,2.726,1421,5.241,1423,2.518,1425,4.309,1427,2.726,1428,2.726,1429,3.659,1430,2.726,1431,3.005,1445,3.005,1447,2.518,1448,2.352,1449,2.518,1450,2.352,1451,2.518,1452,2.518,1453,1.608,1454,2.518,1455,2.518,1456,2.518,1457,3.659,1458,4.309,1459,2.518,1460,4.309,1461,2.518,1462,2.518,1463,3.216,1464,2.518,1465,2.518,1466,4.309,1467,3.659,1468,2.518,1469,2.518,1470,3.659,1471,2.518,1472,2.518,1473,4.309,1474,2.518,1475,4.309,1476,2.518,1477,3.659,1478,4.309,1479,2.518,1480,4.309,1481,2.518,1482,4.309,1483,2.518,1484,4.309,1485,2.518,1486,5.241,1487,3.659,1488,3.659,1489,2.518,1490,2.518,1491,2.352,1492,2.518,1493,2.518,1494,2.518,1495,5.241,1496,4.309,1497,2.518,1498,3.659,1499,2.518,1500,2.518,1501,2.518,1652,3.428,1653,3.428,1654,3.428,1655,3.428,1656,3.428,1657,2.726,1658,3.428,1659,3.428,1660,3.428,1661,3.428,1662,3.428,1663,3.428,1664,3.428,1665,3.428,1666,3.428,1667,3.428,1668,3.428,1669,3.428,1670,3.428,1671,3.428,1672,3.428,1673,3.428,1674,3.428,1675,3.428,1676,3.428]],["title/classes/ODataEntityParser.html",[234,0.313,1539,2.875]],["body/classes/ODataEntityParser.html",[1,1.228,3,0.059,4,0.052,5,0.059,6,0.118,8,0.038,9,0.24,10,0.225,14,0.17,15,0.125,16,0.821,17,0.012,18,0.765,19,0.307,24,0.081,27,2.264,35,1.237,37,1.431,38,1.653,40,1.122,43,2.613,44,1.749,48,2.613,49,1.158,50,0.721,51,1.619,52,0.979,53,0.7,54,1.046,55,2.514,56,0.721,57,0.812,58,0.721,59,1.163,61,1.653,71,0.16,97,1.591,112,1.382,134,1.163,144,0.412,166,1.266,169,2.716,179,2.383,180,2.074,181,1.816,184,1.304,186,1.624,198,2.309,199,1.715,203,2.517,212,2.004,214,2.229,222,0.166,224,0.003,225,0.005,226,0.003,227,1.304,228,0.841,230,0.425,232,1.505,234,0.3,236,0.162,238,1.304,243,0.206,244,0.788,248,0.451,519,0.945,617,2.173,664,2.281,671,3.923,674,1.307,680,2.331,681,1.766,687,2.223,698,2.331,702,1.749,704,1.477,719,2.733,721,1.364,788,2.945,789,1.208,791,2.047,793,4.092,823,2.592,859,2.505,936,1.573,971,3.404,1134,2.754,1143,2.592,1155,4.083,1158,1.364,1162,1.662,1166,3.508,1167,3.067,1179,4.092,1181,2.592,1182,2.754,1185,1.891,1191,1.662,1194,2.331,1198,3.086,1199,3.086,1224,2.592,1310,1.891,1383,1.495,1417,2.453,1453,1.208,1512,3.822,1513,2.257,1514,5.294,1515,2.257,1517,3.192,1532,1.891,1538,2.047,1539,5.51,1541,2.257,1544,2.257,1546,1.891,1548,1.573,1549,3.192,1550,1.891,1551,2.257,1552,4.324,1553,2.257,1554,2.257,1555,3.519,1556,3.192,1557,3.192,1558,2.257,1559,3.519,1560,1.573,1561,3.519,1562,3.192,1563,2.257,1564,2.257,1565,2.257,1566,2.257,1567,2.257,1568,2.257,1569,3.519,1570,2.257,1571,1.891,1572,2.257,1573,2.257,1574,3.192,1575,3.519,1576,3.192,1577,2.257,1578,3.192,1579,3.192,1580,3.2,1581,3.519,1582,2.257,1583,3.192,1584,3.519,1585,2.257,1586,3.384,1587,2.257,1588,2.257,1589,2.257,1590,2.257,1591,4.803,1592,3.519,1593,2.257,1594,2.047,1595,3.192,1596,2.257,1597,4.092,1598,1.891,1599,4.144,1600,2.257,1601,2.257,1602,2.257,1603,5.294,1604,2.257,1605,4.324,1606,4.872,1607,3.519,1608,2.257,1609,2.257,1610,4.431,1611,2.257,1612,2.257,1613,2.257,1614,2.257,1615,2.257,1616,3.519,1617,2.257,1618,3.519,1619,2.257,1620,2.257,1621,2.257,1622,2.257,1623,3.519,1624,2.047,1625,3.519,1626,3.519,1627,2.257,1628,3.519,1629,2.257,1630,2.257,1631,5.609,1632,2.257,1633,2.257,1634,3.519,1635,2.257,1636,2.257,1637,2.257,1638,2.257,1639,1.891,1640,2.047,1641,2.257,1642,2.257,1643,2.047,1644,2.257,1645,2.257,1646,3.519,1647,2.257,1648,2.257,1649,2.257,1650,3.519,1651,2.257,1677,4.014,1678,4.014,1679,4.014,1680,4.014,1681,2.575,1682,2.575,1683,2.575,1684,2.575,1685,2.575,1686,2.575,1687,2.575,1688,2.575,1689,2.575,1690,4.014,1691,2.575,1692,2.575,1693,2.575,1694,2.575,1695,2.575,1696,2.575,1697,2.575,1698,2.575]],["title/classes/ODataEntityService.html",[234,0.313,1699,3.333]],["body/classes/ODataEntityService.html",[3,0.08,4,0.07,5,0.08,6,0.121,8,0.051,10,0.228,14,0.145,15,0.118,17,0.012,19,0.58,20,2.47,21,1.291,22,2.513,23,1.175,24,0.07,25,3.365,29,0.954,36,2.362,51,1.577,61,1.404,71,0.164,80,2.259,96,2.187,97,1.642,115,2.259,131,2.47,134,1.182,148,2.685,165,1.222,186,0.714,202,2.474,222,0.186,224,0.005,225,0.007,226,0.005,228,1.061,230,0.436,232,1.618,234,0.262,236,0.22,243,0.281,248,1.331,335,4.077,519,0.826,617,2.366,657,2.206,664,2.119,704,2.187,757,3.075,758,1.781,759,1.943,767,2.942,768,3.095,813,3.149,860,1.75,907,3.448,971,3.095,1000,2.265,1106,2.79,1110,1.943,1212,5.282,1217,2.577,1227,4.394,1267,5.21,1268,4.727,1271,4.878,1281,1.943,1371,5.462,1373,4.394,1383,3.78,1699,4.028,1700,3.508,1701,4.439,1702,3.72,1703,4.439,1704,5.065,1705,4.439,1706,5.21,1707,5.944,1708,3.508,1709,5.065,1710,3.508,1711,5.705,1712,3.508,1713,3.508,1714,3.508,1715,5.065,1716,3.508,1717,5.065,1718,3.508,1719,3.508,1720,5.944,1721,3.508,1722,5.065,1723,3.508,1724,5.065,1725,3.508,1726,5.065,1727,3.508,1728,2.577,1729,3.508,1730,3.075,1731,3.508,1732,3.508,1733,3.508,1734,3.508,1735,3.075,1736,2.79,1737,3.508,1738,4.439,1739,4.439,1740,3.075,1741,3.508,1742,3.508,1743,3.508,1744,4.028,1745,3.075,1746,3.075,1747,3.075,1748,3.508,1749,5.944,1750,4.077,1751,5.944,1752,5.944,1753,6.508,1754,5.944,1755,5.944,1756,3.508,1757,5.065,1758,3.508,1759,5.944,1760,3.508,1761,3.508,1762,3.508,1763,3.075,1764,3.508,1765,3.508,1766,3.508,1767,3.508,1768,5.065,1769,3.508,1770,3.508,1771,3.508]],["title/classes/ODataEntitySet.html",[234,0.313,764,2.706]],["body/classes/ODataEntitySet.html",[1,1.702,3,0.127,4,0.112,5,0.127,6,0.122,8,0.081,9,0.259,10,0.198,14,0.162,15,0.12,16,0.661,17,0.011,19,0.574,24,0.112,38,2.825,57,2.368,71,0.162,97,1.441,112,1.558,134,0.972,144,0.89,209,3.829,222,0.158,224,0.007,225,0.009,226,0.007,228,1.447,230,0.436,232,1.132,234,0.416,236,0.349,243,0.445,334,4.875,339,4.875,340,6.053,342,4.875,519,1.309,675,4.589,702,3.008,704,2.047,716,4.78,764,4.458,788,2.712,789,2.609,860,2.386,936,3.399,1134,4.737,1143,4.458,1145,3.399,1147,3.816,1158,2.946,1159,4.085,1160,4.085,1161,4.085,1162,3.591,1163,3.816,1453,2.609,1503,7.314,1505,3.816,1510,3.816,1511,3.816,1772,5.562,1773,5.562]],["title/classes/ODataEnumFieldParser.html",[234,0.313,1774,3.079]],["body/classes/ODataEnumFieldParser.html",[1,2.356,3,0.109,4,0.096,5,0.109,6,0.115,8,0.069,9,0.234,10,0.179,14,0.174,15,0.124,16,0.566,17,0.012,18,1.194,19,0.478,24,0.126,35,1.389,37,1.699,38,1.596,44,2.725,55,2.913,57,2.202,60,3.778,61,1.639,71,0.17,97,1.2,134,1.113,144,0.762,169,2.49,178,2.075,179,1.914,180,2.003,181,1.753,198,1.646,201,2.826,210,2.323,211,2.075,212,1.936,222,0.143,224,0.006,225,0.008,226,0.006,228,1.311,230,0.408,232,0.969,234,0.468,236,0.299,243,0.381,244,1.914,519,1.121,674,2.419,680,2.767,681,3.268,702,2.075,788,3.405,789,2.234,839,3.499,859,3.546,874,3.789,1158,3.313,1166,2.767,1167,2.419,1186,3.499,1191,3.076,1453,2.234,1532,4.594,1546,3.499,1550,3.499,1571,3.499,1580,3.313,1586,3.268,1597,3.499,1598,3.499,1599,4.291,1774,5.129,1775,4.176,1776,6.255,1777,4.764,1778,4.764,1779,4.764,1780,4.176,1781,4.176,1782,4.176,1783,3.499,1784,6.121,1785,4.176,1786,3.789,1787,3.789,1788,4.176,1789,4.176,1790,4.176,1791,4.176,1792,4.176,1793,5.483,1794,4.176,1795,5.483,1796,4.176,1797,4.176,1798,4.176,1799,4.176]],["title/classes/ODataEnumParser.html",[234,0.313,1783,3.079]],["body/classes/ODataEnumParser.html",[1,1.823,3,0.101,4,0.089,5,0.101,6,0.12,8,0.065,9,0.223,10,0.222,14,0.174,15,0.127,16,0.708,17,0.012,18,1.116,19,0.456,24,0.12,35,1.323,37,1.579,38,1.484,44,3.138,49,1.277,55,2.341,57,1.396,60,3.378,61,1.637,71,0.169,97,1.518,134,1.09,144,0.708,169,2.82,178,1.929,179,2.061,180,2.506,181,2.193,198,2.327,201,3.254,210,3.284,211,2.934,212,2.736,222,0.165,224,0.006,225,0.008,226,0.006,227,1.936,228,1.249,230,0.432,232,1.37,234,0.446,236,0.278,243,0.354,244,1.355,519,1.042,674,2.249,680,2.572,681,3.038,702,2.596,704,1.63,788,3.284,789,2.077,839,3.253,859,3.419,874,3.522,1158,3.157,1166,3.911,1167,3.419,1186,3.253,1191,2.86,1453,2.077,1517,4.739,1532,3.253,1546,4.377,1550,3.253,1571,3.253,1580,3.157,1586,3.038,1597,3.253,1598,3.253,1599,4.088,1774,4.946,1775,3.882,1780,3.882,1781,3.882,1782,3.882,1783,4.377,1784,5.903,1785,3.882,1786,3.522,1787,3.522,1788,3.882,1789,3.882,1790,3.882,1791,3.882,1792,3.882,1793,5.223,1794,3.882,1795,5.223,1796,3.882,1797,3.882,1798,3.882,1799,3.882,1800,5.959,1801,4.429,1802,4.429,1803,4.429,1804,4.429,1805,4.429,1806,4.429,1807,4.429]],["title/classes/ODataEnumType.html",[234,0.313,762,2.875]],["body/classes/ODataEnumType.html",[1,1.416,3,0.106,4,0.093,5,0.106,6,0.123,8,0.067,9,0.23,10,0.218,14,0.167,15,0.124,16,0.55,17,0.012,18,1.182,19,0.561,24,0.093,29,1.669,38,2.721,55,2.411,57,2.171,61,1.401,71,0.168,97,1.321,112,1.296,134,1.104,144,0.981,179,2.107,184,1.223,194,2.091,201,3.312,211,2.999,212,2.979,222,0.18,224,0.006,225,0.008,226,0.006,227,1.994,228,1.286,230,0.446,232,1.552,234,0.346,236,0.291,238,1.504,243,0.37,295,2.564,344,4.057,349,3.4,490,3.681,491,3.681,492,3.681,519,1.089,675,4.207,702,2.673,704,1.703,716,4.553,762,4.21,788,2.257,789,2.171,860,2.12,936,2.828,1134,4.21,1143,3.962,1145,2.828,1147,3.175,1155,2.828,1157,3.681,1158,2.452,1159,3.4,1160,3.4,1161,3.4,1162,2.988,1163,3.175,1453,2.171,1505,3.175,1510,3.175,1511,3.175,1606,3.175,1774,5.603,1783,5.057,1786,3.681,1787,3.681,1808,8.473,1809,6.137,1810,6.137,1811,6.137,1812,5.379,1813,4.628,1814,6.137,1815,4.628,1816,6.137,1817,4.628,1818,4.628,1819,6.137,1820,4.628,1821,4.628,1822,4.628,1823,4.628,1824,5.379,1825,4.628,1826,4.628]],["title/classes/ODataInMemoryCache.html",[234,0.313,772,3.333]],["body/classes/ODataInMemoryCache.html",[3,0.104,4,0.092,5,0.104,6,0.106,8,0.066,9,0.228,10,0.239,14,0.146,15,0.124,16,0.722,17,0.011,18,1.235,19,0.465,22,2.22,24,0.092,29,2.065,51,1.472,71,0.168,110,1.625,134,0.642,166,1.559,170,1.131,182,2.059,183,3.174,184,1.925,185,2.059,186,1.39,222,0.191,224,0.006,225,0.008,226,0.006,227,1.974,228,1.273,229,3.365,230,0.45,232,1.698,234,0.341,236,0.286,243,0.365,248,1.198,291,3.51,297,2.441,705,5.193,751,4.334,753,5.04,758,2.314,770,4.341,772,4.831,813,4.288,1075,4.167,1076,5.553,1077,4.831,1078,5.795,1079,4.831,1080,4.831,1081,4.831,1082,5.795,1083,3.785,1084,3.712,1086,3.127,1088,3.348,1090,3.348,1092,4.687,1094,3.348,1096,3.625,1098,3.348,1099,3.922,1101,3.348,1103,4.687,1110,2.525,1827,4.558,1828,4.558,1829,3.996,1830,3.996,1831,4.558,1832,4.558,1833,3.996,1834,3.996,1835,3.996,1836,3.996,1837,3.996,1838,3.996,1839,3.996,1840,3.996,1841,3.996,1842,3.348,1843,3.625,1844,3.625,1845,3.625]],["title/classes/ODataInStorageCache.html",[234,0.313,1846,3.333]],["body/classes/ODataInStorageCache.html",[0,1.305,3,0.098,4,0.086,5,0.098,6,0.103,8,0.062,9,0.218,10,0.236,14,0.164,15,0.123,16,0.69,17,0.012,18,1.236,19,0.444,22,2.146,24,0.086,29,2.018,51,1.6,71,0.17,100,1.52,110,1.52,114,2.683,134,0.6,144,0.682,166,1.491,170,1.081,182,1.926,183,3.089,184,1.874,185,1.926,186,1.51,222,0.189,224,0.005,225,0.007,226,0.005,227,1.887,228,1.217,229,3.217,230,0.446,232,1.679,234,0.319,236,0.268,238,1.385,243,0.341,248,1.018,291,3.47,297,2.376,617,2.021,664,2.07,705,5.145,751,4.297,753,4.942,758,2.165,770,4.282,813,4.149,901,3.132,932,3.132,964,2.925,980,2.476,981,3.132,1075,3.984,1076,5.469,1077,4.618,1078,5.639,1079,4.618,1080,4.618,1081,4.618,1082,5.639,1083,3.658,1084,3.548,1086,2.925,1088,3.132,1090,3.132,1092,4.531,1094,3.132,1096,3.391,1098,3.132,1099,4.264,1101,3.132,1103,4.531,1110,2.362,1113,4.265,1829,3.737,1830,3.737,1833,3.737,1834,3.737,1835,3.737,1836,3.737,1837,3.737,1838,3.737,1839,3.737,1840,3.737,1841,3.737,1842,3.132,1843,3.391,1844,3.391,1845,3.391,1846,4.618,1847,3.737,1848,4.264,1849,4.264,1850,4.264,1851,3.391,1852,6.216,1853,3.737,1854,3.737,1855,3.737,1856,3.737,1857,3.737,1858,3.737,1859,3.737,1860,3.737,1861,3.737,1862,3.737]],["title/classes/ODataMeta.html",[234,0.313,1407,2.875]],["body/classes/ODataMeta.html",[3,0.086,4,0.076,5,0.086,6,0.119,8,0.055,9,0.266,10,0.203,14,0.168,15,0.117,17,0.012,18,0.583,19,0.407,21,1.384,24,0.135,29,1.448,31,2.319,35,1.182,49,1.085,57,1.948,71,0.135,72,3.035,78,1.699,80,2.554,97,1.508,100,1.341,114,2.88,118,1.478,134,1.23,144,1.074,166,1.984,169,2.395,170,1.151,171,1.582,186,1.257,222,0.142,224,0.005,225,0.007,226,0.005,227,1.73,228,1.115,230,0.427,232,1.257,234,0.502,236,0.236,243,0.301,297,2.536,462,3.253,519,0.885,617,1.151,654,1.834,657,1.639,664,2.203,796,4.009,860,1.839,913,3.253,961,2.185,1007,3.182,1039,1.993,1213,1.993,1225,2.596,1275,2.185,1276,2.185,1375,2.703,1406,2.763,1407,5.192,1408,3.91,1409,4.538,1410,4.538,1411,3.91,1412,2.763,1413,2.763,1417,5.081,1421,5.207,1423,2.763,1425,3.91,1429,3.91,1447,4.538,1448,2.581,1449,2.763,1450,3.652,1451,4.538,1452,2.763,1453,1.764,1454,2.763,1455,2.763,1456,2.763,1457,3.91,1458,4.538,1459,2.763,1460,4.538,1461,2.763,1462,2.763,1463,3.437,1464,2.763,1465,2.763,1466,4.538,1467,3.91,1468,2.763,1469,2.763,1470,2.763,1471,2.763,1472,2.763,1473,2.763,1474,2.763,1475,2.763,1476,2.763,1477,3.91,1478,2.763,1479,2.763,1480,2.763,1481,2.763,1482,2.763,1483,2.763,1484,2.763,1485,2.763,1486,5.407,1487,3.91,1488,3.91,1489,2.763,1490,2.763,1491,2.581,1492,2.763,1493,2.763,1494,2.763,1495,5.407,1496,4.538,1497,2.763,1498,3.91,1499,2.763,1500,2.763,1501,2.763,1863,3.762,1864,3.762,1865,3.762,1866,3.762,1867,3.762,1868,3.762,1869,3.762,1870,3.762,1871,3.762,1872,3.762,1873,3.762,1874,3.762,1875,3.762,1876,3.762]],["title/classes/ODataMetadataResource.html",[234,0.313,1877,3.674]],["body/classes/ODataMetadataResource.html",[3,0.083,4,0.073,5,0.083,6,0.109,8,0.053,9,0.194,10,0.233,14,0.154,15,0.124,17,0.012,19,0.596,22,2.531,23,1.211,24,0.073,32,1.967,36,1.073,49,2.014,61,1.557,71,0.165,96,3,97,1.575,115,2.654,127,2.032,134,0.929,144,1.055,166,1.551,170,0.963,181,1.33,187,2.154,199,1.328,202,1.374,219,1.106,222,0.189,223,2.224,224,0.005,225,0.007,226,0.005,228,1.084,229,2.866,230,0.455,232,1.708,234,0.27,236,0.227,243,0.289,248,1.312,291,3.544,297,1.733,519,1.553,523,1.574,526,3.167,528,3.693,657,3.657,683,4.377,704,1.33,758,1.835,759,2.002,860,1.788,896,3.347,907,4.053,908,4.219,909,2.208,910,4.675,911,4.523,912,3.201,932,2.654,967,3.549,968,3.549,977,2.654,980,2.099,997,2.333,998,5.297,1000,3.34,1001,3.167,1002,5.297,1003,3.167,1007,3.145,1009,2.654,1010,4.145,1011,3.8,1024,2.654,1032,2.479,1039,1.914,1052,3.005,1167,2.627,1194,2.099,1225,2.523,1227,3.161,1271,3.832,1281,3.654,1354,3.8,1355,3.549,1356,3.8,1357,3.8,1358,4.439,1359,3.201,1360,2.874,1361,2.874,1362,2.208,1363,2.874,1366,4.439,1368,2.099,1369,2.874,1370,2.654,1371,4.259,1372,2.874,1373,3.161,1374,2.654,1375,2.627,1376,2.874,1377,2.874,1378,2.654,1379,2.874,1380,2.874,1381,2.654,1382,2.874,1383,3.51,1384,2.874,1385,2.654,1386,2.874,1387,2.654,1388,2.874,1389,2.654,1390,2.874,1391,2.874,1392,2.874,1393,2.874,1394,2.874,1395,2.874,1396,2.654,1728,2.654,1877,5.783,1878,3.613,1879,5.173,1880,3.613,1881,3.613,1882,3.613,1883,3.613,1884,3.613,1885,3.613,1886,3.613,1887,2.333,1888,3.613,1889,3.613,1890,3.613]],["title/classes/ODataModel.html",[234,0.313,767,2.434]],["body/classes/ODataModel.html",[3,0.049,4,0.043,5,0.049,6,0.118,8,0.031,9,0.129,10,0.214,14,0.146,15,0.119,17,0.012,19,0.421,22,2.28,23,0.714,24,0.043,27,2.236,29,1.816,32,0.811,36,1.843,38,1.678,51,1.7,52,1.313,54,0.866,55,2.162,59,0.963,61,1.48,71,0.152,80,1.656,97,1.501,107,2.043,111,1.404,113,1.232,114,1.404,131,2.442,134,1.133,144,1.321,148,3.449,184,0.563,186,0.886,212,0.866,216,2.478,219,1.333,222,0.18,224,0.003,225,0.004,226,0.003,227,1.416,228,0.724,230,0.426,232,1.554,234,0.159,236,0.134,238,1.123,243,0.171,248,1.088,260,0.785,275,3.422,333,2.231,554,3.804,572,1.696,654,3.943,656,2.37,657,3.635,664,2.826,682,1.566,704,1.272,758,1.083,759,1.181,767,3.878,768,3.363,771,1.696,782,2.538,783,1.566,860,1.194,911,4.044,912,2.916,971,4.707,1007,2.106,1033,3.983,1052,1.238,1075,3.436,1176,2.538,1194,2.53,1198,3.264,1199,3.264,1206,3.818,1208,3.818,1210,3.029,1211,3.029,1212,2.538,1215,3.029,1219,3.818,1220,3.818,1221,3.818,1225,1.04,1231,3.029,1233,3.029,1238,3.029,1242,3.029,1260,1.869,1262,1.869,1264,1.869,1268,5.784,1269,3.029,1270,3.029,1271,4.39,1281,4.302,1282,7.362,1283,5.853,1284,3.029,1285,1.869,1287,3.029,1288,3.029,1289,3.029,1290,7.023,1291,1.869,1292,3.029,1314,1.869,1315,1.869,1316,1.869,1325,1.869,1328,3.818,1329,3.464,1330,1.869,1347,1.869,1375,3.39,1383,3.422,1417,2.662,1448,1.463,1450,2.37,1491,1.463,1512,4.433,1549,2.748,1557,2.748,1560,3.061,1580,3.287,1599,4.257,1606,1.463,1610,1.696,1702,3.2,1703,4.391,1705,3.818,1891,2.132,1892,4.356,1893,4.356,1894,3.455,1895,3.455,1896,3.455,1897,3.455,1898,5.009,1899,2.132,1900,2.132,1901,2.132,1902,2.132,1903,2.132,1904,2.132,1905,3.455,1906,2.132,1907,1.696,1908,2.132,1909,3.455,1910,2.132,1911,2.132,1912,2.132,1913,3.455,1914,2.132,1915,3.455,1916,2.132,1917,2.132,1918,3.455,1919,2.132,1920,3.455,1921,2.132,1922,3.455,1923,2.132,1924,3.455,1925,2.132,1926,2.132,1927,5.009,1928,2.132,1929,2.132,1930,2.132,1931,3.455,1932,2.132,1933,2.132,1934,2.132,1935,2.132,1936,2.132,1937,3.455,1938,1.869,1939,1.869,1940,5.009,1941,5.892,1942,4.356,1943,2.132,1944,3.455,1945,3.029,1946,2.132,1947,2.132,1948,2.132,1949,2.132,1950,4.356,1951,2.132,1952,2.132,1953,2.132,1954,2.132,1955,2.132,1956,1.696,1957,2.132,1958,2.812,1959,2.132,1960,3.455,1961,4.908,1962,2.132,1963,3.455,1964,2.132,1965,2.132,1966,2.132,1967,2.132,1968,2.132,1969,2.132,1970,2.132,1971,5.009,1972,2.132,1973,3.455,1974,2.132,1975,2.132,1976,2.132,1977,2.132,1978,2.132,1979,2.132,1980,2.132,1981,2.132,1982,2.132,1983,2.132,1984,2.132,1985,2.132,1986,6.86,1987,6.86,1988,5.892,1989,5.892,1990,3.455,1991,2.132,1992,2.132,1993,2.132,1994,2.132,1995,2.132,1996,2.132,1997,2.132,1998,2.132,1999,2.132,2000,2.132,2001,2.132,2002,4.356,2003,2.132,2004,2.132,2005,2.132,2006,2.132,2007,2.132,2008,2.132,2009,2.132,2010,2.132,2011,2.132,2012,2.132,2013,2.132,2014,3.455,2015,2.132,2016,2.132,2017,2.132,2018,2.132,2019,2.132,2020,2.132,2021,2.132,2022,2.132,2023,2.132,2024,2.132,2025,3.455,2026,2.132,2027,2.132,2028,2.132,2029,3.455]],["title/modules/ODataModule.html",[2030,3.333,2031,3.079]],["body/modules/ODataModule.html",[3,0.133,4,0.117,5,0.133,6,0.103,10,0.167,15,0.085,17,0.012,19,0.644,21,2.143,24,0.143,71,0.117,115,2.214,134,1,144,0.931,165,0.82,188,3.331,189,3.696,222,0.133,224,0.008,225,0.009,226,0.008,228,1.22,230,0.308,232,1.185,234,0.436,238,1.892,519,1.37,528,4.34,721,3.085,907,4.227,2031,5.629,2032,4.631,2033,5.104,2034,7.664,2035,5.861,2036,5.823,2037,5.823,2038,5.823,2039,7.664,2040,7.103,2041,6.718,2042,4.277,2043,5.648,2044,5.823,2045,7.664,2046,5.823,2047,5.104,2048,5.823,2049,5.104,2050,5.823,2051,7.103,2052,5.823,2053,5.823,2054,5.104,2055,5.823]],["title/classes/ODataParameterParser.html",[234,0.313,1170,3.333]],["body/classes/ODataParameterParser.html",[3,0.105,4,0.093,5,0.105,6,0.12,8,0.067,9,0.229,10,0.229,14,0.17,15,0.126,16,0.869,17,0.012,19,0.352,24,0.123,27,2.789,52,2.61,53,1.868,61,1.244,71,0.165,97,1.615,99,1.75,134,1.072,144,0.736,166,1.762,178,3.41,179,2.576,180,1.936,181,2.527,184,1.216,186,1.397,198,1.591,205,2.663,218,3.709,222,0.168,224,0.006,225,0.008,226,0.006,227,1.987,228,1.281,230,0.43,232,1.244,234,0.457,236,0.289,243,0.368,244,1.871,519,1.083,617,1.409,680,3.551,682,3.381,687,3.387,698,3.551,702,2.005,719,3.803,721,2.438,788,2.981,789,2.159,859,2.337,1139,3.381,1155,4.47,1165,4.035,1166,2.674,1167,3.486,1170,5.46,1176,3.381,1177,4.035,1179,5.593,1180,4.035,1181,2.972,1182,3.158,1183,4.035,1184,4.035,1185,3.381,1186,3.381,1187,5.36,1188,4.035,1189,5.36,1190,4.035,1191,2.972,1192,4.035,1193,4.035,1194,2.674,1195,4.035,1196,5.36,1197,4.035,1198,2.55,1199,2.55,1200,4.035,1201,4.035,1202,4.035,1203,4.035,2056,6.114,2057,4.603,2058,4.603,2059,4.603,2060,4.603,2061,4.603,2062,4.603]],["title/classes/ODataPathSegments.html",[234,0.313,908,2.434]],["body/classes/ODataPathSegments.html",[3,0.078,4,0.069,5,0.078,6,0.118,8,0.05,9,0.186,10,0.195,14,0.175,15,0.119,16,0.406,17,0.012,19,0.545,24,0.137,29,1.351,32,1.888,33,2.088,34,1.771,35,1.103,37,1.771,49,0.985,51,1.781,61,1.45,71,0.167,97,1.474,112,0.956,113,1.771,134,1.167,144,1.092,184,0.902,186,1.389,199,1.502,219,2.629,222,0.179,224,0.004,225,0.006,226,0.004,228,1.041,230,0.423,232,1.588,234,0.371,236,0.214,238,1.902,243,0.273,248,1.197,260,1.828,348,2.631,519,1.607,521,3.648,523,1.487,554,3.206,654,1.665,657,2.55,664,1.771,674,3.618,775,2.342,796,1.809,823,3.206,848,2.342,896,3.56,908,3.399,909,2.086,910,4.172,921,3.648,941,5.111,990,2.342,1007,2.702,1057,2.715,1083,2.751,1148,2.508,1213,2.631,1359,3.404,1368,2.884,1548,2.086,1750,2.342,1887,3.779,1907,2.715,2063,5.535,2064,2.342,2065,5.353,2066,4.353,2067,6.108,2068,4.966,2069,3.415,2070,4.353,2071,3.415,2072,3.648,2073,3.415,2074,3.415,2075,4.654,2076,3.415,2077,4.353,2078,3.415,2079,4.353,2080,3.415,2081,3.415,2082,3.415,2083,3.415,2084,5.015,2085,2.715,2086,3.206,2087,3.779,2088,2.508,2089,2.342,2090,2.993,2091,3.949,2092,2.715,2093,2.508,2094,4.353,2095,2.993,2096,2.993,2097,4.353,2098,5.633,2099,2.993,2100,2.993,2101,5.985,2102,5.985,2103,2.993,2104,5.13,2105,2.993,2106,2.993,2107,5.13,2108,2.993,2109,2.993,2110,2.993,2111,2.993,2112,2.993,2113,2.993,2114,2.715,2115,2.993,2116,2.993,2117,2.993,2118,2.993,2119,2.993,2120,2.342,2121,2.993,2122,2.993,2123,2.993,2124,2.993,2125,2.993,2126,5.13,2127,2.993,2128,2.715,2129,2.993,2130,2.993,2131,2.342,2132,2.993,2133,2.993,2134,4.353,2135,2.993,2136,4.353,2137,2.993,2138,2.508,2139,2.993,2140,2.993,2141,2.508,2142,2.205]],["title/classes/ODataPropertyMeta.html",[234,0.313,1463,2.706]],["body/classes/ODataPropertyMeta.html",[3,0.086,4,0.075,5,0.086,6,0.098,8,0.055,9,0.231,10,0.203,14,0.168,15,0.117,17,0.012,18,0.581,19,0.406,21,1.381,24,0.135,29,1.445,31,2.315,35,1.18,49,1.082,57,1.945,71,0.135,72,2.4,78,1.695,80,2.551,97,1.507,100,1.338,114,3.072,118,1.474,134,1.23,144,1.073,166,1.983,169,2.392,170,1.25,171,1.578,186,1.255,222,0.141,224,0.005,225,0.007,226,0.005,228,1.113,230,0.422,232,1.441,234,0.502,236,0.235,291,3.18,297,2.534,462,3.247,519,0.883,617,1.148,654,1.829,657,1.634,664,2.2,796,4.006,860,1.836,913,3.247,961,2.179,1007,3.35,1039,1.987,1213,1.987,1225,2.591,1275,2.179,1276,2.179,1375,2.698,1406,2.756,1407,5.667,1408,3.903,1409,4.532,1410,4.532,1411,3.903,1412,2.756,1413,2.756,1415,2.983,1416,2.983,1417,5.079,1418,2.983,1419,2.983,1421,5.402,1423,2.756,1425,3.903,1427,2.983,1428,2.983,1429,3.903,1430,2.983,1447,2.756,1448,2.574,1449,2.756,1450,2.574,1451,2.756,1452,2.756,1453,1.76,1454,2.756,1455,2.756,1456,2.756,1457,3.903,1458,4.532,1459,2.756,1460,4.532,1461,2.756,1462,2.756,1463,4.332,1464,2.756,1465,2.756,1466,4.532,1467,3.903,1468,2.756,1469,2.756,1470,2.756,1471,2.756,1472,2.756,1473,2.756,1474,2.756,1475,2.756,1476,2.756,1477,3.903,1478,2.756,1479,2.756,1480,2.756,1481,2.756,1482,2.756,1483,2.756,1484,2.756,1485,2.756,1486,5.402,1487,3.903,1488,3.903,1489,2.756,1490,2.756,1491,2.574,1492,2.756,1493,2.756,1494,2.756,1495,5.402,1496,4.532,1497,2.756,1498,3.903,1499,2.756,1500,2.756,1501,2.756,1657,2.983,2143,3.752,2144,3.752,2145,3.752]],["title/classes/ODataQueryOptions.html",[234,0.313,1362,2.561]],["body/classes/ODataQueryOptions.html",[3,0.07,4,0.062,5,0.07,6,0.115,8,0.045,9,0.172,10,0.196,14,0.162,15,0.109,16,0.545,17,0.012,18,0.476,19,0.421,24,0.111,29,1.865,40,2.846,45,2,47,2,51,1.661,61,1.65,71,0.159,97,1.433,99,2.702,112,1.83,113,1.961,118,1.803,134,1.172,144,0.734,153,1.439,166,1.412,184,1.453,186,1.395,187,1.961,199,1.76,219,2.236,222,0.163,223,2.024,224,0.004,225,0.006,226,0.004,228,0.962,230,0.414,232,1.548,234,0.343,236,0.193,243,0.246,248,0.805,348,1.626,519,0.722,617,1.868,659,4.483,775,2.106,796,2.913,823,1.982,896,3.381,934,2.441,961,1.783,974,2.441,1007,2.566,1052,2.666,1083,2.543,1158,2.432,1198,2.543,1199,3.046,1224,1.982,1266,2.441,1275,2.666,1276,2.666,1359,3.461,1362,3.36,1368,3.194,1397,5.912,1401,2.441,1548,1.875,1580,2.913,1639,2.254,1702,2.254,1887,4.219,1956,2.441,1958,3.551,1961,3.149,2072,3.372,2084,2.254,2086,2.964,2087,4.986,2088,2.254,2089,3.149,2120,3.149,2131,2.106,2138,4.039,2141,2.254,2142,1.982,2146,6.288,2147,2.441,2148,6.01,2149,4.591,2150,4.024,2151,4.591,2152,3.069,2153,3.069,2154,3.069,2155,3.069,2156,3.069,2157,3.069,2158,4.024,2159,3.069,2160,3.069,2161,3.069,2162,3.069,2163,3.069,2164,3.069,2165,2.441,2166,2.69,2167,3.372,2168,3.149,2169,3.651,2170,5.652,2171,2.69,2172,2.69,2173,2.69,2174,2.69,2175,2.69,2176,2.69,2177,2.69,2178,2.69,2179,2.69,2180,2.69,2181,2.69,2182,2.69,2183,2.69,2184,2.69,2185,2.69,2186,2.69,2187,2.69,2188,2.69,2189,4.82,2190,2.69,2191,2.441,2192,2.69,2193,2.69,2194,2.69,2195,2.69,2196,4.024,2197,2.69,2198,2.69,2199,2.69,2200,2.69,2201,2.69,2202,2.69,2203,2.441,2204,2.441,2205,2.69,2206,2.69,2207,2.69,2208,6.931,2209,2.69,2210,2.69,2211,2.69,2212,4.82,2213,2.69,2214,2.69,2215,2.69,2216,2.69,2217,2.441,2218,2.69,2219,4.024,2220,4.024,2221,2.69,2222,2.69,2223,2.69,2224,2.69,2225,2.69,2226,2.69,2227,2.69,2228,6.931,2229,2.69,2230,2.69,2231,2.69,2232,2.69,2233,4.82,2234,5.35,2235,5.35,2236,5.35,2237,5.35,2238,5.35,2239,5.35,2240,4.024,2241,6.01,2242,4.024,2243,2.69,2244,4.024,2245,4.024,2246,2.69,2247,4.024,2248,4.024,2249,4.024,2250,2.69,2251,2.69,2252,2.69,2253,2.69,2254,2.69,2255,2.69]],["title/classes/ODataRequest.html",[234,0.313,751,2.128]],["body/classes/ODataRequest.html",[3,0.089,4,0.078,5,0.089,6,0.123,8,0.057,9,0.204,10,0.219,14,0.169,15,0.122,16,0.884,17,0.012,19,0.549,21,1.434,24,0.078,26,4.117,29,1.713,32,1.481,37,2.246,71,0.11,80,1.481,96,2.644,99,2.83,100,2.561,103,3.083,110,2.92,111,2.559,126,3.363,134,0.887,173,1.9,174,3.201,186,1.282,219,2.339,222,0.089,224,0.005,225,0.007,226,0.005,227,1.774,230,0.445,234,0.291,236,0.245,243,0.312,523,1.698,617,1.193,664,2.246,674,2.771,683,3.78,751,2.771,848,2.674,860,1.886,875,3.099,882,3.416,884,3.099,886,3.416,888,3.416,911,3.615,912,3.944,913,4.17,925,4.784,964,4.321,977,4.626,980,3.963,991,4.321,1018,2.674,1022,5.521,1024,5.012,1031,3.099,1032,4.681,1039,3.615,1084,3.335,1086,2.674,1148,4.009,1548,2.381,2256,3.897,2257,5.982,2258,6.299,2259,6.299,2260,5.458,2261,3.897,2262,3.897,2263,3.897,2264,3.897,2265,3.897,2266,3.897,2267,6.824,2268,3.897,2269,3.897,2270,3.897,2271,5.009,2272,5.009,2273,3.897,2274,3.897,2275,3.897,2276,3.897,2277,3.897,2278,3.897,2279,3.897,2280,3.897,2281,3.897,2282,3.099,2283,3.897,2284,3.897,2285,3.416,2286,3.416,2287,3.416,2288,3.897,2289,3.897,2290,3.897,2291,3.897,2292,3.897,2293,3.897,2294,3.897,2295,5.458,2296,3.897,2297,3.897,2298,3.897,2299,5.458,2300,5.458,2301,3.897,2302,5.458,2303,5.458,2304,3.897,2305,3.897,2306,3.897,2307,3.897,2308,3.897,2309,3.897,2310,3.897,2311,3.897,2312,3.897,2313,3.897,2314,3.897,2315,3.897,2316,3.897,2317,3.897,2318,3.897,2319,3.897,2320,3.897,2321,3.897]],["title/classes/ODataResource.html",[234,0.313,911,2.22]],["body/classes/ODataResource.html",[3,0.059,4,0.052,5,0.059,6,0.119,8,0.038,9,0.151,10,0.212,14,0.162,15,0.122,16,0.763,17,0.012,19,0.584,22,2.48,23,0.87,24,0.052,35,1.539,36,2.115,37,1.44,49,1.852,52,1.535,61,1.636,71,0.151,80,2.635,96,2.467,97,1.575,99,2.548,100,0.925,103,1.172,112,1.131,113,0.925,115,2.548,127,1.948,134,1.145,144,0.895,174,1.217,179,2.051,181,1.487,186,1.139,187,0.925,199,1.037,202,2.635,214,1.172,216,1.698,219,1.965,222,0.175,223,0.955,224,0.003,225,0.005,226,0.003,228,0.846,229,2.237,230,0.431,232,1.614,234,0.194,236,0.163,243,0.323,248,1.063,297,1.875,519,1.631,523,1.131,617,1.517,657,3.628,664,2.471,680,3.25,683,2.237,758,1.318,759,1.438,767,2.346,768,2.468,769,2.275,770,3.401,813,1.375,860,1.396,875,2.064,896,3.099,907,3.401,908,3.893,910,4.095,911,2.964,912,3.401,967,2.771,968,2.771,977,2.967,980,3.25,990,3.838,991,1.78,996,2.275,997,1.676,1000,1.676,1007,2.353,1018,2.771,1024,1.906,1032,4.884,1039,2.14,1052,2.346,1167,2.518,1181,1.676,1225,2.728,1227,3.419,1271,3.893,1281,3.839,1324,5.628,1354,3.642,1355,3.402,1356,2.967,1357,2.967,1358,4.11,1359,2.964,1362,4.095,1366,2.967,1368,2.346,1370,1.906,1371,4.145,1373,3.419,1374,1.906,1375,2.841,1378,2.967,1381,2.967,1383,3.893,1385,2.967,1387,2.967,1389,1.906,1396,2.967,1583,2.064,1728,1.906,2065,2.771,2086,1.676,2087,2.608,2093,1.906,2114,2.064,2165,2.064,2191,2.064,2257,2.275,2271,5.33,2272,5.33,2322,2.595,2323,4.039,2324,2.595,2325,2.595,2326,2.595,2327,2.595,2328,2.595,2329,2.595,2330,2.595,2331,2.595,2332,2.595,2333,2.595,2334,2.595,2335,2.595,2336,2.595,2337,2.595,2338,2.595,2339,2.595,2340,2.595,2341,2.595,2342,2.595,2343,2.595,2344,2.595,2345,2.595,2346,2.595,2347,2.595,2348,3.54,2349,2.595,2350,2.595,2351,2.595,2352,2.595,2353,2.595,2354,2.595,2355,2.595,2356,2.595,2357,2.595,2358,2.595,2359,2.595,2360,2.595,2361,2.595,2362,2.595,2363,2.595,2364,2.595,2365,2.595,2366,2.595,2367,2.595,2368,2.595,2369,4.039,2370,2.595,2371,2.595,2372,2.595,2373,2.595,2374,2.595,2375,4.039,2376,2.595,2377,2.595,2378,4.959,2379,2.595,2380,2.595,2381,2.595,2382,4.039,2383,2.595,2384,4.039,2385,2.595,2386,2.595,2387,2.595,2388,2.595,2389,5.595,2390,2.595,2391,4.959,2392,2.595,2393,2.595,2394,2.595,2395,2.595,2396,2.595,2397,2.595,2398,2.595,2399,2.595,2400,2.595,2401,6.063,2402,2.595,2403,2.595,2404,2.595,2405,2.595,2406,2.275,2407,2.595,2408,2.595,2409,4.959,2410,2.595,2411,2.595,2412,2.595]],["title/classes/ODataResponse.html",[234,0.313,770,2.22]],["body/classes/ODataResponse.html",[3,0.071,4,0.062,5,0.071,6,0.117,8,0.045,9,0.173,10,0.188,14,0.156,15,0.124,17,0.012,18,0.716,19,0.592,21,1.14,24,0.062,26,3.226,29,2.074,35,1.528,36,2.043,37,1.971,49,0.893,51,1.119,61,1.612,71,0.143,96,2.623,97,1.367,98,1.302,100,2.67,112,1.294,127,1.216,134,1.089,144,1.14,157,3.198,158,1.51,159,1.51,166,1.922,170,0.86,179,2.292,183,3.45,186,1.335,202,2.615,222,0.163,224,0.004,225,0.006,226,0.004,227,1.992,228,0.968,230,0.423,232,1.524,234,0.232,236,0.194,243,0.248,519,1.301,520,2.714,523,1.349,528,4.203,617,2.55,656,3.17,664,2.93,683,3.396,751,3.619,753,2.983,770,3.644,796,3.247,813,2.928,860,1.597,884,4.396,901,5.053,911,3.247,912,3.776,913,2.824,914,6.03,916,2.714,918,2.714,961,3.211,964,4.719,971,1.892,980,3.995,981,5.053,1017,4.05,1018,2.124,1031,5.826,1058,3.675,1084,2.824,1086,2.124,1145,1.892,1166,2.684,1181,1.999,1182,2.124,1198,1.715,1199,1.715,1225,1.51,1281,3.948,1359,3.247,1375,1.572,1463,1.999,1538,3.675,1539,3.17,1574,2.462,1576,2.462,1578,2.462,1579,3.675,1580,1.64,1842,2.274,1939,2.714,2282,3.675,2285,2.714,2286,2.714,2287,2.714,2406,2.714,2413,3.096,2414,5.528,2415,4.621,2416,4.621,2417,4.621,2418,4.875,2419,3.096,2420,3.096,2421,4.621,2422,3.096,2423,3.096,2424,4.846,2425,3.096,2426,4.846,2427,4.621,2428,3.096,2429,4.621,2430,3.096,2431,3.096,2432,3.096,2433,4.846,2434,3.096,2435,3.096,2436,3.096,2437,3.096,2438,3.096,2439,2.714,2440,4.621,2441,3.096,2442,3.096,2443,3.096,2444,3.096,2445,3.096,2446,3.096,2447,3.096,2448,3.096,2449,3.096,2450,3.096,2451,3.096,2452,3.096,2453,3.096,2454,3.096,2455,3.096,2456,5.528,2457,3.096,2458,3.096,2459,3.096,2460,2.714,2461,3.096,2462,3.096,2463,3.096,2464,3.096,2465,3.096,2466,3.096,2467,3.096,2468,3.096,2469,4.05,2470,3.096,2471,3.096,2472,3.096,2473,3.096,2474,3.096,2475,6.13,2476,5.528,2477,3.096,2478,5.528,2479,5.528,2480,6.13,2481,6.13,2482,5.528,2483,3.096,2484,3.096]],["title/classes/ODataResponseOptions.html",[234,0.313,2418,3.333]],["body/classes/ODataResponseOptions.html",[3,0.102,4,0.089,5,0.102,6,0.123,8,0.065,9,0.224,10,0.245,14,0.164,15,0.121,16,0.92,17,0.012,18,0.925,19,0.516,24,0.089,32,2.563,61,1.214,71,0.145,97,1.383,98,3.031,101,3.287,102,3.515,110,2.57,112,1.671,134,0.84,144,0.71,156,3.257,160,3.381,164,2.91,165,0.949,166,1.73,167,2.696,168,3.287,169,2.404,171,2.835,175,3.287,176,3.423,177,3.819,184,1.781,222,0.165,224,0.006,225,0.008,226,0.006,228,1.25,230,0.446,232,1.467,234,0.332,236,0.279,243,0.355,519,1.045,522,3.53,523,1.933,617,1.358,623,4.383,702,2.599,704,1.634,774,4.745,790,3.53,859,3.03,860,2.062,870,3.891,873,3.891,876,5.231,877,3.891,878,3.891,879,3.891,880,5.231,881,3.891,890,3.891,990,4.625,1007,3.031,1560,3.646,1580,3.819,1750,3.045,1961,3.045,2093,3.26,2418,5.361,2439,3.891,2460,3.891,2469,3.891,2485,4.439,2486,5.967,2487,5.967,2488,5.967,2489,5.967,2490,4.439,2491,4.439,2492,4.439,2493,4.439,2494,4.439,2495,4.439,2496,4.439,2497,5.967,2498,4.439,2499,5.967,2500,4.439,2501,5.967,2502,4.439,2503,4.439,2504,5.967,2505,5.967,2506,4.439,2507,4.439,2508,4.439,2509,4.439,2510,4.439,2511,4.439,2512,5.909,2513,4.439,2514,4.439,2515,4.439,2516,4.439,2517,4.439,2518,4.439,2519,4.439,2520,4.439,2521,4.439,2522,4.439,2523,4.439,2524,4.439,2525,4.439]],["title/classes/ODataSchema.html",[234,0.313,716,2.434]],["body/classes/ODataSchema.html",[1,1.184,3,0.089,4,0.078,5,0.089,6,0.123,8,0.056,9,0.203,10,0.227,14,0.171,15,0.126,17,0.012,19,0.595,24,0.078,36,1.613,57,1.978,71,0.153,96,2.866,97,1.204,134,1.129,144,1.146,165,1.152,179,1.661,184,1.022,186,0.787,187,1.379,196,3.317,198,2.168,199,1.61,200,3.185,202,2.586,204,3.638,205,2.733,206,3.185,208,2.942,222,0.175,223,1.424,224,0.005,225,0.007,226,0.005,227,1.764,228,1.138,230,0.447,232,1.512,234,0.289,236,0.243,243,0.31,294,2.143,333,2.498,348,2.049,479,4.318,519,0.91,675,3.833,683,4.115,687,3.768,689,4.759,693,4.759,695,4.759,698,2.247,701,4.759,702,2.365,704,2.637,716,3.154,719,3.008,721,2.049,724,4.759,732,4.759,736,4.759,748,4.759,762,4.304,763,4.304,764,3.506,765,4.304,789,1.814,823,2.498,839,5.262,860,1.876,1018,2.654,1145,2.364,1373,2.364,1453,1.814,1502,4.989,1505,2.654,1508,4.759,1510,2.654,1511,2.654,1594,3.076,1595,4.318,1739,4.759,2526,3.869,2527,5.43,2528,5.43,2529,3.869,2530,3.869,2531,3.869,2532,3.869,2533,3.869,2534,3.869,2535,3.869,2536,3.869,2537,3.869,2538,3.869,2539,3.869,2540,3.869,2541,5.43,2542,3.869,2543,3.869,2544,3.869,2545,3.869,2546,3.391,2547,3.869,2548,3.869,2549,3.869,2550,3.869,2551,3.869,2552,3.869,2553,3.869,2554,3.391,2555,5.43,2556,3.869,2557,3.869,2558,3.869,2559,4.759,2560,3.869,2561,3.869,2562,3.869,2563,3.869,2564,3.869,2565,5.43,2566,3.869,2567,3.869,2568,5.43,2569,3.869,2570,3.869,2571,3.869,2572,3.869,2573,3.869,2574,3.869,2575,3.869,2576,3.869,2577,3.869,2578,6.802,2579,3.869,2580,3.869,2581,3.869,2582,3.869,2583,3.869,2584,3.869,2585,3.869]],["title/injectables/ODataServiceFactory.html",[2035,3.079,2586,3.674]],["body/injectables/ODataServiceFactory.html",[3,0.129,4,0.114,5,0.129,6,0.115,8,0.082,10,0.217,14,0.174,15,0.118,17,0.011,19,0.604,24,0.114,29,1.897,33,3.18,36,2.247,71,0.168,115,2.875,134,0.982,144,1.115,170,1.299,222,0.186,224,0.007,225,0.009,226,0.007,228,1.461,230,0.401,232,1.419,234,0.566,243,0.452,248,1.223,335,5.802,907,4.183,1000,3.649,1699,6.28,1736,4.494,2035,5.122,2042,4.151,2348,6.113,2586,6.113,2587,4.954,2588,5.652,2589,5.652,2590,6.974,2591,5.652,2592,6.974,2593,5.652,2594,6.28]],["title/classes/ODataSettings.html",[234,0.313,2043,3.333]],["body/classes/ODataSettings.html",[3,0.06,4,0.053,5,0.06,6,0.119,8,0.038,9,0.152,10,0.229,14,0.174,15,0.127,17,0.012,19,0.492,22,1.319,23,0.875,24,0.053,29,1.828,34,1.448,38,0.875,49,1.436,52,1.543,61,1.555,71,0.172,96,2.733,111,1.062,112,2.187,127,1.026,134,1.118,138,4.219,144,0.973,165,1.222,179,1.524,184,0.69,186,1.013,187,0.932,188,1.904,189,2.537,216,1.707,222,0.19,223,0.962,224,0.003,225,0.005,226,0.003,227,1.319,228,0.851,230,0.429,232,1.628,234,0.195,236,0.164,243,0.209,294,2.249,348,2.151,519,0.956,617,1.242,654,4.099,674,3.881,683,3.111,686,2.29,687,2.249,704,0.962,719,2.249,721,1.384,751,2.062,762,3.416,763,3.416,764,3.215,765,3.416,767,2.892,768,3.043,825,3.559,848,3.853,1110,1.447,1158,1.384,1217,1.919,1224,4.934,1310,6.103,1560,1.597,1624,2.078,1640,6.078,1643,3.229,1763,2.29,2043,3.229,2128,6.211,2217,6.148,2546,3.559,2559,3.559,2595,2.613,2596,7.999,2597,4.06,2598,4.06,2599,4.06,2600,4.06,2601,4.06,2602,4.06,2603,5.616,2604,4.06,2605,4.06,2606,4.06,2607,4.06,2608,4.06,2609,4.06,2610,4.06,2611,4.06,2612,4.06,2613,4.06,2614,2.613,2615,4.06,2616,4.06,2617,2.613,2618,4.06,2619,2.613,2620,4.06,2621,2.613,2622,4.06,2623,2.613,2624,4.06,2625,2.613,2626,4.06,2627,2.613,2628,2.613,2629,2.613,2630,4.06,2631,2.613,2632,4.06,2633,2.613,2634,4.06,2635,2.613,2636,4.06,2637,2.613,2638,4.06,2639,2.613,2640,4.06,2641,2.613,2642,4.06,2643,2.613,2644,4.06,2645,2.613,2646,4.06,2647,2.613,2648,4.06,2649,2.613,2650,2.613,2651,2.613,2652,2.613,2653,2.613,2654,2.613,2655,2.613,2656,7.81,2657,2.613,2658,2.613,2659,2.613,2660,2.613,2661,4.06,2662,2.613,2663,2.613,2664,2.613,2665,4.98,2666,2.613,2667,2.613,2668,2.613,2669,2.613,2670,7.643,2671,2.613,2672,7.643,2673,7.643,2674,2.613,2675,2.613,2676,2.613,2677,2.613,2678,2.613,2679,2.613,2680,2.613,2681,2.613,2682,2.613,2683,2.613,2684,2.613,2685,2.613]],["title/classes/ODataSingletonService.html",[234,0.313,2594,3.333]],["body/classes/ODataSingletonService.html",[3,0.125,4,0.109,5,0.125,6,0.121,8,0.079,10,0.195,14,0.165,15,0.108,17,0.011,19,0.569,24,0.109,36,2.384,61,1.108,71,0.161,96,2.738,115,2.828,134,1.153,165,1.153,186,1.108,222,0.17,224,0.007,225,0.009,226,0.007,228,1.428,230,0.434,232,1.387,234,0.407,236,0.342,243,0.436,248,0.955,335,5.103,657,2.969,664,2.43,704,2.738,767,3.164,860,2.355,907,4.129,1000,3.517,1110,3.017,1212,5.006,1217,4.001,1227,5.003,1706,6.521,1711,4.775,1728,4.001,1730,4.775,1735,4.775,1736,4.332,1738,5.974,1740,4.775,1744,5.42,1745,4.775,1746,4.775,1747,4.775,2594,5.42,2686,5.447,2687,7.439,2688,5.447,2689,5.447,2690,5.447,2691,7.439,2692,5.447,2693,5.447,2694,5.447,2695,5.447,2696,5.447,2697,5.447]],["title/classes/ODataStructuredType.html",[234,0.313,765,2.875]],["body/classes/ODataStructuredType.html",[1,1.225,3,0.092,4,0.08,5,0.092,6,0.122,8,0.058,9,0.208,10,0.231,14,0.151,15,0.126,16,0.892,17,0.012,19,0.528,24,0.08,27,2.805,38,2.631,49,1.604,52,2.429,57,2.015,61,1.3,71,0.164,80,2.114,97,1.226,112,1.558,134,1.021,144,0.89,179,2.22,184,1.058,186,1.3,194,1.809,203,3.119,212,3.051,216,2.687,217,2.824,222,0.176,224,0.005,225,0.007,226,0.005,227,2.624,228,1.165,230,0.439,232,1.476,234,0.3,236,0.251,243,0.32,295,2.218,346,3.51,349,2.941,350,4.876,490,3.185,491,3.185,492,3.185,519,0.942,617,1.702,675,3.905,687,3.081,698,2.326,702,2.423,704,1.474,716,4.362,719,3.081,721,2.121,765,3.816,788,1.953,789,1.878,793,5.072,860,1.922,936,2.447,1134,3.816,1143,3.591,1145,2.447,1147,2.747,1155,3.399,1157,3.185,1158,2.946,1159,2.941,1160,2.941,1161,2.941,1162,2.585,1163,2.747,1164,3.51,1198,2.218,1199,2.218,1371,3.591,1383,3.231,1453,1.878,1505,2.747,1510,2.747,1511,2.747,1512,4.384,1539,4.737,1556,3.185,1560,4.589,1562,3.185,1591,5.082,1606,3.816,1812,3.51,1824,3.51,1887,4.458,1945,6.583,1961,3.816,2203,3.185,2204,3.185,2512,3.51,2698,8.344,2699,5.562,2700,5.562,2701,4.005,2702,5.562,2703,4.005,2704,7.51,2705,5.562,2706,4.005,2707,4.005,2708,5.562,2709,4.005,2710,6.391,2711,4.005,2712,4.005,2713,4.005,2714,4.005,2715,4.005,2716,4.005,2717,4.005,2718,4.005,2719,4.005,2720,4.005,2721,4.005,2722,4.005,2723,4.005,2724,4.005,2725,4.005,2726,4.005]],["title/classes/ODataValueResource.html",[234,0.313,2727,3.674]],["body/classes/ODataValueResource.html",[3,0.082,4,0.072,5,0.082,6,0.106,8,0.052,9,0.193,10,0.235,14,0.161,15,0.125,17,0.012,19,0.571,22,2.647,23,1.206,24,0.072,36,1.07,49,2.011,61,1.626,71,0.166,97,1.638,113,1.284,115,2.504,127,2.027,134,0.982,144,0.825,170,0.961,181,1.325,187,1.84,199,1.325,202,1.369,219,1.102,222,0.191,223,1.899,224,0.005,225,0.007,226,0.005,228,1.081,229,2.859,230,0.453,232,1.721,234,0.269,236,0.226,248,1.272,291,3.543,297,1.729,519,1.55,523,1.569,528,3.685,617,1.102,657,3.655,664,2.15,896,3.341,907,3.694,908,4.05,909,2.2,910,4.433,911,4.522,912,3.195,967,3.54,968,3.54,997,2.325,1007,3.142,1009,2.645,1010,4.138,1011,3.791,1032,4.138,1039,1.908,1052,2.997,1167,2.62,1194,3.503,1225,2.516,1227,3.153,1271,4.586,1281,3.649,1354,3.791,1355,3.54,1356,3.791,1357,3.791,1358,4.43,1359,3.195,1360,2.864,1361,2.864,1362,4.261,1363,2.864,1366,4.43,1368,2.092,1369,2.864,1370,2.645,1371,4.253,1372,2.864,1373,3.153,1374,2.645,1375,2.62,1376,2.864,1377,2.864,1378,2.645,1379,2.864,1380,2.864,1381,2.645,1382,2.864,1383,3.503,1384,2.864,1385,2.645,1386,2.864,1387,2.645,1388,2.864,1389,2.645,1390,2.864,1391,2.864,1392,2.864,1393,2.864,1394,2.864,1395,2.864,1396,2.645,1404,3.157,1405,5.287,1580,1.908,2065,2.47,2271,4.796,2272,4.796,2727,5.774,2728,3.601,2729,5.161,2730,3.601,2731,5.161,2732,3.601,2733,3.601,2734,3.601,2735,3.601,2736,3.601,2737,3.601,2738,3.601,2739,3.601,2740,3.601]],["title/classes/OptionHandler.html",[234,0.313,2089,2.875]],["body/classes/OptionHandler.html",[3,0.067,4,0.059,5,0.067,6,0.118,8,0.064,10,0.219,14,0.165,15,0.113,16,0.707,17,0.012,18,0.828,19,0.408,24,0.107,29,1.902,40,2.787,45,1.927,47,1.927,51,1.63,61,1.675,71,0.163,97,1.291,99,2.264,112,1.792,113,1.904,118,1.738,134,1.164,144,0.708,153,1.371,166,1.794,184,1.778,186,1.37,187,1.904,199,1.37,219,2.368,222,0.175,223,1.965,224,0.004,225,0.006,226,0.004,228,0.927,230,0.426,232,1.609,234,0.331,236,0.183,243,0.234,248,0.776,333,2.857,348,1.548,519,0.688,617,1.822,659,4.374,775,2.005,796,2.828,823,1.887,860,1.529,896,1.619,934,4.246,961,1.697,974,2.324,1007,1.229,1052,2.57,1083,2.451,1198,2.451,1199,2.958,1224,2.857,1266,4.735,1275,2.57,1276,2.57,1359,3.389,1362,1.786,1368,2.57,1397,5.414,1401,2.324,1548,1.786,1580,3.154,1639,2.147,1701,3.878,1702,3.25,1887,3.447,1956,2.324,1958,3.447,1961,3.035,2072,2.147,2084,2.147,2086,2.857,2087,4.997,2088,2.147,2089,3.035,2120,3.035,2131,2.005,2138,2.147,2141,2.147,2142,1.887,2146,6.438,2147,2.324,2148,5.9,2150,2.562,2158,2.562,2165,2.324,2166,2.562,2167,3.25,2168,3.035,2169,3.519,2170,5.56,2171,2.562,2172,2.562,2173,2.562,2174,2.562,2175,2.562,2176,2.562,2177,2.562,2178,2.562,2179,2.562,2180,2.562,2181,2.562,2182,2.562,2183,2.562,2184,2.562,2185,2.562,2186,2.562,2187,2.562,2188,2.562,2189,4.68,2190,2.562,2191,2.324,2192,2.562,2193,2.562,2194,2.562,2195,2.562,2196,3.878,2197,2.562,2198,2.562,2199,2.562,2200,2.562,2201,2.562,2202,2.562,2203,2.324,2204,2.324,2205,2.562,2206,3.878,2207,2.562,2208,6.863,2209,2.562,2210,3.878,2211,5.22,2212,4.68,2213,3.878,2214,2.562,2215,3.878,2216,2.562,2217,2.324,2218,2.562,2219,3.878,2220,3.878,2221,3.878,2222,2.562,2223,2.562,2224,3.878,2225,2.562,2226,2.562,2227,2.562,2228,6.863,2229,2.562,2230,2.562,2231,2.562,2232,3.878,2233,4.68,2234,5.22,2235,5.22,2236,5.22,2237,5.22,2238,5.22,2239,5.22,2240,3.878,2241,5.9,2242,3.878,2243,3.878,2244,5.22,2245,3.878,2246,2.562,2247,3.878,2248,3.878,2249,3.878,2250,3.878,2251,2.562,2252,2.562,2253,3.878,2254,3.878,2255,2.562,2741,4.425,2742,4.425,2743,4.425,2744,2.923,2745,2.923,2746,2.923,2747,2.923,2748,2.923,2749,2.923,2750,2.923,2751,2.923,2752,2.923,2753,2.923,2754,2.923,2755,2.923,2756,2.923,2757,2.923,2758,2.923,2759,2.923,2760,2.562,2761,2.923]],["title/interfaces/Options.html",[0,1.283,97,0.804]],["body/interfaces/Options.html",[0,2.357,1,1.672,2,1.424,3,0.07,4,0.061,5,0.07,6,0.044,7,1.542,8,0.044,9,0.227,10,0.217,11,2.412,12,2.412,13,2.412,14,0.179,15,0.124,16,0.995,17,0.012,18,1.194,19,0.348,20,1.48,21,1.117,22,1.776,23,1.017,24,0.171,25,1.48,26,1.424,27,2.22,28,2.894,29,1.926,30,1.608,31,2.833,32,2.596,33,1.277,34,1.082,35,0.674,36,0.902,37,1.082,38,1.017,39,2.312,40,1.984,41,2.312,42,2.312,43,2.136,44,1.984,45,1.323,46,1.608,47,1.323,48,2.562,49,1.313,50,0.85,51,0.735,52,2.077,53,1.239,54,1.234,55,1.789,56,0.85,57,2.233,58,0.85,59,1.371,60,2.136,61,1.112,62,2.412,63,1.608,64,1.608,65,1.608,66,1.608,67,1.542,68,1.608,69,1.608,70,1.608,71,0.173,72,2.468,73,1.608,74,1.608,75,1.608,76,1.608,77,1.608,78,1.371,79,1.608,80,1.154,81,1.608,82,1.608,83,1.608,84,1.608,85,1.608,86,1.608,87,1.608,88,1.608,89,1.608,90,1.608,91,1.608,92,1.608,93,1.608,94,1.608,95,1.608,96,2.513,97,1.429,98,2.872,99,1.731,100,1.623,101,3.171,102,3.171,103,2.742,104,1.608,105,2.412,106,1.608,107,1.424,108,1.608,109,1.608,110,3.005,111,1.85,112,1.822,113,1.948,114,3.377,115,2.692,116,2.894,117,2.412,118,1.193,119,1.608,120,2.412,121,2.774,122,3.05,123,1.608,124,1.608,125,1.608,126,3.199,127,2.146,128,2.774,129,2.894,130,1.608,131,2.22,132,1.608,133,3.216,134,0.769,135,1.48,136,1.608,137,1.542,138,1.542,139,1.608,140,1.608,141,1.608,142,1.608,143,2.22,144,0.486,145,1.608,146,2.412,147,2.412,148,2.468,149,2.412,150,2.312,151,1.542,152,1.608,153,1.424,154,2.136,155,1.608,156,2.938,157,1.48,158,1.48,159,1.48,160,2.847,161,1.542,162,1.48,163,1.542,164,2.22,165,0.427,166,0.779,167,1.371,168,2.96,169,2.164,170,1.13,171,1.277,172,2.136,173,2.22,174,1.424,175,1.48,176,1.542,177,1.542,178,1.323,179,1.393,180,1.277,181,1.117,182,1.371,183,1.323,184,0.802,185,1.371,186,0.618,187,1.082,188,1.424,189,1.371,190,1.48,191,1.542,192,1.542,193,1.542,194,1.371,195,1.48,196,2.22,197,3.33,198,1.049,199,0.779,200,1.542,201,2.057,202,1.154,203,2.057,204,1.542,205,1.984,206,1.542,207,2.22,208,1.424,209,2.22,210,1.48,211,1.323,212,1.85,213,1.542,214,1.371,215,1.542,216,1.277,217,2.312,218,2.057,219,0.929,220,1.542,221,1.542,222,0.07,223,1.117,224,0.004,225,0.006,226,0.004]],["title/interfaces/OptionsHelper.html",[0,1.283,169,1.494]],["body/interfaces/OptionsHelper.html",[0,2.371,1,1.698,2,1.462,3,0.071,4,0.063,5,0.071,6,0.045,7,1.583,8,0.045,9,0.23,11,2.46,12,2.46,13,2.46,14,0.179,15,0.124,16,0.972,17,0.012,18,1.201,19,0.355,20,1.52,21,1.147,22,1.804,23,1.044,24,0.171,25,1.52,26,1.462,27,2.255,28,2.94,29,1.943,30,1.651,31,2.865,32,2.11,33,1.311,34,1.111,35,0.692,36,0.926,37,1.111,38,1.044,39,2.358,40,2.023,41,2.358,42,2.358,43,2.178,44,2.023,45,1.358,46,1.651,47,1.358,48,2.603,49,1.339,50,0.873,51,0.755,52,2.11,53,1.263,54,1.266,55,1.824,56,0.873,57,2.252,58,0.873,59,1.408,60,2.178,61,1.129,62,3.258,63,1.651,64,1.651,65,1.651,66,1.651,67,1.583,68,1.651,69,1.651,70,1.651,71,0.173,72,2.507,73,1.651,74,1.651,75,1.651,76,1.651,77,1.651,78,1.408,79,1.651,80,1.185,81,1.651,82,1.651,83,1.651,84,1.651,85,1.651,86,1.651,87,1.651,88,1.651,89,1.651,90,1.651,91,1.651,92,1.651,93,1.651,94,1.651,95,1.651,96,2.538,97,1.439,98,2.334,99,1.765,100,1.656,101,2.264,102,2.264,103,2.778,104,1.651,105,2.46,106,1.651,107,1.462,108,1.651,109,1.651,110,3.014,111,1.887,112,1.842,113,1.979,114,3.389,115,2.715,116,2.94,117,2.46,118,1.224,119,1.651,120,2.46,121,2.818,122,3.085,123,1.651,124,1.651,125,1.651,126,3.227,127,2.18,128,2.818,129,2.94,130,1.651,131,2.264,132,1.651,133,3.258,134,0.781,135,1.52,136,1.651,137,1.583,138,1.583,139,1.651,140,1.651,141,1.651,142,1.651,143,2.264,144,0.498,145,1.651,146,2.46,147,2.46,148,2.507,149,2.46,150,2.358,151,1.583,152,1.651,153,1.462,154,2.178,155,1.651,156,2.507,157,1.52,158,1.52,159,1.52,160,2.178,161,1.583,162,1.52,163,1.583,164,2.264,165,0.439,166,0.8,167,1.408,168,1.52,169,2.345,170,1.225,171,2.586,172,2.178,173,2.264,174,1.462,175,1.52,176,1.583,177,1.583,178,1.358,179,1.421,180,1.311,181,1.147,182,1.408,183,1.358,184,0.824,185,1.408,186,0.634,187,1.111,188,1.462,189,1.408,190,1.52,191,1.583,192,1.583,193,1.583,194,1.408,195,1.52,196,2.264,197,3.362,198,1.077,199,0.8,200,1.583,201,2.098,202,1.185,203,2.098,204,1.583,205,2.023,206,1.583,207,2.264,208,1.462,209,2.264,210,1.52,211,1.358,212,1.887,213,1.583,214,1.408,215,1.583,216,1.311,217,2.358,218,2.098,219,0.954,220,1.583,221,1.583,222,0.071,223,1.147,224,0.004,225,0.006,226,0.004]],["title/interfaces/Parser.html",[0,1.283,179,1.283]],["body/interfaces/Parser.html",[0,2.36,1,1.676,2,1.43,3,0.07,4,0.061,5,0.07,6,0.08,7,1.548,8,0.044,9,0.171,10,0.131,11,2.42,12,2.42,13,2.42,14,0.179,15,0.124,16,0.968,17,0.012,18,1.195,19,0.349,20,1.487,21,1.122,22,1.78,23,1.022,24,0.171,25,1.487,26,1.43,27,2.226,28,2.902,29,2.066,30,1.615,31,2.838,32,2.082,33,1.282,34,1.087,35,0.677,36,0.906,37,1.087,38,1.022,39,2.32,40,1.99,41,2.32,42,2.32,43,2.143,44,1.99,45,1.328,46,1.615,47,1.328,48,2.569,49,1.318,50,0.854,51,0.739,52,2.082,53,1.243,54,1.239,55,1.795,56,0.854,57,2.236,58,0.854,59,1.377,60,2.143,61,1.326,62,2.42,63,1.615,64,1.615,65,1.615,66,1.615,67,1.548,68,1.615,69,1.615,70,1.615,71,0.173,72,2.475,73,1.615,74,1.615,75,1.615,76,1.615,77,1.615,78,1.377,79,1.615,80,1.159,81,1.615,82,1.615,83,1.615,84,1.615,85,1.615,86,1.615,87,1.615,88,1.615,89,1.615,90,1.615,91,1.615,92,1.615,93,1.615,94,1.615,95,1.615,96,2.517,97,1.498,98,2.303,99,1.737,100,1.629,101,2.227,102,2.227,103,2.748,104,1.615,105,2.42,106,1.615,107,1.43,108,1.615,109,1.615,110,3.007,111,1.856,112,1.825,113,1.953,114,3.379,115,2.696,116,2.902,117,2.42,118,1.198,119,1.615,120,2.42,121,2.781,122,3.056,123,1.615,124,1.615,125,1.615,126,3.204,127,2.152,128,2.781,129,2.902,130,1.615,131,2.227,132,1.615,133,3.223,134,0.771,135,1.487,136,1.615,137,1.548,138,1.548,139,1.615,140,1.615,141,1.615,142,1.615,143,2.227,144,0.488,145,1.615,146,2.42,147,2.42,148,2.475,149,2.42,150,2.32,151,1.548,152,1.615,153,1.43,154,2.143,155,1.615,156,2.475,157,1.487,158,1.487,159,1.487,160,2.143,161,1.548,162,1.487,163,1.548,164,2.227,165,0.429,166,0.783,167,1.377,168,1.487,169,2.6,170,1.133,171,1.282,172,2.143,173,2.227,174,1.43,175,1.487,176,1.548,177,1.548,178,1.328,179,1.676,180,1.921,181,1.681,182,1.377,183,1.328,184,0.806,185,1.377,186,0.62,187,1.087,188,1.43,189,1.377,190,1.487,191,1.548,192,1.548,193,1.548,194,1.377,195,1.487,196,2.227,197,3.335,198,1.054,199,0.783,200,1.548,201,2.064,202,1.159,203,2.064,204,1.548,205,1.99,206,1.548,207,2.227,208,1.43,209,2.227,210,1.487,211,1.328,212,1.856,213,1.548,214,1.377,215,1.548,216,1.282,217,2.32,218,2.064,219,0.933,220,1.548,221,1.548,222,0.125,223,1.122,224,0.004,225,0.006,226,0.004,228,0.957,230,0.242,232,0.93,1166,2.653,1167,2.32,2762,3.049,2763,3.049]],["title/interfaces/ResponseOptions.html",[0,1.283,175,2.044]],["body/interfaces/ResponseOptions.html",[0,2.367,1,1.69,2,1.45,3,0.071,4,0.062,5,0.071,6,0.045,7,1.57,8,0.045,9,0.23,10,0.175,11,2.445,12,2.445,13,2.445,14,0.179,15,0.124,16,0.97,17,0.012,18,1.227,19,0.353,20,1.508,21,1.138,22,1.795,23,1.036,24,0.171,25,1.508,26,1.45,27,2.244,28,2.926,29,1.938,30,1.638,31,2.855,32,2.1,33,1.3,34,1.102,35,0.687,36,0.918,37,1.102,38,1.036,39,2.344,40,2.011,41,2.344,42,2.344,43,2.165,44,2.011,45,1.347,46,1.638,47,1.347,48,2.59,49,1.331,50,0.866,51,0.749,52,2.1,53,1.256,54,1.256,55,1.813,56,0.866,57,2.246,58,0.866,59,1.397,60,2.165,61,1.124,62,2.445,63,1.638,64,1.638,65,1.638,66,1.638,67,1.57,68,1.638,69,1.638,70,1.638,71,0.173,72,2.495,73,1.638,74,1.638,75,1.638,76,1.638,77,1.638,78,1.397,79,1.638,80,1.175,81,1.638,82,1.638,83,1.638,84,1.638,85,1.638,86,1.638,87,1.638,88,1.638,89,1.638,90,1.638,91,1.638,92,1.638,93,1.638,94,1.638,95,1.638,96,2.53,97,1.436,98,2.323,99,1.755,100,1.646,101,2.251,102,2.251,103,2.767,104,1.638,105,2.445,106,1.638,107,1.45,108,1.638,109,1.638,110,3.011,111,1.875,112,1.836,113,1.969,114,3.385,115,2.708,116,2.926,117,2.445,118,1.215,119,1.638,120,2.445,121,2.804,122,3.074,123,1.638,124,1.638,125,1.638,126,3.218,127,2.17,128,2.804,129,2.926,130,1.638,131,2.251,132,1.638,133,3.245,134,0.778,135,1.508,136,1.638,137,1.57,138,1.57,139,1.638,140,1.638,141,1.638,142,1.638,143,2.251,144,0.494,145,1.638,146,2.445,147,2.445,148,2.495,149,2.445,150,2.344,151,1.57,152,1.638,153,1.45,154,2.165,155,1.638,156,2.495,157,1.508,158,1.508,159,1.508,160,2.165,161,1.57,162,1.508,163,1.57,164,2.987,165,0.435,166,0.794,167,1.397,168,1.508,169,2.184,170,1.221,171,1.3,172,2.165,173,2.251,174,1.45,175,2.251,176,3.11,177,3.11,178,1.347,179,1.412,180,1.3,181,1.138,182,1.397,183,1.347,184,0.817,185,1.397,186,0.629,187,1.102,188,1.45,189,1.397,190,1.508,191,1.57,192,1.57,193,1.57,194,1.397,195,1.508,196,2.251,197,3.352,198,1.068,199,0.794,200,1.57,201,2.085,202,1.175,203,2.085,204,1.57,205,2.011,206,1.57,207,2.251,208,1.45,209,2.251,210,1.508,211,1.347,212,1.875,213,1.57,214,1.397,215,1.57,216,1.3,217,2.344,218,2.085,219,0.946,220,1.57,221,1.57,222,0.071,223,1.138,224,0.004,225,0.006,226,0.004]],["title/classes/SegmentHandler.html",[234,0.313,2075,3.333]],["body/classes/SegmentHandler.html",[3,0.081,4,0.071,5,0.081,6,0.115,8,0.052,9,0.191,10,0.198,14,0.173,15,0.123,17,0.012,19,0.552,24,0.139,29,1.885,32,1.939,33,2.145,34,1.819,35,1.133,37,1.819,49,1.022,51,1.801,61,1.601,71,0.167,97,1.528,112,0.992,113,1.819,134,1.173,144,1.108,184,1.348,186,1.41,199,1.852,219,2.573,222,0.182,224,0.005,225,0.007,226,0.005,228,1.069,230,0.411,232,1.331,234,0.382,236,0.222,238,1.942,243,0.284,248,0.895,260,1.878,348,2.702,519,1.201,521,3.747,523,1.544,554,3.294,654,1.728,657,1.544,664,1.819,674,3.664,775,2.431,796,1.877,848,2.431,860,1.763,896,1.963,908,2.058,909,2.165,910,3.117,921,3.747,941,2.818,990,2.431,1007,1.49,1057,2.818,1148,2.603,1213,2.702,1359,1.877,1368,3.472,1548,2.165,1657,2.818,1750,2.431,1887,4.474,1907,2.818,2063,5.398,2064,2.431,2065,5.318,2066,3.106,2067,6.052,2070,3.106,2072,2.603,2075,4.057,2077,3.106,2079,3.106,2084,5.089,2085,2.818,2086,3.294,2087,4.222,2088,2.603,2089,2.431,2090,3.106,2091,5.2,2092,2.818,2093,2.603,2094,4.472,2095,3.106,2096,3.106,2097,4.472,2098,5.731,2099,3.106,2100,3.106,2101,6.074,2102,6.074,2103,3.106,2104,5.239,2105,3.106,2106,3.106,2107,5.239,2108,3.106,2109,3.106,2110,3.106,2111,3.106,2112,3.106,2113,3.106,2114,2.818,2115,3.106,2116,3.106,2117,3.106,2118,3.106,2119,3.106,2120,2.431,2121,3.106,2122,3.106,2123,3.106,2124,3.106,2125,3.106,2126,5.239,2127,3.106,2128,2.818,2129,3.106,2130,3.106,2131,2.431,2132,3.106,2133,3.106,2134,4.472,2135,4.472,2136,4.472,2137,4.472,2138,4.39,2139,4.472,2140,3.106,2141,2.603,2142,2.288,2760,3.106,2764,5.101,2765,5.101,2766,3.544,2767,5.101,2768,3.544,2769,3.544,2770,3.544,2771,3.544,2772,3.544,2773,3.544,2774,3.544,2775,3.544]],["title/interfaces/StoragePayload.html",[0,1.283,1851,3.333]],["body/interfaces/StoragePayload.html",[0,1.68,2,2.575,3,0.126,4,0.11,5,0.126,6,0.08,8,0.08,9,0.257,14,0.172,15,0.121,17,0.012,18,1.212,19,0.524,24,0.11,51,1.33,71,0.157,100,2.787,110,1.957,114,3.033,134,0.773,144,0.878,170,1.022,186,1.519,224,0.007,225,0.009,226,0.007,227,2.226,234,0.411,238,1.784,617,2.284,664,2.925,705,4.185,751,3.79,770,3.955,813,2.908,901,5.741,932,4.032,964,5.362,980,4.54,981,5.741,1076,3.766,1084,3.354,1092,3.766,1099,3.544,1103,3.766,1110,3.041,1113,5.031,1842,4.032,1843,4.366,1844,4.366,1845,4.366,1846,4.366,1847,4.812,1851,5.447,1852,6.852,1853,4.812,1854,4.812,1855,4.812,1856,4.812,1857,4.812,1858,4.812,1859,4.812,1860,4.812,1861,4.812,1862,4.812]],["title/interfaces/StructuredTypeField.html",[0,1.283,48,1.966]],["body/interfaces/StructuredTypeField.html",[0,2.334,1,1.955,2,1.366,3,0.067,4,0.059,5,0.067,6,0.042,7,1.479,8,0.042,9,0.223,10,0.238,11,2.338,12,2.338,13,2.338,14,0.179,15,0.126,16,0.997,17,0.012,18,1.254,19,0.338,20,1.42,21,1.072,22,1.731,23,0.976,24,0.17,25,1.42,26,1.366,27,2.165,28,2.822,29,1.899,30,1.543,31,2.782,32,2.025,33,1.225,34,1.038,35,0.647,36,0.865,37,1.038,38,0.976,39,2.241,40,1.922,41,2.241,42,2.241,43,2.07,44,1.922,45,1.269,46,1.543,47,1.269,48,2.788,49,1.842,50,1.665,51,1.44,52,2.555,53,1.738,54,2.415,55,2.509,56,1.665,57,2.367,58,1.665,59,2.685,60,2.07,61,1.084,62,2.338,63,1.543,64,1.543,65,1.543,66,1.543,67,1.479,68,1.543,69,1.543,70,1.543,71,0.172,72,2.407,73,1.543,74,1.543,75,1.543,76,1.543,77,1.543,78,1.316,79,1.543,80,1.107,81,1.543,82,1.543,83,1.543,84,1.543,85,1.543,86,1.543,87,1.543,88,1.543,89,1.543,90,1.543,91,1.543,92,1.543,93,1.543,94,1.543,95,1.543,96,2.474,97,1.38,98,2.24,99,1.677,100,1.573,101,2.152,102,2.152,103,2.685,104,1.543,105,2.338,106,1.543,107,1.366,108,1.543,109,1.543,110,2.991,111,1.793,112,1.789,113,1.9,114,3.358,115,2.654,116,2.822,117,2.338,118,1.144,119,1.543,120,2.338,121,2.705,122,2.996,123,1.543,124,1.543,125,1.543,126,3.154,127,2.093,128,2.705,129,2.822,130,1.543,131,2.152,132,1.543,133,3.149,134,0.75,135,1.42,136,1.543,137,1.479,138,1.479,139,1.543,140,1.543,141,1.543,142,1.543,143,2.152,144,0.466,145,1.543,146,2.338,147,2.338,148,2.407,149,2.338,150,2.241,151,1.479,152,1.543,153,1.366,154,2.07,155,1.543,156,2.407,157,1.42,158,1.42,159,1.42,160,2.07,161,1.479,162,1.42,163,1.479,164,2.152,165,0.41,166,0.748,167,1.316,168,1.42,169,2.119,170,1.107,171,1.225,172,2.07,173,2.152,174,1.366,175,1.42,176,1.479,177,1.479,178,1.269,179,1.35,180,1.225,181,1.072,182,1.316,183,1.269,184,0.77,185,1.316,186,0.593,187,1.038,188,1.366,189,1.316,190,1.42,191,1.479,192,1.479,193,1.479,194,1.316,195,1.42,196,2.152,197,3.278,198,1.006,199,0.748,200,1.479,201,1.993,202,1.107,203,1.993,204,1.479,205,1.922,206,1.479,207,2.152,208,1.366,209,2.152,210,1.42,211,1.269,212,1.793,213,1.479,214,1.316,215,1.479,216,1.225,217,2.241,218,1.993,219,0.891,220,1.479,221,1.479,222,0.067,223,1.072,224,0.004,225,0.006,226,0.004]],["title/interfaces/StructuredTypeFieldOptions.html",[0,1.283,178,1.826]],["body/interfaces/StructuredTypeFieldOptions.html",[0,2.371,1,1.698,2,1.462,3,0.071,4,0.063,5,0.071,6,0.045,7,1.583,8,0.045,9,0.23,11,2.46,12,2.46,13,2.46,14,0.179,15,0.124,16,0.972,17,0.012,18,1.201,19,0.355,20,1.52,21,1.147,22,1.804,23,1.044,24,0.171,25,1.52,26,1.462,27,2.255,28,2.94,29,1.943,30,1.651,31,2.865,32,2.11,33,1.311,34,1.111,35,0.692,36,0.926,37,1.111,38,1.044,39,2.358,40,2.023,41,2.358,42,2.358,43,2.178,44,2.023,45,1.358,46,1.651,47,1.358,48,3.085,49,1.339,50,0.873,51,0.755,52,2.11,53,1.263,54,1.266,55,2.584,56,0.873,57,2.252,58,0.873,59,1.408,60,2.178,61,1.129,62,2.46,63,1.651,64,1.651,65,1.651,66,1.651,67,1.583,68,1.651,69,1.651,70,1.651,71,0.173,72,2.507,73,1.651,74,1.651,75,1.651,76,1.651,77,1.651,78,1.408,79,1.651,80,1.185,81,1.651,82,1.651,83,1.651,84,1.651,85,1.651,86,1.651,87,1.651,88,1.651,89,1.651,90,1.651,91,1.651,92,1.651,93,1.651,94,1.651,95,1.651,96,2.538,97,1.408,98,2.334,99,1.765,100,1.656,101,2.264,102,2.264,103,2.778,104,1.651,105,2.46,106,1.651,107,1.462,108,1.651,109,1.651,110,3.014,111,1.887,112,1.842,113,1.979,114,3.389,115,2.715,116,2.94,117,2.46,118,1.224,119,1.651,120,2.46,121,2.818,122,3.085,123,1.651,124,1.651,125,1.651,126,3.227,127,2.18,128,2.818,129,2.94,130,1.651,131,2.264,132,1.651,133,3.258,134,0.781,135,1.52,136,1.651,137,1.583,138,1.583,139,1.651,140,1.651,141,1.651,142,1.651,143,2.264,144,0.498,145,1.651,146,2.46,147,2.46,148,2.507,149,2.46,150,2.358,151,1.583,152,1.651,153,1.462,154,2.178,155,1.651,156,2.507,157,1.52,158,1.52,159,1.52,160,2.178,161,1.583,162,1.52,163,1.583,164,2.264,165,0.439,166,0.8,167,1.408,168,1.52,169,2.345,170,1.225,171,1.311,172,2.178,173,2.264,174,1.462,175,1.52,176,1.583,177,1.583,178,2.023,179,1.421,180,1.311,181,1.147,182,1.408,183,1.358,184,0.824,185,1.408,186,0.634,187,1.111,188,1.462,189,1.408,190,1.52,191,1.583,192,1.583,193,1.583,194,1.408,195,1.52,196,2.264,197,3.362,198,1.077,199,0.8,200,1.583,201,2.098,202,1.185,203,2.098,204,1.583,205,2.023,206,1.583,207,2.264,208,1.462,209,2.264,210,1.52,211,1.358,212,1.887,213,1.583,214,1.408,215,1.583,216,1.311,217,2.358,218,2.098,219,0.954,220,1.583,221,1.583,222,0.071,223,1.147,224,0.004,225,0.006,226,0.004]],["title/dependencies.html",[2776,3.491,2777,4.423]],["body/dependencies.html",[17,0.011,23,2.18,224,0.008,225,0.01,226,0.008,2042,4.778,2777,5.703,2778,6.506,2779,8.67,2780,6.506,2781,6.506,2782,6.506,2783,7.588,2784,7.588,2785,6.506,2786,6.506,2787,6.506,2788,6.506,2789,6.506,2790,6.506,2791,6.506,2792,6.506,2793,6.506]],["title/miscellaneous/enumerations.html",[2794,2.254,2795,4.423]],["body/miscellaneous/enumerations.html",[6,0.114,8,0.081,15,0.1,17,0.012,32,2.618,33,2.896,34,2.456,35,1.53,45,3.001,47,3.001,51,1.669,61,1.816,118,2.706,222,0.158,224,0.007,225,0.009,226,0.007,238,2.238,260,2.535,514,4.856,515,6.038,521,5.059,524,4.856,525,4.856,554,4.447,909,4.209,921,5.059,1213,3.649,1275,4.001,1276,4.001,1397,5.059,1958,4.447,2063,3.801,2064,5.142,2091,5.478,2120,4.725,2146,4.406,2147,5.478,2167,5.059,2168,4.725,2169,5.478,2170,5.478,2794,3.577,2795,4.856,2796,5.54,2797,5.478,2798,5.54,2799,6.888,2800,4.406,2801,4.406,2802,6.888,2803,6.888,2804,6.888,2805,6.888,2806,6.888]],["title/miscellaneous/functions.html",[462,3.084,2794,2.254]],["body/miscellaneous/functions.html",[6,0.113,8,0.07,10,0.249,14,0.171,15,0.102,17,0.011,51,1.167,61,1.429,71,0.175,97,0.924,99,2.395,188,2.26,219,1.475,222,0.2,224,0.006,225,0.008,226,0.006,232,1.725,238,2.048,248,1.231,462,2.944,892,4.224,938,6.155,942,4.224,943,5.524,944,6.155,946,4.224,949,4.224,955,4.224,957,4.224,980,3.66,1058,3.832,2033,4.224,2047,4.224,2054,5.524,2063,3.306,2064,4.323,2065,3.306,2092,3.832,2142,5.119,2168,3.306,2282,3.832,2794,3.111,2797,3.832,2800,6.776,2801,3.832,2807,6.302,2808,4.819,2809,6.302,2810,6.302,2811,6.302,2812,6.302,2813,6.302,2814,6.302,2815,6.302,2816,4.819,2817,6.302,2818,6.302,2819,7.729,2820,6.302,2821,6.302,2822,6.302,2823,6.302,2824,6.302,2825,6.302,2826,6.302,2827,6.302,2828,7.022,2829,4.819,2830,4.819,2831,4.819,2832,4.224,2833,4.819,2834,4.819,2835,4.819,2836,6.302,2837,4.819,2838,4.819,2839,4.224,2840,4.819,2841,4.819,2842,4.819,2843,4.819,2844,4.819,2845,4.819,2846,6.302,2847,6.302,2848,4.819,2849,4.819,2850,4.819,2851,4.819,2852,4.819,2853,6.302,2854,4.819]],["title/index.html",[8,0.051,2855,3.06,2856,3.06]],["body/index.html",[4,0.086,17,0.012,19,0.61,24,0.133,36,1.273,37,2.361,45,2.538,47,2.538,51,1.038,57,2.417,67,2.176,71,0.086,96,2.145,98,2.784,107,3.105,110,2.078,111,1.741,112,1.2,113,2.733,121,2.176,122,2.733,128,2.176,151,2.176,162,2.089,187,1.528,190,2.089,202,2.825,224,0.006,225,0.008,226,0.006,234,0.495,527,3.756,617,1.783,659,3.147,704,1.577,781,3.756,782,5.219,783,4.28,852,5.108,907,2.27,912,4.061,1010,3.998,1083,2.374,1110,2.374,1213,2.27,1281,4.61,1560,3.561,1586,2.94,1744,4.634,1750,5.781,1958,4.275,2030,4.634,2031,4.28,2035,4.28,2041,6.229,2042,4.864,2049,5.108,2086,4.588,2131,2.94,2857,8.092,2858,4.285,2859,4.285,2860,4.285,2861,4.285,2862,4.285,2863,5.827,2864,7.106,2865,4.285,2866,4.285,2867,7.106,2868,4.285,2869,4.285,2870,4.285,2871,5.827,2872,4.285,2873,6.229,2874,4.285,2875,5.827,2876,4.285,2877,4.285,2878,4.285,2879,5.827,2880,4.285,2881,5.827,2882,4.285,2883,4.285,2884,4.285,2885,4.285,2886,4.285,2887,4.285,2888,4.285,2889,4.285,2890,5.827,2891,4.285,2892,4.285,2893,4.285,2894,4.285,2895,4.285,2896,4.285,2897,8.183,2898,4.285,2899,4.285,2900,4.285,2901,4.285,2902,5.827,2903,7.432,2904,7.106,2905,4.285,2906,4.285,2907,4.285,2908,4.285,2909,4.285,2910,4.285,2911,5.827,2912,4.285,2913,5.827,2914,4.285,2915,5.827,2916,5.827,2917,5.827,2918,4.285,2919,5.827,2920,4.285,2921,4.285,2922,4.285,2923,4.285,2924,4.285,2925,4.285,2926,4.285,2927,4.285,2928,6.622,2929,4.285,2930,5.827,2931,4.285,2932,4.285,2933,4.285,2934,4.285,2935,4.285,2936,4.285,2937,4.285,2938,5.827,2939,4.285,2940,5.827,2941,4.285,2942,4.285,2943,4.285,2944,4.285,2945,4.285,2946,4.285,2947,4.285,2948,4.285,2949,4.285,2950,4.285,2951,4.285,2952,4.285,2953,5.827,2954,4.285,2955,4.285,2956,4.285,2957,4.285,2958,4.285]],["title/license.html",[2855,3.06,2856,3.06,2959,3.06]],["body/license.html",[17,0.009,137,3.049,148,3.509,153,2.817,224,0.008,225,0.009,226,0.008,260,2.21,782,5.315,893,5.264,1373,3.67,2554,5.264,2873,5.264,2959,5.264,2960,6.006,2961,7.768,2962,6.006,2963,6.006,2964,6.006,2965,6.006,2966,7.237,2967,6.006,2968,6.006,2969,6.006,2970,6.006,2971,6.006,2972,6.006,2973,7.237,2974,8.61,2975,6.006,2976,6.006,2977,6.006,2978,6.006,2979,7.237,2980,6.006,2981,6.006,2982,6.006,2983,6.006,2984,6.006,2985,6.006,2986,6.006,2987,6.006,2988,7.237,2989,6.006,2990,6.006,2991,6.006,2992,6.006,2993,6.006,2994,6.006,2995,7.237,2996,7.237,2997,6.006,2998,6.006,2999,6.006,3000,6.006,3001,6.006,3002,6.006,3003,6.006,3004,6.006,3005,6.006,3006,6.006,3007,6.006,3008,6.006,3009,6.006,3010,6.006,3011,6.006,3012,6.006,3013,6.006,3014,6.006,3015,6.006,3016,6.006,3017,6.006,3018,6.006,3019,6.006,3020,6.006,3021,6.006,3022,6.006,3023,6.006,3024,6.006]],["title/modules.html",[2032,4.565]],["body/modules.html",[17,0.01,224,0.009,225,0.01,226,0.009,2031,5.068,2032,5.487,3025,6.899]],["title/overview.html",[3026,5.031]],["body/overview.html",[2,3.204,17,0.01,112,1.914,122,3.204,224,0.009,225,0.01,226,0.009,236,0.429,2030,5.433,2587,5.989,3026,5.989,3027,6.832,3028,6.832]],["title/miscellaneous/typealiases.html",[2794,2.254,3029,5.046]],["body/miscellaneous/typealiases.html",[6,0.114,7,2.31,8,0.066,14,0.16,15,0.128,16,0.54,17,0.011,18,0.94,25,2.958,31,2.642,37,2.433,39,3.08,40,2.642,41,3.08,42,3.08,43,2.845,44,2.973,45,2.642,47,2.642,61,1.234,103,2.74,110,2.704,111,1.848,126,2.74,143,2.218,156,2.74,157,2.218,158,2.218,159,2.218,160,2.845,161,2.31,162,2.218,163,2.31,164,2.958,165,0.64,166,1.167,167,2.055,189,2.74,196,2.958,197,2.958,199,1.752,201,2.74,203,2.74,205,2.642,207,2.958,209,2.958,218,2.74,224,0.006,225,0.008,226,0.006,227,2.856,929,5.983,1271,3.523,1272,5.317,1355,4.161,1938,5.317,1958,3.916,2063,3.12,2064,4.161,2067,4.824,2085,5.428,2087,4.406,2142,2.937,2167,4.456,2168,4.161,2424,5.317,2426,5.317,2433,5.317,2794,2.937,2797,3.617,2800,6.96,2801,3.617,2832,5.317,2839,5.317,3030,8.723,3031,7.584,3032,4.549,3033,6.825,3034,6.066,3035,7.281,3036,7.281,3037,7.281,3038,6.066,3039,6.825,3040,6.825,3041,7.281,3042,6.825,3043,7.281,3044,6.066,3045,4.549,3046,4.549,3047,4.549]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":674,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["0.10.2",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":112,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"overview.html":{}}}],["1.1.11",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":2779,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":3028,"title":{},"body":{"overview.html":{}}}],["2",{"_index":122,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":157,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["2.0.0",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":978,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["2019",{"_index":2962,"title":{},"body":{"license.html":{}}}],["3",{"_index":128,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["3.0",{"_index":158,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["4",{"_index":121,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["4.0",{"_index":159,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["404",{"_index":1767,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["5",{"_index":145,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["6.6.0",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["705b5ad71980",{"_index":109,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["81",{"_index":3027,"title":{},"body":{"overview.html":{}}}],["9a",{"_index":2101,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["_action",{"_index":1210,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_action(path",{"_index":1231,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_api",{"_index":998,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{}}}],["_cast",{"_index":1894,"title":{},"body":{"classes/ODataModel.html":{}}}],["_cast(type",{"_index":1905,"title":{},"body":{"classes/ODataModel.html":{}}}],["_config",{"_index":1219,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_context",{"_index":1409,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_entity",{"_index":1892,"title":{},"body":{"classes/ODataModel.html":{}}}],["_function",{"_index":1211,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_function(path",{"_index":1233,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_functions",{"_index":1408,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_meta",{"_index":1206,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_models",{"_index":1207,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_navigationproperty",{"_index":1895,"title":{},"body":{"classes/ODataModel.html":{}}}],["_navigationproperty(path",{"_index":1909,"title":{},"body":{"classes/ODataModel.html":{}}}],["_options",{"_index":2414,"title":{},"body":{"classes/ODataResponse.html":{}}}],["_properties",{"_index":1410,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["_query",{"_index":1221,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_relations",{"_index":1893,"title":{},"body":{"classes/ODataModel.html":{}}}],["_resource",{"_index":1208,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_segment",{"_index":1220,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_state",{"_index":1209,"title":{},"body":{"classes/ODataCollection.html":{}}}],["a.schemas.some(s",{"_index":2669,"title":{},"body":{"classes/ODataSettings.html":{}}}],["above",{"_index":2994,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":963,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["abstract",{"_index":297,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["acc",{"_index":839,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataSchema.html":{}}}],["acc.every(c",{"_index":2558,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc.parameters",{"_index":2562,"title":{},"body":{"classes/ODataSchema.html":{}}}],["acc.pipe(switchmap(({meta",{"_index":1999,"title":{},"body":{"classes/ODataModel.html":{}}}],["acc[key",{"_index":2241,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["acc[name",{"_index":1573,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["accept",{"_index":925,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["accept.length",{"_index":2310,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`ieee754compatible=${this.api.options.ieee754compatible",{"_index":2309,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accept.push(`odata.metadata=${this.api.options.metadata",{"_index":2306,"title":{},"body":{"classes/ODataRequest.html":{}}}],["accessors",{"_index":860,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["action",{"_index":260,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["action.ts",{"_index":239,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["action.ts:1",{"_index":360,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:12",{"_index":247,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:14",{"_index":251,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:15",{"_index":253,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:16",{"_index":250,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:17",{"_index":249,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:18",{"_index":252,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:22",{"_index":367,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:24",{"_index":371,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:25",{"_index":369,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:26",{"_index":368,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:27",{"_index":370,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:3",{"_index":364,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:31",{"_index":262,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:33",{"_index":265,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:34",{"_index":263,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:35",{"_index":264,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:39",{"_index":419,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:4",{"_index":366,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:41",{"_index":421,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:42",{"_index":426,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:43",{"_index":422,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:44",{"_index":420,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:45",{"_index":423,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:46",{"_index":424,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:47",{"_index":425,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:5",{"_index":362,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:51",{"_index":447,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:53",{"_index":453,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:54",{"_index":449,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:55",{"_index":448,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:56",{"_index":450,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:57",{"_index":451,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:58",{"_index":452,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:6",{"_index":361,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:7",{"_index":363,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:8",{"_index":365,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["actionimport",{"_index":568,"title":{},"body":{"classes/Field.html":{}}}],["actionimports",{"_index":320,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["actions",{"_index":456,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["add",{"_index":783,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["add(model",{"_index":1235,"title":{},"body":{"classes/ODataCollection.html":{}}}],["addbody",{"_index":2807,"title":{},"body":{"miscellaneous/functions.html":{}}}],["addbody(options",{"_index":2830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["additionalitems",{"_index":1589,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["addressinfo",{"_index":2929,"title":{},"body":{"index.html":{}}}],["aggregate",{"_index":2832,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["airport",{"_index":2905,"title":{},"body":{"index.html":{}}}],["airport.get().subscribe(console.log",{"_index":2934,"title":{},"body":{"index.html":{}}}],["airports",{"_index":2897,"title":{},"body":{"index.html":{}}}],["airports.entity(\"cyyz\").get({fetchpolicy",{"_index":2908,"title":{},"body":{"index.html":{}}}],["airports.get().subscribe(console.log",{"_index":2933,"title":{},"body":{"index.html":{}}}],["airports.query.filter().clear",{"_index":2924,"title":{},"body":{"index.html":{}}}],["airports.query.filter().push({location",{"_index":2918,"title":{},"body":{"index.html":{}}}],["airports.tojson",{"_index":2920,"title":{},"body":{"index.html":{}}}],["airportsservice",{"_index":2893,"title":{},"body":{"index.html":{}}}],["airportsservice.entities",{"_index":2898,"title":{},"body":{"index.html":{}}}],["alias",{"_index":199,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["alias(name",{"_index":1368,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["aliases",{"_index":2142,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":1023,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["along",{"_index":141,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["and/or",{"_index":2986,"title":{},"body":{"license.html":{}}}],["angular",{"_index":2857,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":21,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataMeta.html":{},"modules/ODataModule.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["angular/compiler",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":2042,"title":{},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["angularodataentity",{"_index":2868,"title":{},"body":{"index.html":{}}}],["annot",{"_index":679,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["annot.type",{"_index":681,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["annotation",{"_index":1,"title":{"interfaces/Annotation.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["annotation(type",{"_index":1532,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["annotation.ts",{"_index":267,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{}}}],["annotation.ts:1",{"_index":271,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:15",{"_index":284,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:17",{"_index":286,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:18",{"_index":285,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:2",{"_index":272,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:22",{"_index":493,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:24",{"_index":498,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:25",{"_index":503,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:26",{"_index":495,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:27",{"_index":496,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:28",{"_index":494,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:29",{"_index":499,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:30",{"_index":497,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:31",{"_index":500,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:32",{"_index":501,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:33",{"_index":502,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:5",{"_index":288,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:7",{"_index":290,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:9",{"_index":289,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotationconfig",{"_index":197,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataAnnotation.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["annotationlist",{"_index":268,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["annotations",{"_index":57,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["annotations(value",{"_index":75,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["annotationslist",{"_index":457,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["annots",{"_index":1249,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.count",{"_index":1305,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.skip",{"_index":1300,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.skiptoken",{"_index":1303,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.top",{"_index":1298,"title":{},"body":{"classes/ODataCollection.html":{}}}],["any)[f.name",{"_index":1610,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{}}}],["any)[field.name",{"_index":2019,"title":{},"body":{"classes/ODataModel.html":{}}}],["api",{"_index":96,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["api.configure(settings",{"_index":2664,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findcallablebyname(name)).filter(e",{"_index":2682,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findcallablefortype(type)).filter(e",{"_index":2675,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findcollectionbyname(name)).filter(e",{"_index":2685,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findcollectionfortype(type)).filter(e",{"_index":2679,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findentitysetbyname(name)).filter(e",{"_index":2683,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findentitysetfortype(type)).filter(e",{"_index":2676,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findenumtypebyname(name)).filter(e",{"_index":2680,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findenumtypefortype(type)).filter(e",{"_index":2671,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findmodelbyname(name)).filter(e",{"_index":2684,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findmodelfortype(type)).filter(e",{"_index":2678,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findparserfortype(type",{"_index":2375,"title":{},"body":{"classes/ODataResource.html":{}}}],["api.findparserfortype(type)).filter(e",{"_index":2677,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findstructuredtypebyname(name)).filter(e",{"_index":2681,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.findstructuredtypefortype(type)).filter(e",{"_index":2674,"title":{},"body":{"classes/ODataSettings.html":{}}}],["api.options",{"_index":2378,"title":{},"body":{"classes/ODataResource.html":{}}}],["apibyname",{"_index":2597,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apibyname(name",{"_index":2616,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apiconfig",{"_index":189,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"modules/ODataModule.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["apifor(this",{"_index":2353,"title":{},"body":{"classes/ODataResource.html":{}}}],["apifortype",{"_index":2598,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apifortype(type",{"_index":2618,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apiname",{"_index":2396,"title":{},"body":{"classes/ODataResource.html":{}}}],["apioptions",{"_index":172,"title":{"interfaces/ApiOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["apis",{"_index":2596,"title":{},"body":{"classes/ODataSettings.html":{}}}],["apollo",{"_index":105,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["aports",{"_index":2901,"title":{},"body":{"index.html":{}}}],["app",{"_index":2883,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":2888,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":2886,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":2889,"title":{},"body":{"index.html":{}}}],["application/json;${accept.join",{"_index":2312,"title":{},"body":{"classes/ODataRequest.html":{}}}],["application_http",{"_index":927,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["application_json",{"_index":916,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["appliesto",{"_index":282,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["appmodule",{"_index":2879,"title":{},"body":{"index.html":{}}}],["arising",{"_index":3021,"title":{},"body":{"license.html":{}}}],["arr",{"_index":2226,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.find(v",{"_index":2229,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.push(obj",{"_index":2231,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["array",{"_index":40,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(value",{"_index":1181,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{}}}],["arraybuffer",{"_index":2271,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["arraybuffer(options",{"_index":2729,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["ascollection",{"_index":1356,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["ascollection(entities",{"_index":1370,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["ascollection>>(entities",{"_index":2364,"title":{},"body":{"classes/ODataResource.html":{}}}],["asked",{"_index":124,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["asmodel",{"_index":1357,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["asmodel(entity",{"_index":1374,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["asmodel>(entity",{"_index":2361,"title":{},"body":{"classes/ODataResource.html":{}}}],["assertarray",{"_index":2211,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assertobject",{"_index":2741,"title":{},"body":{"classes/OptionHandler.html":{}}}],["assertobject(create",{"_index":2224,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assign",{"_index":1701,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/OptionHandler.html":{}}}],["assign(entity",{"_index":1709,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["assign(values",{"_index":2254,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["associated",{"_index":2975,"title":{},"body":{"license.html":{}}}],["at(index",{"_index":2221,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attach",{"_index":1212,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataSingletonService.html":{}}}],["attach(resource",{"_index":1238,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["attach(value",{"_index":1711,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["attach>(value",{"_index":1740,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["attach>>(value",{"_index":1741,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["attr",{"_index":663,"title":{},"body":{"classes/Field.html":{}}}],["attr?.nodevalue",{"_index":666,"title":{},"body":{"classes/Field.html":{}}}],["attribute",{"_index":524,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["attribute_abstract",{"_index":608,"title":{},"body":{"classes/Field.html":{}}}],["attribute_action",{"_index":605,"title":{},"body":{"classes/Field.html":{}}}],["attribute_alias",{"_index":575,"title":{},"body":{"classes/Field.html":{}}}],["attribute_applies_to",{"_index":613,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_term",{"_index":612,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_type",{"_index":583,"title":{},"body":{"classes/Field.html":{}}}],["attribute_contains_target",{"_index":597,"title":{},"body":{"classes/Field.html":{}}}],["attribute_default_value",{"_index":592,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set",{"_index":606,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set_path",{"_index":599,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_type",{"_index":601,"title":{},"body":{"classes/Field.html":{}}}],["attribute_extends",{"_index":611,"title":{},"body":{"classes/Field.html":{}}}],["attribute_function",{"_index":604,"title":{},"body":{"classes/Field.html":{}}}],["attribute_has_stream",{"_index":596,"title":{},"body":{"classes/Field.html":{}}}],["attribute_include_in_service_document",{"_index":607,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_bound",{"_index":598,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_composable",{"_index":600,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_flags",{"_index":610,"title":{},"body":{"classes/Field.html":{}}}],["attribute_max_length",{"_index":587,"title":{},"body":{"classes/Field.html":{}}}],["attribute_name",{"_index":581,"title":{},"body":{"classes/Field.html":{}}}],["attribute_namespace",{"_index":576,"title":{},"body":{"classes/Field.html":{}}}],["attribute_nullable",{"_index":586,"title":{},"body":{"classes/Field.html":{}}}],["attribute_open_type",{"_index":584,"title":{},"body":{"classes/Field.html":{}}}],["attribute_partner",{"_index":593,"title":{},"body":{"classes/Field.html":{}}}],["attribute_path",{"_index":602,"title":{},"body":{"classes/Field.html":{}}}],["attribute_precision",{"_index":588,"title":{},"body":{"classes/Field.html":{}}}],["attribute_property",{"_index":594,"title":{},"body":{"classes/Field.html":{}}}],["attribute_qualifier",{"_index":578,"title":{},"body":{"classes/Field.html":{}}}],["attribute_referenced_property",{"_index":595,"title":{},"body":{"classes/Field.html":{}}}],["attribute_scale",{"_index":589,"title":{},"body":{"classes/Field.html":{}}}],["attribute_srid",{"_index":591,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target",{"_index":603,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target_namespace",{"_index":579,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term",{"_index":580,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term_namespace",{"_index":577,"title":{},"body":{"classes/Field.html":{}}}],["attribute_type",{"_index":585,"title":{},"body":{"classes/Field.html":{}}}],["attribute_underlying_type",{"_index":609,"title":{},"body":{"classes/Field.html":{}}}],["attribute_unicode",{"_index":590,"title":{},"body":{"classes/Field.html":{}}}],["attribute_uri",{"_index":574,"title":{},"body":{"classes/Field.html":{}}}],["attribute_value",{"_index":582,"title":{},"body":{"classes/Field.html":{}}}],["attribute_version",{"_index":573,"title":{},"body":{"classes/Field.html":{}}}],["attributes",{"_index":572,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataModel.html":{}}}],["attributes(data",{"_index":1470,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["attributes(value",{"_index":76,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["attributes.getnameditem('version",{"_index":665,"title":{},"body":{"classes/Field.html":{}}}],["attrs",{"_index":1383,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{}}}],["attrs[value.field.name",{"_index":1998,"title":{},"body":{"classes/ODataModel.html":{}}}],["authors",{"_index":3013,"title":{},"body":{"license.html":{}}}],["average",{"_index":2805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backend",{"_index":1858,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backend.setitem(key",{"_index":1859,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["backward",{"_index":2119,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["base",{"_index":214,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["baseterm",{"_index":280,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["basetype",{"_index":298,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["basic",{"_index":2945,"title":{},"body":{"index.html":{}}}],["batch",{"_index":921,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["batch.request.method",{"_index":1042,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batch_prefix",{"_index":920,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["batchboundary",{"_index":999,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["binary",{"_index":929,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/typealiases.html":{}}}],["binding",{"_index":343,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["binding.ts",{"_index":411,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:1",{"_index":413,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:3",{"_index":414,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:4",{"_index":415,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["blob",{"_index":2272,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["blob(options",{"_index":2731,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["body",{"_index":980,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/functions.html":{}}}],["bool",{"_index":11,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boolean",{"_index":16,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["bound",{"_index":220,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["boundary",{"_index":953,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary.split('=')[1",{"_index":956,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundary_prefix_suffix",{"_index":915,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundarydelimiter",{"_index":955,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["boundarydelimiter.length",{"_index":958,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["boundaryend",{"_index":959,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["brackets",{"_index":2236,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["break",{"_index":2512,"title":{},"body":{"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{}}}],["browse",{"_index":3025,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["buildaggregate",{"_index":2809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildaggregate(aggregate",{"_index":2831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildentry",{"_index":1077,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["buildentry(payload",{"_index":1088,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["builder",{"_index":2086,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["buildexpand",{"_index":2810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildexpand(expands",{"_index":2833,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter",{"_index":2811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter(filters",{"_index":2835,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby",{"_index":2812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby(groupby",{"_index":2838,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby",{"_index":2813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby(orderby",{"_index":2840,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildquery",{"_index":2084,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["buildquery(options",{"_index":2183,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["buildtransforms",{"_index":2814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildtransforms(transforms",{"_index":2841,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl",{"_index":2815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl(path",{"_index":2843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builtfilters",{"_index":2851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["c",{"_index":1373,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"license.html":{}}}],["c.default",{"_index":2661,"title":{},"body":{"classes/ODataSettings.html":{}}}],["c.default).length",{"_index":2658,"title":{},"body":{"classes/ODataSettings.html":{}}}],["c.find(predicate",{"_index":1649,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["c.istypeof(type",{"_index":2473,"title":{},"body":{"classes/ODataResponse.html":{}}}],["c.istypeof(type)).deserialize(value",{"_index":1577,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["c.istypeof(type)).serialize(value",{"_index":1582,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["c.name",{"_index":2559,"title":{},"body":{"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["c.parameters",{"_index":2564,"title":{},"body":{"classes/ODataSchema.html":{}}}],["c.schemas.some(s",{"_index":2666,"title":{},"body":{"classes/ODataSettings.html":{}}}],["cache",{"_index":110,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cache/index",{"_index":773,"title":{},"body":{"classes/ODataApi.html":{}}}],["cache_control",{"_index":2438,"title":{},"body":{"classes/ODataResponse.html":{}}}],["cacheability",{"_index":176,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["cachecacheability",{"_index":164,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["cachecontrol",{"_index":2469,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["cachecontrol.split(\",\").foreach(directive",{"_index":2518,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["cached",{"_index":135,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["california",{"_index":2919,"title":{},"body":{"index.html":{}}}],["call",{"_index":1347,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["callable",{"_index":2546,"title":{},"body":{"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["callable.configure(settings",{"_index":2585,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callablebyname",{"_index":2599,"title":{},"body":{"classes/ODataSettings.html":{}}}],["callablebyname(name",{"_index":2620,"title":{},"body":{"classes/ODataSettings.html":{}}}],["callableconfig",{"_index":205,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["callableconfigs",{"_index":2555,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.filter(c",{"_index":2560,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.map(config",{"_index":2566,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callableconfigs.reduce((acc",{"_index":2557,"title":{},"body":{"classes/ODataSchema.html":{}}}],["callablefor",{"_index":2600,"title":{},"body":{"classes/ODataSettings.html":{}}}],["callablefor(type",{"_index":2622,"title":{},"body":{"classes/ODataSettings.html":{}}}],["callables",{"_index":204,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["case",{"_index":990,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{}}}],["cast",{"_index":2014,"title":{},"body":{"classes/ODataModel.html":{}}}],["catch",{"_index":653,"title":{},"body":{"classes/Field.html":{}}}],["catcherror",{"_index":757,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntityService.html":{}}}],["caught",{"_index":193,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["changeset",{"_index":1040,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changeset_prefix",{"_index":930,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetboundary",{"_index":1037,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetendline",{"_index":1066,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetid",{"_index":1038,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["changesetresponses",{"_index":1064,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["channel",{"_index":988,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["charge",{"_index":2970,"title":{},"body":{"license.html":{}}}],["check",{"_index":659,"title":{},"body":{"classes/Field.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["checking",{"_index":149,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["checks",{"_index":116,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["checkversion(document",{"_index":658,"title":{},"body":{"classes/Field.html":{}}}],["children",{"_index":671,"title":{},"body":{"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["chunk[0].split",{"_index":1070,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["chunks",{"_index":1057,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["chunks.join(path_separator",{"_index":2110,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["city",{"_index":2913,"title":{},"body":{"index.html":{}}}],["claim",{"_index":3016,"title":{},"body":{"license.html":{}}}],["class",{"_index":234,"title":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["classes",{"_index":236,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"overview.html":{}}}],["clear",{"_index":2148,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["client",{"_index":115,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["client.apifor(this",{"_index":1003,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{}}}],["clone",{"_index":1007,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["close",{"_index":1041,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["code",{"_index":976,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["collection",{"_index":52,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["collection(entities",{"_index":2366,"title":{},"body":{"classes/ODataResource.html":{}}}],["collectionbyname",{"_index":2601,"title":{},"body":{"classes/ODataSettings.html":{}}}],["collectionbyname(name",{"_index":2624,"title":{},"body":{"classes/ODataSettings.html":{}}}],["collectionfortype",{"_index":2602,"title":{},"body":{"classes/ODataSettings.html":{}}}],["collectionfortype(type",{"_index":2626,"title":{},"body":{"classes/ODataSettings.html":{}}}],["collectionoperator",{"_index":2846,"title":{},"body":{"miscellaneous/functions.html":{}}}],["complexes",{"_index":1964,"title":{},"body":{"classes/ODataModel.html":{}}}],["complextype",{"_index":547,"title":{},"body":{"classes/Field.html":{}}}],["complextypes",{"_index":458,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["compodoc",{"_index":2952,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":2881,"title":{},"body":{"index.html":{}}}],["composable",{"_index":221,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallable.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["compose",{"_index":1642,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["conditions",{"_index":2993,"title":{},"body":{"license.html":{}}}],["config",{"_index":704,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"index.html":{}}}],["config.alias",{"_index":2548,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.annotations",{"_index":1505,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["config.base",{"_index":1593,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["config.bound",{"_index":1150,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.cache",{"_index":800,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.callables",{"_index":2556,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.collection",{"_index":2713,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.composable",{"_index":1154,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.configure(settings",{"_index":2583,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.containers",{"_index":2569,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.creation",{"_index":795,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.default",{"_index":792,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.entities",{"_index":2552,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.entitysets",{"_index":1507,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["config.enums",{"_index":2550,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.errorhandler",{"_index":802,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.expand",{"_index":1618,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["config.fetchpolicy",{"_index":889,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.flags",{"_index":1785,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["config.headers",{"_index":885,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.ieee754compatible",{"_index":881,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.members",{"_index":1787,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{}}}],["config.metadata",{"_index":877,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.model",{"_index":2712,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["config.name",{"_index":789,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["config.name).reduce((acc",{"_index":2561,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.namespace",{"_index":2547,"title":{},"body":{"classes/ODataSchema.html":{}}}],["config.options",{"_index":798,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.params",{"_index":883,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["config.parsers",{"_index":804,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.path",{"_index":1149,"title":{},"body":{"classes/ODataCallable.html":{}}}],["config.return",{"_index":1188,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["config.schemas",{"_index":805,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.select",{"_index":1619,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["config.select).indexof(f.name",{"_index":1620,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["config.servicerooturl",{"_index":777,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.servicerooturl}$metadata",{"_index":787,"title":{},"body":{"classes/ODataApi.html":{}}}],["config.stringasenum",{"_index":879,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.version",{"_index":790,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["config.withcredentials",{"_index":887,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["configs",{"_index":188,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"modules/ODataModule.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["configs.map(config",{"_index":2652,"title":{},"body":{"classes/ODataSettings.html":{}}}],["configuration",{"_index":1624,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSettings.html":{}}}],["configure",{"_index":687,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["configure(settings",{"_index":719,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["connection",{"_index":3023,"title":{},"body":{"license.html":{}}}],["console.log(\"airport",{"_index":2910,"title":{},"body":{"index.html":{}}}],["console.log(\"airports",{"_index":2904,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":2900,"title":{},"body":{"index.html":{}}}],["console.log(\"people",{"_index":2931,"title":{},"body":{"index.html":{}}}],["console.log(json",{"_index":2921,"title":{},"body":{"index.html":{}}}],["console.log(query",{"_index":2923,"title":{},"body":{"index.html":{}}}],["const",{"_index":617,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["constants",{"_index":523,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["constructor",{"_index":243,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["constructor(...configs",{"_index":2650,"title":{},"body":{"classes/ODataSettings.html":{}}}],["constructor(action",{"_index":416,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["constructor(annot",{"_index":677,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["constructor(annotationlist",{"_index":269,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["constructor(client",{"_index":1000,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["constructor(config",{"_index":702,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["constructor(configs",{"_index":2614,"title":{},"body":{"classes/ODataSettings.html":{}}}],["constructor(data",{"_index":1450,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{}}}],["constructor(init",{"_index":1084,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["constructor(name",{"_index":244,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{}}}],["constructor(namespace",{"_index":374,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlSchema.html":{}}}],["constructor(o",{"_index":2744,"title":{},"body":{"classes/OptionHandler.html":{}}}],["constructor(options",{"_index":2150,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["constructor(path",{"_index":412,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["constructor(private",{"_index":2131,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor(property",{"_index":442,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["constructor(propertyrefs",{"_index":390,"title":{},"body":{"classes/CsdlKey.html":{}}}],["constructor(protected",{"_index":1736,"title":{},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["constructor(public",{"_index":273,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{}}}],["constructor(request",{"_index":897,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["constructor(segment",{"_index":2766,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["constructor(segments",{"_index":2066,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["constructor(target",{"_index":287,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["constructor(term",{"_index":283,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["constructor(termnamespace",{"_index":385,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["constructor(type",{"_index":446,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["constructor(uri",{"_index":437,"title":{},"body":{"classes/CsdlReference.html":{}}}],["constructor(values",{"_index":1222,"title":{},"body":{"classes/ODataCollection.html":{}}}],["constructor(xml",{"_index":615,"title":{},"body":{"classes/Field.html":{}}}],["contain",{"_index":780,"title":{},"body":{"classes/ODataApi.html":{}}}],["container",{"_index":479,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{}}}],["container.entitysets",{"_index":2576,"title":{},"body":{"classes/ODataSchema.html":{}}}],["container.ts",{"_index":319,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:10",{"_index":332,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:11",{"_index":330,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:12",{"_index":327,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:19",{"_index":1504,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["container.ts:5",{"_index":326,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:7",{"_index":331,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:8",{"_index":329,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["container.ts:9",{"_index":328,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/ODataEntityContainer.html":{}}}],["containers",{"_index":206,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["containstarget",{"_index":395,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["content",{"_index":903,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content.join(newline",{"_index":992,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_id",{"_index":928,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_transfer_encoding",{"_index":926,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["content_type",{"_index":918,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["contentid",{"_index":1065,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contents",{"_index":2870,"title":{},"body":{"index.html":{}}}],["contenttype",{"_index":1058,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["contenttype.indexof(application_json",{"_index":2459,"title":{},"body":{"classes/ODataResponse.html":{}}}],["contenttype.split",{"_index":951,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttype.split(\",\").find(p",{"_index":2461,"title":{},"body":{"classes/ODataResponse.html":{}}}],["contenttype.split(';')[1].trim",{"_index":954,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttypeparts",{"_index":950,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["contenttypeparts.length",{"_index":952,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["context",{"_index":72,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["context(value",{"_index":81,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["contract",{"_index":3019,"title":{},"body":{"license.html":{}}}],["copies",{"_index":2988,"title":{},"body":{"license.html":{}}}],["copts",{"_index":2384,"title":{},"body":{"classes/ODataResource.html":{}}}],["copts.helper.countparam",{"_index":2388,"title":{},"body":{"classes/ODataResource.html":{}}}],["copts.helper.etag(options.attrs",{"_index":2394,"title":{},"body":{"classes/ODataResource.html":{}}}],["copy",{"_index":2973,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2961,"title":{},"body":{"license.html":{}}}],["count",{"_index":1213,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["count(value",{"_index":94,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["count).settype('edm.int32",{"_index":1399,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["countdistinct",{"_index":2806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countparam",{"_index":95,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["countryregion",{"_index":2914,"title":{},"body":{"index.html":{}}}],["covered",{"_index":1396,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["create",{"_index":1702,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["create(entity",{"_index":1715,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["create(options",{"_index":1913,"title":{},"body":{"classes/ODataModel.html":{}}}],["createsettings",{"_index":2054,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["createsettings(configs",{"_index":2047,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":2860,"title":{},"body":{"index.html":{}}}],["creation",{"_index":191,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["csdl",{"_index":310,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdl/csdl",{"_index":518,"title":{},"body":{"classes/Field.html":{}}}],["csdlaction",{"_index":235,"title":{"classes/CsdlAction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlactionimport",{"_index":259,"title":{"classes/CsdlActionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlannotable",{"_index":266,"title":{"classes/CsdlAnnotable.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotable:2",{"_index":292,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotation",{"_index":270,"title":{"classes/CsdlAnnotation.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["csdlannotations",{"_index":274,"title":{"classes/CsdlAnnotations.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdlcomplextype",{"_index":293,"title":{"classes/CsdlComplexType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlentitycontainer",{"_index":318,"title":{"classes/CsdlEntityContainer.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlentityset",{"_index":324,"title":{"classes/CsdlEntitySet.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["csdlentitytype",{"_index":313,"title":{"classes/CsdlEntityType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlenummember",{"_index":347,"title":{"classes/CsdlEnumMember.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["csdlenumtype",{"_index":352,"title":{"classes/CsdlEnumType.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunction",{"_index":254,"title":{"classes/CsdlFunction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunctionimport",{"_index":256,"title":{"classes/CsdlFunctionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlinclude",{"_index":372,"title":{"classes/CsdlInclude.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlincludeannotations",{"_index":382,"title":{"classes/CsdlIncludeAnnotations.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlkey",{"_index":314,"title":{"classes/CsdlKey.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationproperty",{"_index":302,"title":{"classes/CsdlNavigationProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationpropertybinding",{"_index":337,"title":{"classes/CsdlNavigationPropertyBinding.html":{}},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlondelete",{"_index":400,"title":{"classes/CsdlOnDelete.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlparameter",{"_index":246,"title":{"classes/CsdlParameter.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlproperty",{"_index":301,"title":{"classes/CsdlProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlpropertyref",{"_index":317,"title":{"classes/CsdlPropertyRef.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlreference",{"_index":378,"title":{"classes/CsdlReference.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlreferentialconstraint",{"_index":399,"title":{"classes/CsdlReferentialConstraint.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlreturntype",{"_index":245,"title":{"classes/CsdlReturnType.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlschema",{"_index":454,"title":{"classes/CsdlSchema.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlsingleton",{"_index":325,"title":{"classes/CsdlSingleton.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlstructuralproperty",{"_index":394,"title":{"classes/CsdlStructuralProperty.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["csdlstructuralproperty:3",{"_index":406,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:4",{"_index":408,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:5",{"_index":407,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuredtype",{"_index":296,"title":{"classes/CsdlStructuredType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["csdlstructuredtype:10",{"_index":304,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:5",{"_index":306,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:6",{"_index":309,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:7",{"_index":307,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:8",{"_index":305,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:9",{"_index":308,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlterm",{"_index":279,"title":{"classes/CsdlTerm.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdltypedefinition",{"_index":465,"title":{"classes/CsdlTypeDefinition.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["ctor",{"_index":1315,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["ctor(this.models",{"_index":1317,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ctor(this.toentity",{"_index":1985,"title":{},"body":{"classes/ODataModel.html":{}}}],["current",{"_index":1015,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["custom",{"_index":2170,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["custom.reduce((acc",{"_index":2190,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["customheaders",{"_index":2302,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[accept",{"_index":2311,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customheaders[if_match_header",{"_index":2304,"title":{},"body":{"classes/ODataRequest.html":{}}}],["customizations",{"_index":2949,"title":{},"body":{"index.html":{}}}],["damages",{"_index":3017,"title":{},"body":{"license.html":{}}}],["data",{"_index":114,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["data(data",{"_index":1421,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["dataservices",{"_index":636,"title":{},"body":{"classes/Field.html":{}}}],["date",{"_index":143,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["date.now",{"_index":940,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["dates",{"_index":2088,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(segment.options",{"_index":2115,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["dates.isostringtodate(json.parse(json.stringify(this.options",{"_index":2194,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["deal",{"_index":2977,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3024,"title":{},"body":{"license.html":{}}}],["deep",{"_index":2948,"title":{},"body":{"index.html":{}}}],["def",{"_index":2244,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["default",{"_index":49,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["default_fetch_policy",{"_index":872,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["default_timeout",{"_index":1109,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["default_version",{"_index":774,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["defaultapi",{"_index":2603,"title":{},"body":{"classes/ODataSettings.html":{}}}],["defaultvalue",{"_index":281,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["defined",{"_index":230,"title":{},"body":{"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["definition",{"_index":478,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["definition.ts",{"_index":504,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:10",{"_index":513,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:11",{"_index":511,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:3",{"_index":506,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:5",{"_index":508,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:6",{"_index":512,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:7",{"_index":507,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:8",{"_index":509,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:9",{"_index":510,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["delete",{"_index":1052,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["delete(options",{"_index":1378,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["deleting",{"_index":2861,"title":{},"body":{"index.html":{}}}],["delivered",{"_index":987,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["deltalink",{"_index":1413,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["deltalink(value",{"_index":93,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["demo",{"_index":2865,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":2777,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":2055,"title":{},"body":{"modules/ODataModule.html":{}}}],["description",{"_index":1623,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["deserialize",{"_index":1166,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponse.html":{},"interfaces/Parser.html":{}}}],["deserialize(type",{"_index":2421,"title":{},"body":{"classes/ODataResponse.html":{}}}],["deserialize(value",{"_index":180,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["destroy",{"_index":1703,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["destroy(entity",{"_index":1717,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["destroy(options",{"_index":1915,"title":{},"body":{"classes/ODataModel.html":{}}}],["diego",{"_index":2963,"title":{},"body":{"license.html":{}}}],["directive",{"_index":2525,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directive.startswith(max_age",{"_index":2519,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["directly",{"_index":119,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["distribute",{"_index":2984,"title":{},"body":{"license.html":{}}}],["document",{"_index":619,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.attributes",{"_index":627,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.getelementsbytagname(odatametadata.tag_data_services)[0",{"_index":638,"title":{},"body":{"classes/Field.html":{}}}],["documentation",{"_index":2873,"title":{},"body":{"index.html":{},"license.html":{}}}],["domparser",{"_index":618,"title":{},"body":{"classes/Field.html":{}}}],["done",{"_index":1321,"title":{},"body":{"classes/ODataCollection.html":{}}}],["down",{"_index":2218,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["duration",{"_index":3031,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dynamic",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":2672,"title":{},"body":{"classes/ODataSettings.html":{}}}],["e.istypeof(type",{"_index":2578,"title":{},"body":{"classes/ODataSchema.html":{}}}],["e.name",{"_index":842,"title":{},"body":{"classes/ODataApi.html":{}}}],["e[0]}${value_separator}${e[1",{"_index":2372,"title":{},"body":{"classes/ODataResource.html":{}}}],["editlink",{"_index":1478,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["editlink(value",{"_index":90,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["edm_parsers",{"_index":760,"title":{},"body":{"classes/ODataApi.html":{}}}],["edms",{"_index":851,"title":{},"body":{"classes/ODataApi.html":{}}}],["edmx:dataservices",{"_index":532,"title":{},"body":{"classes/Field.html":{}}}],["edmx:edmx",{"_index":530,"title":{},"body":{"classes/Field.html":{}}}],["edmx:include",{"_index":536,"title":{},"body":{"classes/Field.html":{}}}],["edmx:includeannotations",{"_index":538,"title":{},"body":{"classes/Field.html":{}}}],["edmx:reference",{"_index":534,"title":{},"body":{"classes/Field.html":{}}}],["element",{"_index":637,"title":{},"body":{"classes/Field.html":{}}}],["empty",{"_index":1266,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["endline",{"_index":1060,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["endregion",{"_index":223,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ensure",{"_index":2235,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["entities",{"_index":202,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entities'].indexof(options.responsetype",{"_index":2390,"title":{},"body":{"classes/ODataResource.html":{}}}],["entities(value",{"_index":73,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entity",{"_index":36,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlSchema.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["entity(\"cyyz\").get",{"_index":2906,"title":{},"body":{"index.html":{}}}],["entity(data",{"_index":1423,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["entity(key",{"_index":1720,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["entity(name",{"_index":2590,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["entity(value",{"_index":70,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitycontainer",{"_index":459,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["entitycontainerconfig",{"_index":207,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityContainer.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitykey",{"_index":25,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entityschema",{"_index":1707,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["entityset",{"_index":34,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["entitysetbyname",{"_index":2604,"title":{},"body":{"classes/ODataSettings.html":{}}}],["entitysetbyname(name",{"_index":2630,"title":{},"body":{"classes/ODataSettings.html":{}}}],["entitysetconfig",{"_index":209,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitySet.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["entitysetfortype",{"_index":2605,"title":{},"body":{"classes/ODataSettings.html":{}}}],["entitysetfortype(type",{"_index":2632,"title":{},"body":{"classes/ODataSettings.html":{}}}],["entitysetpath",{"_index":240,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["entitysets",{"_index":208,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["entitysetschema",{"_index":1706,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["entitytype",{"_index":335,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{},"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["entitytypes",{"_index":460,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["entries",{"_index":1075,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModel.html":{}}}],["entry",{"_index":1101,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["entry.lastread",{"_index":1122,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["entry.payload",{"_index":1118,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["enum",{"_index":348,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["enumerations",{"_index":2795,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enumhelper",{"_index":1780,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.names(this.members",{"_index":1799,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.toname(this.members",{"_index":1797,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.tonames(this.members",{"_index":1792,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.tovalue(this.members",{"_index":1791,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enumhelper.tovalues(this.members",{"_index":1789,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["enums",{"_index":200,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enumtype",{"_index":544,"title":{},"body":{"classes/Field.html":{}}}],["enumtypebyname",{"_index":2606,"title":{},"body":{"classes/ODataSettings.html":{}}}],["enumtypebyname(name",{"_index":2634,"title":{},"body":{"classes/ODataSettings.html":{}}}],["enumtypeconfig",{"_index":201,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["enumtypefield",{"_index":60,"title":{"interfaces/EnumTypeField.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["enumtypefortype",{"_index":2607,"title":{},"body":{"classes/ODataSettings.html":{}}}],["enumtypefortype(type",{"_index":2636,"title":{},"body":{"classes/ODataSettings.html":{}}}],["enumtypes",{"_index":461,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["error",{"_index":154,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["error(\"batch",{"_index":1019,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["error(\"multiple",{"_index":2656,"title":{},"body":{"classes/ODataSettings.html":{}}}],["error(\"no",{"_index":1448,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{}}}],["error(\"not",{"_index":1330,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["error(\"the",{"_index":779,"title":{},"body":{"classes/ODataApi.html":{}}}],["error('odata",{"_index":661,"title":{},"body":{"classes/Field.html":{}}}],["error('unable",{"_index":655,"title":{},"body":{"classes/Field.html":{}}}],["error(`can't",{"_index":1290,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["error(`no",{"_index":2128,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["error.status",{"_index":1766,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["errorhandler",{"_index":192,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["escapeillegalchars",{"_index":2817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapeillegalchars(string",{"_index":2844,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etag",{"_index":80,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["etag(value",{"_index":79,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["event",{"_index":3012,"title":{},"body":{"license.html":{}}}],["events",{"_index":1022,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{}}}],["examples",{"_index":2866,"title":{},"body":{"index.html":{}}}],["exist",{"_index":2246,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["expand",{"_index":47,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["expandobject",{"_index":3033,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expandoptions",{"_index":3034,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expands",{"_index":2834,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expandtype",{"_index":3035,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expired",{"_index":1119,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["export",{"_index":24,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["express",{"_index":3003,"title":{},"body":{"license.html":{}}}],["extend",{"_index":321,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["extends",{"_index":170,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["extra",{"_index":784,"title":{},"body":{"classes/ODataApi.html":{}}}],["f",{"_index":1599,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataModel.html":{}}}],["f.collection",{"_index":1968,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.configure(settings",{"_index":1615,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.deserialize(value[f.name",{"_index":1608,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.iscomplextype",{"_index":1960,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.isnavigation",{"_index":1959,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.key",{"_index":1633,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.name",{"_index":1606,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataModel.html":{},"classes/ODataStructuredType.html":{}}}],["f.navigation",{"_index":1617,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.nullable).map(f",{"_index":1627,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.resolve(attrs",{"_index":1636,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.serialize((value",{"_index":1611,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.tojsonschema((config",{"_index":1622,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["f.value",{"_index":1825,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["f]{12}$/.test(key",{"_index":2105,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{4",{"_index":2104,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{8",{"_index":2103,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["fa",{"_index":2102,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["factory",{"_index":1010,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["factory(client",{"_index":1011,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["false",{"_index":793,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{}}}],["features",{"_index":2460,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["features.split(\";\").foreach(o",{"_index":2508,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["fetch",{"_index":107,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["fetch(options",{"_index":1242,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["fetchorcreate",{"_index":1704,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["fetchorcreate(entity",{"_index":1722,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["fetchpolicy",{"_index":103,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["field",{"_index":55,"title":{"classes/Field.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["field(odatametadata.attribute_alias",{"_index":643,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_namespace",{"_index":642,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_uri",{"_index":631,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_version",{"_index":625,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_action",{"_index":648,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotation",{"_index":635,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotations",{"_index":652,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_complex_type",{"_index":645,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_container",{"_index":649,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_type",{"_index":646,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_enum_type",{"_index":644,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_function",{"_index":647,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include",{"_index":632,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include_annotations",{"_index":634,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_term",{"_index":651,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_type_definition",{"_index":650,"title":{},"body":{"classes/Field.html":{}}}],["field.annotations",{"_index":1550,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["field.collection",{"_index":1557,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{}}}],["field.default",{"_index":1551,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.field",{"_index":1564,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.isnavigation",{"_index":1947,"title":{},"body":{"classes/ODataModel.html":{}}}],["field.key",{"_index":1555,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.maxlength",{"_index":1553,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.name",{"_index":1950,"title":{},"body":{"classes/ODataModel.html":{}}}],["field.navigation",{"_index":1562,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{}}}],["field.nullable",{"_index":1559,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.precision",{"_index":1566,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.ref",{"_index":1570,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.scale",{"_index":1568,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["field.type",{"_index":1549,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{}}}],["field.value",{"_index":1782,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["fieldnames",{"_index":669,"title":{},"body":{"classes/Field.html":{}}}],["fields",{"_index":212,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataModel.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fields(opts",{"_index":2702,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["fields.find(f",{"_index":1957,"title":{},"body":{"classes/ODataModel.html":{}}}],["fieldtype",{"_index":515,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["fieldtype.attribute",{"_index":626,"title":{},"body":{"classes/Field.html":{}}}],["fieldtype.tag",{"_index":633,"title":{},"body":{"classes/Field.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["files",{"_index":2976,"title":{},"body":{"license.html":{}}}],["filter",{"_index":1958,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filter(([key",{"_index":1979,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter((value",{"_index":1994,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter(f",{"_index":1605,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["filter(field",{"_index":1946,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter(k",{"_index":2203,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["filter(key",{"_index":2180,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["filter(p",{"_index":1195,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["filter({location",{"_index":2912,"title":{},"body":{"index.html":{}}}],["filters",{"_index":2837,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filtertype",{"_index":3036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["finally",{"_index":1029,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["find",{"_index":823,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntityParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/OptionHandler.html":{}}}],["find(e",{"_index":841,"title":{},"body":{"classes/ODataApi.html":{}}}],["find(name",{"_index":2070,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["find(predicate",{"_index":1646,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["findcallablebyname",{"_index":688,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcallablebyname(name",{"_index":722,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcallablefortype",{"_index":689,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findcallablefortype(type",{"_index":724,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findcollectionbyname",{"_index":690,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcollectionbyname(name",{"_index":726,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcollectionfortype",{"_index":691,"title":{},"body":{"classes/ODataApi.html":{}}}],["findcollectionfortype(type",{"_index":728,"title":{},"body":{"classes/ODataApi.html":{}}}],["findentitysetbyname",{"_index":692,"title":{},"body":{"classes/ODataApi.html":{}}}],["findentitysetbyname(name",{"_index":730,"title":{},"body":{"classes/ODataApi.html":{}}}],["findentitysetfortype",{"_index":693,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findentitysetfortype(type",{"_index":732,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findenumtypebyname",{"_index":694,"title":{},"body":{"classes/ODataApi.html":{}}}],["findenumtypebyname(name",{"_index":734,"title":{},"body":{"classes/ODataApi.html":{}}}],["findenumtypefortype",{"_index":695,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findenumtypefortype(type",{"_index":736,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findfield",{"_index":2699,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["findfield(name",{"_index":2705,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["findfieldbyname",{"_index":1809,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyname(name",{"_index":1814,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue",{"_index":1810,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfieldbyvalue(value",{"_index":1816,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["findfortypes",{"_index":2608,"title":{},"body":{"classes/ODataSettings.html":{}}}],["findfortypes(types",{"_index":2638,"title":{},"body":{"classes/ODataSettings.html":{}}}],["findmodelbyname",{"_index":696,"title":{},"body":{"classes/ODataApi.html":{}}}],["findmodelbyname(name",{"_index":738,"title":{},"body":{"classes/ODataApi.html":{}}}],["findmodelfortype",{"_index":697,"title":{},"body":{"classes/ODataApi.html":{}}}],["findmodelfortype(type",{"_index":740,"title":{},"body":{"classes/ODataApi.html":{}}}],["findparser",{"_index":1677,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["findparser(predicate",{"_index":1650,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["findparserfortype",{"_index":698,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["findparserfortype(type",{"_index":742,"title":{},"body":{"classes/ODataApi.html":{}}}],["findschemafortype",{"_index":699,"title":{},"body":{"classes/ODataApi.html":{}}}],["findschemafortype(type",{"_index":744,"title":{},"body":{"classes/ODataApi.html":{}}}],["findstructuredtypebyname",{"_index":700,"title":{},"body":{"classes/ODataApi.html":{}}}],["findstructuredtypebyname(name",{"_index":746,"title":{},"body":{"classes/ODataApi.html":{}}}],["findstructuredtypefortype",{"_index":701,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["findstructuredtypefortype(type",{"_index":748,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{}}}],["first",{"_index":111,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataModel.html":{},"classes/ODataRequest.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["fitness",{"_index":3008,"title":{},"body":{"license.html":{}}}],["flags",{"_index":210,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["fluent",{"_index":2858,"title":{},"body":{"index.html":{}}}],["following",{"_index":2992,"title":{},"body":{"license.html":{}}}],["foreach(callable",{"_index":2584,"title":{},"body":{"classes/ODataSchema.html":{}}}],["foreach(config",{"_index":2582,"title":{},"body":{"classes/ODataSchema.html":{}}}],["foreach(field",{"_index":1948,"title":{},"body":{"classes/ODataModel.html":{}}}],["format",{"_index":2169,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["forroot",{"_index":2036,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(...configs",{"_index":2050,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(configs",{"_index":2037,"title":{},"body":{"modules/ODataModule.html":{}}}],["found",{"_index":138,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSettings.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["free",{"_index":2969,"title":{},"body":{"license.html":{}}}],["friends",{"_index":2928,"title":{},"body":{"index.html":{}}}],["fromhttpresponse",{"_index":2415,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromhttpresponse(req",{"_index":2427,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson",{"_index":2416,"title":{},"body":{"classes/ODataResponse.html":{}}}],["fromjson(req",{"_index":2429,"title":{},"body":{"classes/ODataResponse.html":{}}}],["full",{"_index":162,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["func",{"_index":2097,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["func(this",{"_index":1028,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["function",{"_index":238,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["function(name",{"_index":1425,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["function(undefined",{"_index":2854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functionimport",{"_index":566,"title":{},"body":{"classes/Field.html":{}}}],["functionimports",{"_index":322,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["functionname",{"_index":257,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["functions",{"_index":462,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"miscellaneous/functions.html":{}}}],["functions(value",{"_index":82,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["furnished",{"_index":2991,"title":{},"body":{"license.html":{}}}],["generated",{"_index":2938,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2864,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":185,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["get(options",{"_index":1366,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["get(path",{"_index":2243,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["get({withcount",{"_index":2902,"title":{},"body":{"index.html":{}}}],["get_config",{"_index":1260,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["get_query",{"_index":1264,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["get_segment",{"_index":1262,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["getapi",{"_index":1728,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{}}}],["getboundarydelimiter",{"_index":2818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundarydelimiter(contenttype",{"_index":949,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["getboundaryend",{"_index":2820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getboundaryend(batchboundary",{"_index":1061,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["getboundaryend(boundarydelimiter",{"_index":957,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["getcontext",{"_index":1873,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getcount",{"_index":1433,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getdeltalink",{"_index":1437,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["geteditlink",{"_index":1668,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getentityschema",{"_index":1732,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["getentitysets",{"_index":2544,"title":{},"body":{"classes/ODataSchema.html":{}}}],["getentitysetschema",{"_index":1730,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["getetag",{"_index":1661,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getfunctions",{"_index":1445,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{}}}],["getheadervalue",{"_index":2821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getheadervalue(header",{"_index":946,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["gethelper",{"_index":870,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["getid",{"_index":1659,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediacontenttype",{"_index":1674,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediaeditlink",{"_index":1672,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediaetag",{"_index":1663,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmediareadlink",{"_index":1670,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmetadataetag",{"_index":1665,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["getmodels",{"_index":1256,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getname",{"_index":2760,"title":{},"body":{"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["getnavigationproperty",{"_index":1896,"title":{},"body":{"classes/ODataModel.html":{}}}],["getnavigationproperty(field",{"_index":1918,"title":{},"body":{"classes/ODataModel.html":{}}}],["getnextlink",{"_index":1435,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getobjects(parentelement",{"_index":668,"title":{},"body":{"classes/Field.html":{}}}],["getodv",{"_index":1871,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getoptions",{"_index":1145,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["getpath",{"_index":2774,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["getpathwithparams",{"_index":2275,"title":{},"body":{"classes/ODataRequest.html":{}}}],["getproperties",{"_index":1875,"title":{},"body":{"classes/ODataMeta.html":{}}}],["getreadlink",{"_index":1431,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{}}}],["getresponse",{"_index":1078,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["getresponse(req",{"_index":1092,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["getskip",{"_index":1441,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getskiptoken",{"_index":1443,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["getstate",{"_index":1258,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getstringcollectionclause",{"_index":2822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstringcollectionclause(lambdaparameter",{"_index":2845,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getstructuredschema",{"_index":2694,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["getting",{"_index":2855,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettop",{"_index":1439,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["gettype",{"_index":1657,"title":{},"body":{"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/SegmentHandler.html":{}}}],["geturl",{"_index":2277,"title":{},"body":{"classes/ODataRequest.html":{}}}],["geturlwithparams",{"_index":2279,"title":{},"body":{"classes/ODataRequest.html":{}}}],["glast",{"_index":937,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["granted",{"_index":2968,"title":{},"body":{"license.html":{}}}],["groupby",{"_index":2839,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guid",{"_index":2085,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["guid(key",{"_index":2106,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["haaster",{"_index":2965,"title":{},"body":{"license.html":{}}}],["handler",{"_index":775,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["handlerequest",{"_index":1079,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handlerequest(req",{"_index":1094,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["handleresponse(response",{"_index":1056,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["handlevalue",{"_index":2823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlevalue(value",{"_index":2849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["has(name",{"_index":2072,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["has(path",{"_index":2253,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["hashmap",{"_index":2223,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["hasstream",{"_index":315,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["header",{"_index":2282,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"miscellaneous/functions.html":{}}}],["header.split(';')[0].trim",{"_index":947,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["headers",{"_index":100,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["headers.getall(key",{"_index":973,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["headers.keys().map(key",{"_index":972,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["helper",{"_index":171,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["helpers",{"_index":874,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["helpers/odata",{"_index":2506,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["here",{"_index":852,"title":{},"body":{"classes/ODataApi.html":{},"index.html":{}}}],["hereby",{"_index":2967,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3014,"title":{},"body":{"license.html":{}}}],["htmlcollection",{"_index":672,"title":{},"body":{"classes/Field.html":{}}}],["http",{"_index":875,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["http.mergehttpheaders(this.api.options.headers",{"_index":2314,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http.mergehttpparams(params",{"_index":2387,"title":{},"body":{"classes/ODataResource.html":{}}}],["http.mergehttpparams(this.api.options.params",{"_index":2316,"title":{},"body":{"classes/ODataRequest.html":{}}}],["http11",{"_index":917,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["httpclientmodule",{"_index":2040,"title":{},"body":{"modules/ODataModule.html":{}}}],["httpentitiesoptions",{"_index":1272,"title":{},"body":{"classes/ODataCollection.html":{},"miscellaneous/typealiases.html":{}}}],["httpentityoptions",{"_index":1938,"title":{},"body":{"classes/ODataModel.html":{},"miscellaneous/typealiases.html":{}}}],["httperrorresponse",{"_index":20,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataEntityService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["httpevent",{"_index":754,"title":{},"body":{"classes/ODataApi.html":{}}}],["httpeventtype",{"_index":755,"title":{},"body":{"classes/ODataApi.html":{}}}],["httpeventtype.response",{"_index":818,"title":{},"body":{"classes/ODataApi.html":{}}}],["httpheaders",{"_index":913,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["httpheaders(json.headers",{"_index":2446,"title":{},"body":{"classes/ODataResponse.html":{}}}],["httpoptions",{"_index":1271,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"miscellaneous/typealiases.html":{}}}],["httpparams",{"_index":2267,"title":{},"body":{"classes/ODataRequest.html":{}}}],["httppropertyoptions",{"_index":3038,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["httpresponse",{"_index":914,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["https://diegomvh.github.io/angular",{"_index":2954,"title":{},"body":{"index.html":{}}}],["https://github.com/adamhalasz/uniqid",{"_index":935,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["https://github.com/diegomvh/angular",{"_index":2957,"title":{},"body":{"index.html":{}}}],["https://medium.com/@galen.corey/understanding",{"_index":106,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["https://services.odata.org/v4/(s(4m0tuxtnhcfctl4gzem3gr10))/trippinservicerw",{"_index":2878,"title":{},"body":{"index.html":{}}}],["id",{"_index":78,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["id(value",{"_index":77,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ieee754",{"_index":2307,"title":{},"body":{"classes/ODataRequest.html":{}}}],["ieee754compatible",{"_index":102,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["if_match_header",{"_index":2281,"title":{},"body":{"classes/ODataRequest.html":{}}}],["implements",{"_index":859,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponseOptions.html":{}}}],["implied",{"_index":3004,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["imports",{"_index":2049,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["include_etag",{"_index":2710,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["include_navigation",{"_index":2704,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["include_parents",{"_index":1945,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataStructuredType.html":{}}}],["includeannotations",{"_index":381,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["included",{"_index":2997,"title":{},"body":{"license.html":{}}}],["includeinservicedocument",{"_index":258,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["includes",{"_index":380,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["including",{"_index":2979,"title":{},"body":{"license.html":{}}}],["incorporates",{"_index":2944,"title":{},"body":{"index.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["inherited",{"_index":291,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataValueResource.html":{}}}],["init",{"_index":1086,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.api",{"_index":2287,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.body",{"_index":2288,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.etag",{"_index":2303,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.fetchpolicy",{"_index":2297,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.headers",{"_index":2315,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.method",{"_index":2284,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.name",{"_index":1853,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["init.observe",{"_index":2294,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.params",{"_index":2317,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.reportprogress",{"_index":2290,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.resource",{"_index":2286,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["init.resource.pathandparams",{"_index":2301,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.responsetype",{"_index":2292,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init.storage",{"_index":1854,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["init.withcredentials",{"_index":2295,"title":{},"body":{"classes/ODataRequest.html":{}}}],["init?.timeout",{"_index":1112,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["inject",{"_index":2880,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":2586,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"injectables/ODataServiceFactory.html":{}}}],["injectables",{"_index":2587,"title":{},"body":{"injectables/ODataServiceFactory.html":{},"overview.html":{}}}],["inmutable",{"_index":2911,"title":{},"body":{"index.html":{}}}],["install",{"_index":2874,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2871,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":971,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataResponse.html":{}}}],["int",{"_index":12,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/ODataCacheEntry.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"overview.html":{}}}],["isbound",{"_index":241,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["iscacheable",{"_index":1080,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscacheable(req",{"_index":1096,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["iscomplextype",{"_index":1514,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["iscomposable",{"_index":255,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["isexpired",{"_index":1081,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isexpired(entry",{"_index":1098,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["isflags",{"_index":354,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["isnamespaceof",{"_index":2527,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnamespaceof(type",{"_index":2541,"title":{},"body":{"classes/ODataSchema.html":{}}}],["isnavigation",{"_index":1515,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["istypeof",{"_index":1134,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["istypeof(type",{"_index":1143,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["item",{"_index":2189,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["items",{"_index":1588,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["iterable",{"_index":1205,"title":{},"body":{"classes/ODataCollection.html":{}}}],["iteratorresult",{"_index":1320,"title":{},"body":{"classes/ODataCollection.html":{}}}],["join",{"_index":974,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["join(param_separator",{"_index":2373,"title":{},"body":{"classes/ODataResource.html":{}}}],["json",{"_index":37,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["json.body",{"_index":2445,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.options",{"_index":2117,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.status",{"_index":2447,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.statustext",{"_index":2448,"title":{},"body":{"classes/ODataResponse.html":{}}}],["json.stringify(array.from(responses.entries",{"_index":1860,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["json.url",{"_index":2449,"title":{},"body":{"classes/ODataResponse.html":{}}}],["jsonschemaconfig",{"_index":43,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpand",{"_index":42,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpandoptions",{"_index":44,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaorder",{"_index":41,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaselect",{"_index":39,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":1961,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["k.trim",{"_index":2510,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["keep",{"_index":2149,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["keep(...names",{"_index":2201,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["keep(names",{"_index":2156,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["key",{"_index":51,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["key.startswith(\"_",{"_index":1980,"title":{},"body":{"classes/ODataModel.html":{}}}],["keyof",{"_index":28,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["keys",{"_index":1631,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["key}=${value",{"_index":2193,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["kind",{"_index":3002,"title":{},"body":{"license.html":{}}}],["lambdaparameter",{"_index":2848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["last",{"_index":941,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["lastread",{"_index":1090,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["liability",{"_index":3018,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3015,"title":{},"body":{"license.html":{}}}],["library",{"_index":2867,"title":{},"body":{"index.html":{}}}],["license",{"_index":2959,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":2980,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3005,"title":{},"body":{"license.html":{}}}],["lines",{"_index":1062,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["literal",{"_index":227,"title":{},"body":{"interfaces/ApiOptions.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/StoragePayload.html":{},"miscellaneous/typealiases.html":{}}}],["m",{"_index":1227,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{}}}],["mainly",{"_index":2943,"title":{},"body":{"index.html":{}}}],["make",{"_index":125,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["makes",{"_index":147,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["map",{"_index":758,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{}}}],["map(([key",{"_index":1956,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["map(([name",{"_index":1191,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{}}}],["map((res",{"_index":816,"title":{},"body":{"classes/ODataApi.html":{}}}],["map((resp",{"_index":1034,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["map(({entities",{"_index":1326,"title":{},"body":{"classes/ODataCollection.html":{}}}],["map(({entity",{"_index":1988,"title":{},"body":{"classes/ODataModel.html":{}}}],["map(({name",{"_index":2108,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map(annot",{"_index":1510,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["map(config",{"_index":1508,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["map(container",{"_index":2570,"title":{},"body":{"classes/ODataSchema.html":{}}}],["map(e",{"_index":2371,"title":{},"body":{"classes/ODataResource.html":{}}}],["map(entities",{"_index":1337,"title":{},"body":{"classes/ODataCollection.html":{}}}],["map(f",{"_index":1621,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["map(name",{"_index":2451,"title":{},"body":{"classes/ODataResponse.html":{}}}],["map(pathsegmentsbuilder",{"_index":2109,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map(schema",{"_index":806,"title":{},"body":{"classes/ODataApi.html":{}}}],["map>(json.parse(storage.getitem(name",{"_index":1856,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["mapfields",{"_index":1811,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapfields(mapper",{"_index":1819,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["mapper",{"_index":1821,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["match",{"_index":1495,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$skip=(\\d",{"_index":1499,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$skiptoken=([\\d\\w\\s",{"_index":1500,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match(/[&?]{1}\\$top=(\\d",{"_index":1497,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["match[1",{"_index":1501,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["matching",{"_index":225,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["math.ceil(this._state.records",{"_index":1308,"title":{},"body":{"classes/ODataCollection.html":{}}}],["max",{"_index":2804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["max_age",{"_index":2439,"title":{},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["maxage",{"_index":177,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["maxlength",{"_index":50,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediacontenttype",{"_index":1484,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediacontenttype(value",{"_index":92,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediaeditlink",{"_index":1482,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediaeditlink(value",{"_index":91,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediaetag",{"_index":1473,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediaetag(value",{"_index":84,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mediareadlink",{"_index":1480,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["mediareadlink(value",{"_index":89,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["member",{"_index":213,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["members",{"_index":211,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["merchantability",{"_index":3007,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2554,"title":{},"body":{"classes/ODataSchema.html":{},"license.html":{}}}],["meta",{"_index":1281,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["meta.annotations",{"_index":1761,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["meta.context",{"_index":2479,"title":{},"body":{"classes/ODataResponse.html":{}}}],["meta.data(payload",{"_index":2482,"title":{},"body":{"classes/ODataResponse.html":{}}}],["meta.etag",{"_index":2002,"title":{},"body":{"classes/ODataModel.html":{}}}],["metadata",{"_index":32,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["metadataetag",{"_index":1475,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["metadataetag(value",{"_index":85,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["metadataurl",{"_index":685,"title":{},"body":{"classes/ODataApi.html":{}}}],["method",{"_index":1039,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["methods",{"_index":228,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["min",{"_index":2803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":161,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":2794,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":123,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["mit",{"_index":2960,"title":{},"body":{"license.html":{}}}],["model",{"_index":216,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["model(entity",{"_index":2363,"title":{},"body":{"classes/ODataResource.html":{}}}],["model.destroy",{"_index":1343,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.save",{"_index":1339,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.toentity",{"_index":1313,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model?.target",{"_index":2028,"title":{},"body":{"classes/ODataModel.html":{}}}],["modelbyname",{"_index":2609,"title":{},"body":{"classes/ODataSettings.html":{}}}],["modelbyname(name",{"_index":2640,"title":{},"body":{"classes/ODataSettings.html":{}}}],["modelfortype",{"_index":2610,"title":{},"body":{"classes/ODataSettings.html":{}}}],["modelfortype(type",{"_index":2642,"title":{},"body":{"classes/ODataSettings.html":{}}}],["models",{"_index":1217,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{}}}],["models.length",{"_index":1322,"title":{},"body":{"classes/ODataCollection.html":{}}}],["models/collection",{"_index":1734,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["models/index",{"_index":769,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataResource.html":{}}}],["models/model",{"_index":1735,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["models[pointer",{"_index":1323,"title":{},"body":{"classes/ODataCollection.html":{}}}],["modify",{"_index":2982,"title":{},"body":{"license.html":{}}}],["module",{"_index":2030,"title":{"modules/ODataModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2032,"title":{"modules.html":{}},"body":{"modules/ODataModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":2039,"title":{},"body":{"modules/ODataModule.html":{}}}],["more",{"_index":2673,"title":{},"body":{"classes/ODataSettings.html":{}}}],["multipart_mixed",{"_index":923,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary",{"_index":922,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["multipart_mixed_boundary}${changesetboundary",{"_index":1046,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["mutable",{"_index":2917,"title":{},"body":{"index.html":{}}}],["mutate",{"_index":1338,"title":{},"body":{"classes/ODataCollection.html":{}}}],["n",{"_index":934,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["name",{"_index":71,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:string",{"_index":2720,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["namednodemap",{"_index":660,"title":{},"body":{"classes/Field.html":{}}}],["names",{"_index":1158,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["names.foreach(name",{"_index":2199,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(k",{"_index":2204,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(type",{"_index":1162,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["names.join",{"_index":1796,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["names.map(name",{"_index":1794,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["names.push(`${this.alias}.${this.name",{"_index":1602,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["names.push(`${this.schema.alias}.${this.name",{"_index":1161,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["namespace",{"_index":198,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["namespace}.${config.name",{"_index":1186,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{}}}],["nav",{"_index":2020,"title":{},"body":{"classes/ODataModel.html":{}}}],["nav.ascollection(value",{"_index":2022,"title":{},"body":{"classes/ODataModel.html":{}}}],["nav.asmodel(value",{"_index":2024,"title":{},"body":{"classes/ODataModel.html":{}}}],["navigation",{"_index":54,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["navigationproperties",{"_index":299,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["navigationproperty",{"_index":554,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["navigationpropertybinding",{"_index":336,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["navigationpropertybindings",{"_index":481,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["needs",{"_index":1643,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSettings.html":{}}}],["nestedexpandoptions",{"_index":3039,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["network",{"_index":126,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["never",{"_index":756,"title":{},"body":{"classes/ODataApi.html":{}}}],["new",{"_index":144,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["new(...params",{"_index":217,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["newentity",{"_index":1759,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["newline",{"_index":919,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["newline_regexp",{"_index":931,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["next",{"_index":1214,"title":{},"body":{"classes/ODataCollection.html":{}}}],["next(options",{"_index":1244,"title":{},"body":{"classes/ODataCollection.html":{}}}],["nextlink",{"_index":1412,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["nextlink(value",{"_index":87,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ngmodule",{"_index":2041,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["none",{"_index":163,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["none_parser",{"_index":1179,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{}}}],["noninfringement",{"_index":3011,"title":{},"body":{"license.html":{}}}],["note",{"_index":104,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["notice",{"_index":2995,"title":{},"body":{"license.html":{}}}],["now",{"_index":938,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["now().tostring(36",{"_index":945,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["npm",{"_index":2875,"title":{},"body":{"index.html":{}}}],["null",{"_index":664,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{}}}],["nullable",{"_index":53,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["number",{"_index":18,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["number(directive.split(\"=\")[1",{"_index":2520,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["number(match[1",{"_index":1498,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["number(statusparts[1",{"_index":1072,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["number.isnan(maxage",{"_index":2521,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["o",{"_index":2206,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["o.split",{"_index":2509,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["obj",{"_index":2228,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object",{"_index":1417,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{}}}],["object.assign",{"_index":1194,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataValueResource.html":{}}}],["object.assign(acc",{"_index":1199,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["object.assign(acc.parameters",{"_index":2563,"title":{},"body":{"classes/ODataSchema.html":{}}}],["object.assign(attrs",{"_index":1963,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.assign(entity",{"_index":1760,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["object.assign(obj",{"_index":2255,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.assign(options",{"_index":2409,"title":{},"body":{"classes/ODataResource.html":{}}}],["object.assign(params",{"_index":2191,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{}}}],["object.assign(this",{"_index":682,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{}}}],["object.assign({etag",{"_index":1757,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["object.assign({field",{"_index":1581,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["object.assign({responsetype",{"_index":1329,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataModel.html":{}}}],["object.defineproperty(this",{"_index":1949,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries",{"_index":1977,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(config.fields",{"_index":1598,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["object.entries(config.parameters",{"_index":1190,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["object.entries(entity",{"_index":1955,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(params",{"_index":2370,"title":{},"body":{"classes/ODataResource.html":{}}}],["object.entries(this",{"_index":1978,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this._relations).reduce((acc",{"_index":1981,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this.params",{"_index":2192,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(this.options",{"_index":2202,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(value",{"_index":2722,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["object.values(key",{"_index":1637,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["object.values(this._relations",{"_index":1993,"title":{},"body":{"classes/ODataModel.html":{}}}],["objects",{"_index":670,"title":{},"body":{"classes/Field.html":{}}}],["obs",{"_index":1334,"title":{},"body":{"classes/ODataCollection.html":{}}}],["obs$.pipe",{"_index":1336,"title":{},"body":{"classes/ODataCollection.html":{}}}],["obs$.pipe(map",{"_index":1342,"title":{},"body":{"classes/ODataCollection.html":{}}}],["observable",{"_index":22,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["observe",{"_index":1024,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["obtaining",{"_index":2972,"title":{},"body":{"license.html":{}}}],["odata",{"_index":1750,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["odata.etag(entity",{"_index":1752,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata.metadata",{"_index":2511,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata.streaming",{"_index":2513,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/docs",{"_index":2955,"title":{},"body":{"index.html":{}}}],["odata/src/lib/api.ts",{"_index":684,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:101",{"_index":741,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:105",{"_index":729,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:112",{"_index":735,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:117",{"_index":747,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:122",{"_index":723,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:127",{"_index":731,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:133",{"_index":739,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:138",{"_index":727,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:145",{"_index":743,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:15",{"_index":715,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:16",{"_index":717,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:17",{"_index":710,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:18",{"_index":711,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:19",{"_index":718,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:20",{"_index":708,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:21",{"_index":707,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:23",{"_index":713,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:25",{"_index":706,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:27",{"_index":709,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:29",{"_index":714,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:31",{"_index":703,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:54",{"_index":720,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:61",{"_index":752,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:76",{"_index":745,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:84",{"_index":737,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:88",{"_index":749,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:92",{"_index":725,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/api.ts:96",{"_index":733,"title":{},"body":{"classes/ODataApi.html":{}}}],["odata/src/lib/cache/cache.ts",{"_index":1074,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["odata/src/lib/cache/cache.ts:14",{"_index":1087,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:15",{"_index":1085,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:20",{"_index":1093,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:21",{"_index":1104,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:23",{"_index":1089,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:31",{"_index":1102,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:41",{"_index":1091,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:46",{"_index":1105,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:55",{"_index":1100,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:59",{"_index":1097,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/cache.ts:63",{"_index":1095,"title":{},"body":{"classes/ODataCache.html":{}}}],["odata/src/lib/cache/memory.ts",{"_index":1827,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:12",{"_index":1831,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:3",{"_index":1828,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/memory.ts:8",{"_index":1832,"title":{},"body":{"classes/ODataInMemoryCache.html":{}}}],["odata/src/lib/cache/storage.ts",{"_index":1847,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odata/src/lib/cache/storage.ts:12",{"_index":1848,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:23",{"_index":1850,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/cache/storage.ts:27",{"_index":1849,"title":{},"body":{"classes/ODataInStorageCache.html":{}}}],["odata/src/lib/client.ts",{"_index":2829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["odata/src/lib/models/collection.ts",{"_index":1204,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:103",{"_index":1240,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:114",{"_index":1255,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:128",{"_index":1243,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:144",{"_index":1245,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:156",{"_index":1237,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:170",{"_index":1236,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:18",{"_index":1229,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:183",{"_index":1252,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:19",{"_index":1226,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:197",{"_index":1241,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:201",{"_index":1261,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:207",{"_index":1263,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:21",{"_index":1228,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:213",{"_index":1265,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:22",{"_index":1257,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:220",{"_index":1234,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:227",{"_index":1232,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:26",{"_index":1230,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:35",{"_index":1259,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:37",{"_index":1223,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:48",{"_index":1239,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:55",{"_index":1253,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:59",{"_index":1247,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:70",{"_index":1250,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:99",{"_index":1254,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/model.ts",{"_index":1891,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:103",{"_index":1930,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:120",{"_index":1912,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:130",{"_index":1917,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:153",{"_index":1914,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:162",{"_index":1932,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:185",{"_index":1925,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:193",{"_index":1916,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:20",{"_index":1903,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:203",{"_index":1933,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:21",{"_index":1900,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:212",{"_index":1934,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:22",{"_index":1901,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:223",{"_index":1935,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:23",{"_index":1902,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:235",{"_index":1906,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:247",{"_index":1908,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:259",{"_index":1904,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:26",{"_index":1899,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:271",{"_index":1910,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:282",{"_index":1919,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:296",{"_index":1928,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:38",{"_index":1911,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:62",{"_index":1929,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:66",{"_index":1921,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:96",{"_index":1923,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/module.ts",{"_index":2033,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/module.ts:19",{"_index":2038,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata/src/lib/options.ts",{"_index":858,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:10",{"_index":862,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:11",{"_index":867,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:13",{"_index":866,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:14",{"_index":863,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:15",{"_index":861,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:28",{"_index":871,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:6",{"_index":869,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:7",{"_index":865,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:8",{"_index":868,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/options.ts:9",{"_index":864,"title":{},"body":{"classes/ODataApiOptions.html":{}}}],["odata/src/lib/parsers/callable.ts",{"_index":1165,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:10",{"_index":2059,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:11",{"_index":2057,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:12",{"_index":2056,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:21",{"_index":2062,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:27",{"_index":2061,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:33",{"_index":1169,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:34",{"_index":1173,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:35",{"_index":1172,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:36",{"_index":1171,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:37",{"_index":1168,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:49",{"_index":1175,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:54",{"_index":1178,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:61",{"_index":1174,"title":{},"body":{"classes/ODataCallableParser.html":{}}}],["odata/src/lib/parsers/callable.ts:8",{"_index":2058,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/callable.ts:9",{"_index":2060,"title":{},"body":{"classes/ODataParameterParser.html":{}}}],["odata/src/lib/parsers/edm.ts",{"_index":3045,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/parsers/entity.ts",{"_index":1513,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:10",{"_index":1524,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:108",{"_index":1537,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:11",{"_index":1531,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:112",{"_index":1536,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:118",{"_index":1684,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:119",{"_index":1685,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:12",{"_index":1527,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:120",{"_index":1681,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:121",{"_index":1682,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:122",{"_index":1686,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:123",{"_index":1683,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:124",{"_index":1680,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:13",{"_index":1520,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:136",{"_index":1693,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:14",{"_index":1523,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:144",{"_index":1688,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:15",{"_index":1522,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:154",{"_index":1696,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:16",{"_index":1519,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:163",{"_index":1687,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:17",{"_index":1526,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:173",{"_index":1697,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:18",{"_index":1525,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:187",{"_index":1698,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:19",{"_index":1521,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:194",{"_index":1694,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:199",{"_index":1695,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:20",{"_index":1528,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:21",{"_index":1530,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:214",{"_index":1692,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:218",{"_index":1689,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:22",{"_index":1529,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:224",{"_index":1691,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers/entity.ts:23",{"_index":1518,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:41",{"_index":1533,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:45",{"_index":1542,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:50",{"_index":1540,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:58",{"_index":1535,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:69",{"_index":1545,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:77",{"_index":1543,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:87",{"_index":1534,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/entity.ts:92",{"_index":1547,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["odata/src/lib/parsers/enum.ts",{"_index":1775,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:13",{"_index":1779,"title":{},"body":{"classes/ODataEnumFieldParser.html":{}}}],["odata/src/lib/parsers/enum.ts:19",{"_index":1803,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:20",{"_index":1804,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:21",{"_index":1801,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:22",{"_index":1802,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:23",{"_index":1800,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:35",{"_index":1805,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:45",{"_index":1806,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:5",{"_index":1777,"title":{},"body":{"classes/ODataEnumFieldParser.html":{}}}],["odata/src/lib/parsers/enum.ts:6",{"_index":1778,"title":{},"body":{"classes/ODataEnumFieldParser.html":{}}}],["odata/src/lib/parsers/enum.ts:61",{"_index":1807,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers/enum.ts:7",{"_index":1776,"title":{},"body":{"classes/ODataEnumFieldParser.html":{}}}],["odata/src/lib/resources/builder.ts",{"_index":2801,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/path",{"_index":2063,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query",{"_index":2146,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/request.ts",{"_index":2256,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:10",{"_index":2262,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:11",{"_index":2266,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:12",{"_index":2270,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:13",{"_index":2274,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:14",{"_index":2273,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:15",{"_index":2263,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:16",{"_index":2264,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:17",{"_index":2268,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:18",{"_index":2269,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:19",{"_index":2260,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:71",{"_index":2276,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:79",{"_index":2278,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:8",{"_index":2265,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:83",{"_index":2280,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/request.ts:9",{"_index":2261,"title":{},"body":{"classes/ODataRequest.html":{}}}],["odata/src/lib/resources/resource.ts",{"_index":2322,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:102",{"_index":2329,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:104",{"_index":2337,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:118",{"_index":2338,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:125",{"_index":2326,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:130",{"_index":2336,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:196",{"_index":2331,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:203",{"_index":2334,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:210",{"_index":2335,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:218",{"_index":2332,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:226",{"_index":2330,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:28",{"_index":2324,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:29",{"_index":2325,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:30",{"_index":2323,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:45",{"_index":2340,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:53",{"_index":2341,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:58",{"_index":2342,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:64",{"_index":2333,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:75",{"_index":2328,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:84",{"_index":2327,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/resource.ts:94",{"_index":2339,"title":{},"body":{"classes/ODataResource.html":{}}}],["odata/src/lib/resources/responses/csdl/csdl",{"_index":237,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["odata/src/lib/resources/responses/meta.ts",{"_index":1406,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:100",{"_index":1667,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:104",{"_index":1669,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:108",{"_index":1671,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:11",{"_index":1863,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:112",{"_index":1673,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:116",{"_index":1675,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:120",{"_index":1652,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:121",{"_index":1676,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:128",{"_index":1656,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:134",{"_index":1420,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:138",{"_index":1422,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:142",{"_index":1424,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:146",{"_index":1432,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:150",{"_index":1434,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:154",{"_index":1436,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:158",{"_index":1438,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:162",{"_index":1440,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:167",{"_index":1442,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:172",{"_index":1444,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:177",{"_index":1414,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:178",{"_index":1446,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:185",{"_index":1426,"title":{},"body":{"classes/ODataEntitiesMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:28",{"_index":1864,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:29",{"_index":1874,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:36",{"_index":1865,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:37",{"_index":1876,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:44",{"_index":1870,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:49",{"_index":1868,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:5",{"_index":1866,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:50",{"_index":1869,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:54",{"_index":2143,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:58",{"_index":2144,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:6",{"_index":1867,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:62",{"_index":2145,"title":{},"body":{"classes/ODataPropertyMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:68",{"_index":1654,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:7",{"_index":1872,"title":{},"body":{"classes/ODataMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:72",{"_index":1655,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:76",{"_index":1653,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:80",{"_index":1658,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:84",{"_index":1660,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:88",{"_index":1662,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:92",{"_index":1664,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/meta.ts:96",{"_index":1666,"title":{},"body":{"classes/ODataEntityMeta.html":{}}}],["odata/src/lib/resources/responses/metadata.ts",{"_index":514,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:20",{"_index":516,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:21",{"_index":517,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/options.ts",{"_index":2485,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:10",{"_index":2494,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:11",{"_index":2491,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:13",{"_index":2490,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:14",{"_index":2489,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:23",{"_index":2503,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:27",{"_index":2496,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:31",{"_index":2500,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:48",{"_index":2502,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:54",{"_index":2498,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:6",{"_index":2495,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:7",{"_index":2493,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/options.ts:9",{"_index":2492,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odata/src/lib/resources/responses/response.ts",{"_index":2413,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:103",{"_index":2422,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:112",{"_index":2425,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:123",{"_index":2423,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:134",{"_index":2432,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:14",{"_index":2420,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:145",{"_index":2435,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:15",{"_index":2417,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:31",{"_index":2428,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:43",{"_index":2430,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:61",{"_index":2434,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:73",{"_index":2419,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:74",{"_index":2436,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/response.ts:95",{"_index":2431,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata/src/lib/resources/responses/types.ts",{"_index":3047,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/batch.ts",{"_index":892,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/resources/types/batch.ts:135",{"_index":902,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:49",{"_index":898,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:50",{"_index":899,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:55",{"_index":906,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/batch.ts:73",{"_index":905,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata/src/lib/resources/types/count.ts",{"_index":1353,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:12",{"_index":1365,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:18",{"_index":1364,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/count.ts:24",{"_index":1367,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts",{"_index":1878,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:13",{"_index":1879,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:20",{"_index":1880,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:25",{"_index":1881,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:33",{"_index":1883,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/metadata.ts:39",{"_index":1882,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odata/src/lib/resources/types/options.ts",{"_index":3046,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/types/value.ts",{"_index":2728,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:12",{"_index":2734,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:20",{"_index":2733,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:26",{"_index":2730,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:32",{"_index":2732,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/resources/types/value.ts:38",{"_index":2735,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odata/src/lib/schema/annotation.ts",{"_index":676,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/annotation.ts:4",{"_index":678,"title":{},"body":{"classes/ODataAnnotation.html":{}}}],["odata/src/lib/schema/callable.ts",{"_index":1133,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:10",{"_index":1137,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:11",{"_index":1135,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:22",{"_index":1144,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:29",{"_index":1146,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:33",{"_index":1142,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:6",{"_index":1141,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:7",{"_index":1138,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:8",{"_index":1140,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/callable.ts:9",{"_index":1136,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odata/src/lib/schema/entity",{"_index":1503,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{}}}],["odata/src/lib/schema/enum",{"_index":1808,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odata/src/lib/schema/schema.ts",{"_index":2526,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:11",{"_index":2530,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:12",{"_index":2535,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:13",{"_index":2529,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:14",{"_index":2534,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:15",{"_index":2533,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:16",{"_index":2531,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:17",{"_index":2532,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:18",{"_index":2528,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:43",{"_index":2542,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:47",{"_index":2543,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:51",{"_index":2545,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:58",{"_index":2539,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:62",{"_index":2540,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:66",{"_index":2537,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:70",{"_index":2538,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/schema.ts:75",{"_index":2536,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/schema/structured",{"_index":2698,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odata/src/lib/services/entity.ts",{"_index":1700,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:10",{"_index":1708,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:13",{"_index":1719,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:17",{"_index":1721,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:23",{"_index":1712,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:24",{"_index":1713,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:25",{"_index":1714,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:34",{"_index":1729,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:39",{"_index":1731,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:44",{"_index":1733,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:50",{"_index":1716,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:56",{"_index":1727,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:67",{"_index":1710,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:78",{"_index":1718,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:88",{"_index":1723,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:98",{"_index":1725,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["odata/src/lib/services/factory.ts",{"_index":2588,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:10",{"_index":2591,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:15",{"_index":2593,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:7",{"_index":2589,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/singleton.ts",{"_index":2686,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:13",{"_index":2689,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:18",{"_index":2692,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:23",{"_index":2693,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:28",{"_index":2695,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:5",{"_index":2688,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/services/singleton.ts:8",{"_index":2690,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odata/src/lib/settings.ts",{"_index":2595,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:105",{"_index":2627,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:114",{"_index":2635,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:123",{"_index":2647,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:132",{"_index":2621,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:141",{"_index":2631,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:150",{"_index":2641,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:159",{"_index":2625,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:24",{"_index":2628,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:28",{"_index":2629,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:32",{"_index":2617,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:39",{"_index":2639,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:43",{"_index":2619,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:51",{"_index":2637,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:60",{"_index":2649,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:69",{"_index":2623,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:78",{"_index":2633,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:87",{"_index":2645,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:9",{"_index":2615,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/settings.ts:96",{"_index":2643,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/types.ts",{"_index":7,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/types.ts:158",{"_index":2762,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:159",{"_index":2763,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:163",{"_index":233,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/src/lib/types.ts:164",{"_index":231,"title":{},"body":{"interfaces/Cache.html":{}}}],["odata/wiki",{"_index":2958,"title":{},"body":{"index.html":{}}}],["odata_annotation_prefix",{"_index":63,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_configurations",{"_index":2045,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata_context",{"_index":68,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_count",{"_index":66,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_etag",{"_index":67,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["odata_function_prefix",{"_index":64,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_id",{"_index":65,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_media_etag",{"_index":69,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odata_version",{"_index":924,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odata_version_headers",{"_index":2437,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odata_version_headers.indexof(k",{"_index":2465,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataannotation",{"_index":675,"title":{"classes/ODataAnnotation.html":{}},"body":{"classes/ODataAnnotation.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataannotation(annot",{"_index":1511,"title":{},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataapi",{"_index":683,"title":{"classes/ODataApi.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["odataapi(config",{"_index":2653,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odataapioptions",{"_index":712,"title":{"classes/ODataApiOptions.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{}}}],["odataapioptions(object.assign({version",{"_index":797,"title":{},"body":{"classes/ODataApi.html":{}}}],["odatabatchrequest",{"_index":891,"title":{"classes/ODataBatchRequest.html":{}},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchrequest(req",{"_index":1026,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource",{"_index":995,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource(client",{"_index":1013,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatabatchresource(this.client",{"_index":1008,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["odatacache",{"_index":705,"title":{"classes/ODataCache.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacache:14",{"_index":1830,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:15",{"_index":1829,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:20",{"_index":1835,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:21",{"_index":1840,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:23",{"_index":1833,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:31",{"_index":1839,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:41",{"_index":1834,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:46",{"_index":1841,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:55",{"_index":1838,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:59",{"_index":1837,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacache:63",{"_index":1836,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["odatacacheentry",{"_index":1099,"title":{"interfaces/ODataCacheEntry.html":{}},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatacallable",{"_index":763,"title":{"classes/ODataCallable.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["odatacallable(config",{"_index":2567,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatacallableparser",{"_index":1139,"title":{"classes/ODataCallableParser.html":{}},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odatacallableparser(config",{"_index":1156,"title":{},"body":{"classes/ODataCallable.html":{}}}],["odataclient",{"_index":907,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["odatacollection",{"_index":768,"title":{"classes/ODataCollection.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{}}}],["odatacontext",{"_index":31,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatacountresource",{"_index":1352,"title":{"classes/ODataCountResource.html":{}},"body":{"classes/ODataCountResource.html":{}}}],["odatacountresource(client",{"_index":1402,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odatacountresource(this.client",{"_index":1403,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["odataentities",{"_index":2424,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitiesmeta",{"_index":1225,"title":{"classes/ODataEntitiesMeta.html":{}},"body":{"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["odataentitiesmeta(payload",{"_index":2483,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataentitiesmeta(this._meta.property(f.name",{"_index":1970,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentitiesmeta(this._meta.property(field.name",{"_index":2023,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentitiesmeta(this.annotations",{"_index":1489,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentity",{"_index":2426,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odataentitycontainer",{"_index":1502,"title":{"classes/ODataEntityContainer.html":{}},"body":{"classes/ODataEntityContainer.html":{},"classes/ODataSchema.html":{}}}],["odataentitycontainer(container",{"_index":2571,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odataentityfieldparser",{"_index":1512,"title":{"classes/ODataEntityFieldParser.html":{}},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataStructuredType.html":{}}}],["odataentityfieldparser(name",{"_index":1600,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["odataentitymeta",{"_index":1375,"title":{"classes/ODataEntityMeta.html":{}},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["odataentitymeta(data",{"_index":1491,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentitymeta(payload",{"_index":2477,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataentitymeta(this.annotations",{"_index":1468,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odataentitymeta(value",{"_index":1973,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityparser",{"_index":1539,"title":{"classes/ODataEntityParser.html":{}},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{}}}],["odataentityparser(config",{"_index":2714,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["odataentityresource",{"_index":1268,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["odataentityresource).action(path",{"_index":2017,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).cast(type",{"_index":2015,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).function(path",{"_index":2016,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).navigationproperty(path",{"_index":2018,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).navigationproperty(value.field.name).reference",{"_index":1997,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).property(f.name",{"_index":1966,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).query",{"_index":2013,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).schema",{"_index":2011,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityresource).segment",{"_index":2012,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityservice",{"_index":1699,"title":{"classes/ODataEntityService.html":{}},"body":{"classes/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{}}}],["odataentityset",{"_index":764,"title":{"classes/ODataEntitySet.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["odataentityset(config",{"_index":1509,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["odataentitysetresource",{"_index":1267,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{}}}],["odataentitysetresource).action(path",{"_index":1351,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).count().get",{"_index":1345,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).function(path",{"_index":1350,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).query",{"_index":1349,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).schema",{"_index":1346,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataentitysetresource).segment",{"_index":1348,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataenumfieldparser",{"_index":1774,"title":{"classes/ODataEnumFieldParser.html":{}},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{}}}],["odataenumfieldparser(name",{"_index":1788,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["odataenumparser",{"_index":1783,"title":{"classes/ODataEnumParser.html":{}},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{}}}],["odataenumparser(config",{"_index":1822,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["odataenumtype",{"_index":762,"title":{"classes/ODataEnumType.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["odataenumtype(config",{"_index":2551,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatafunctionresource",{"_index":1270,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["odatahelper",{"_index":873,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatahelper[this.version",{"_index":890,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["odatainmemorycache",{"_index":772,"title":{"classes/ODataInMemoryCache.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataInMemoryCache.html":{}}}],["odatainstoragecache",{"_index":1846,"title":{"classes/ODataInStorageCache.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odatameta",{"_index":1407,"title":{"classes/ODataMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:28",{"_index":1415,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:36",{"_index":1416,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:44",{"_index":1430,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:49",{"_index":1427,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:5",{"_index":1418,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:50",{"_index":1428,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatameta:6",{"_index":1419,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatametadata",{"_index":526,"title":{},"body":{"classes/Field.html":{},"classes/ODataMetadataResource.html":{}}}],["odatametadata(body",{"_index":1890,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadata.tag_reference",{"_index":630,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_schema",{"_index":641,"title":{},"body":{"classes/Field.html":{}}}],["odatametadataresource",{"_index":1877,"title":{"classes/ODataMetadataResource.html":{}},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadataresource(client",{"_index":1886,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadataresource(this.client",{"_index":1884,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["odatametadatatype",{"_index":160,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odatamodel",{"_index":767,"title":{"classes/ODataModel.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{}}}],["odatamodule",{"_index":2031,"title":{"modules/ODataModule.html":{}},"body":{"modules/ODataModule.html":{},"index.html":{},"modules.html":{}}}],["odatamodule.forroot",{"_index":2877,"title":{},"body":{"index.html":{}}}],["odatamodule.forroot(trippinconfig",{"_index":2941,"title":{},"body":{"index.html":{}}}],["odatanavigationpropertyresource",{"_index":1269,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["odataparameterparser",{"_index":1170,"title":{"classes/ODataParameterParser.html":{}},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odataparameterparser(name",{"_index":1192,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["odatapathsegments",{"_index":908,"title":{"classes/ODataPathSegments.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["odatapathsegments(this.tojson",{"_index":2118,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["odataproperty",{"_index":2433,"title":{},"body":{"classes/ODataResponse.html":{},"miscellaneous/typealiases.html":{}}}],["odatapropertymeta",{"_index":1463,"title":{"classes/ODataPropertyMeta.html":{}},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponse.html":{}}}],["odatapropertymeta(payload",{"_index":2484,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odatapropertymeta(this.annotations",{"_index":1464,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["odatapropertyresource",{"_index":1937,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataqueryoptions",{"_index":1362,"title":{"classes/ODataQueryOptions.html":{}},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["odataqueryoptions(this.tojson",{"_index":2195,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["odatarequest",{"_index":751,"title":{"classes/ODataRequest.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"classes/ODataSettings.html":{},"interfaces/StoragePayload.html":{}}}],["odataresource",{"_index":911,"title":{"classes/ODataResource.html":{}},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:102",{"_index":1377,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:104",{"_index":1391,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:118",{"_index":1392,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:125",{"_index":1369,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:130",{"_index":1390,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:196",{"_index":1380,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:203",{"_index":1386,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:210",{"_index":1388,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:218",{"_index":1382,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:226",{"_index":1379,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:28",{"_index":1360,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:29",{"_index":1361,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:30",{"_index":1363,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:45",{"_index":1394,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:53",{"_index":1395,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:64",{"_index":1384,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:75",{"_index":1376,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:84",{"_index":1372,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresource:94",{"_index":1393,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["odataresponse",{"_index":770,"title":{"classes/ODataResponse.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponse.fromhttpresponse(req",{"_index":819,"title":{},"body":{"classes/ODataApi.html":{}}}],["odataresponse.fromjson(req",{"_index":1862,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["odataresponseoptions",{"_index":2418,"title":{"classes/ODataResponseOptions.html":{}},"body":{"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this",{"_index":2507,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["odataresponseoptions(this.api.options",{"_index":2457,"title":{},"body":{"classes/ODataResponse.html":{}}}],["odataschema",{"_index":716,"title":{"classes/ODataSchema.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["odataschema(schema",{"_index":807,"title":{},"body":{"classes/ODataApi.html":{}}}],["odatasegment",{"_index":2067,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["odataservicefactory",{"_index":2035,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatasettings",{"_index":2043,"title":{"classes/ODataSettings.html":{}},"body":{"modules/ODataModule.html":{},"classes/ODataSettings.html":{}}}],["odatasettings(...configs",{"_index":2048,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatasingletonresource",{"_index":2691,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["odatasingletonservice",{"_index":2594,"title":{"classes/ODataSingletonService.html":{}},"body":{"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{}}}],["odatastructuredtype",{"_index":765,"title":{"classes/ODataStructuredType.html":{}},"body":{"classes/ODataApi.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["odatastructuredtype(config",{"_index":2553,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odatausage",{"_index":2876,"title":{},"body":{"index.html":{}}}],["odatavalueresource",{"_index":2727,"title":{"classes/ODataValueResource.html":{}},"body":{"classes/ODataValueResource.html":{}}}],["odatavalueresource(client",{"_index":2739,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odatavalueresource(this.client",{"_index":2740,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["odataversion",{"_index":156,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["odataversionhelper",{"_index":62,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["odv",{"_index":1447,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["of(cached",{"_index":1127,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["of({meta",{"_index":2004,"title":{},"body":{"classes/ODataModel.html":{}}}],["ondelete",{"_index":396,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["one",{"_index":2217,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{}}}],["onerror",{"_index":894,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onerror(content",{"_index":900,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload",{"_index":895,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["onload(content",{"_index":904,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["open",{"_index":215,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opentype",{"_index":300,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["opt",{"_index":1451,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.headers",{"_index":1455,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.headers.get(\"etag",{"_index":1456,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["opt.options",{"_index":1452,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["option",{"_index":2138,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["option(name",{"_index":2158,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["option(type",{"_index":2139,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"miscellaneous/functions.html":{}}}],["optionhandler",{"_index":2089,"title":{"classes/OptionHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["optionhandler(this.options",{"_index":2141,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["options",{"_index":97,"title":{"interfaces/Options.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["options).pipe",{"_index":1992,"title":{},"body":{"classes/ODataModel.html":{}}}],["options.apiname",{"_index":2382,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.attrs",{"_index":2391,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.clear",{"_index":2738,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["options.etag",{"_index":2393,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.fetchpolicy",{"_index":2400,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.headers",{"_index":2397,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.helper.type(value",{"_index":1575,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["options.keep(queryoptionnames.filter",{"_index":1400,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["options.meta",{"_index":1287,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["options.params",{"_index":2385,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.reportprogress",{"_index":2398,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.resource",{"_index":1284,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["options.responsetype",{"_index":2389,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.stringasenum",{"_index":1793,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["options.ts",{"_index":2147,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["options.ts:102",{"_index":2153,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:107",{"_index":2745,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:110",{"_index":2761,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:114",{"_index":2757,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:118",{"_index":2751,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:123",{"_index":2759,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:129",{"_index":2746,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:135",{"_index":2754,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:139",{"_index":2755,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:146",{"_index":2749,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:152",{"_index":2747,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:165",{"_index":2756,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:177",{"_index":2752,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:185",{"_index":2758,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:202",{"_index":2753,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:210",{"_index":2748,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:216",{"_index":2750,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:23",{"_index":2151,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:30",{"_index":2160,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:59",{"_index":2164,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:66",{"_index":2163,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:70",{"_index":2154,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:75",{"_index":2159,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:82",{"_index":2155,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:86",{"_index":2162,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:90",{"_index":2157,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:97",{"_index":2152,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.withcount",{"_index":2386,"title":{},"body":{"classes/ODataResource.html":{}}}],["options.withcredentials",{"_index":2399,"title":{},"body":{"classes/ODataResource.html":{}}}],["optionshelper",{"_index":169,"title":{"interfaces/OptionsHelper.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["opts",{"_index":1887,"title":{},"body":{"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["opts).pipe(map((body",{"_index":1889,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["opts.include_etag",{"_index":2724,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["opts.include_navigation",{"_index":2717,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["opts.include_parents",{"_index":2718,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["order",{"_index":46,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["orderby",{"_index":2168,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["orderbyobject",{"_index":3040,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["orderbytype",{"_index":3041,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["others",{"_index":1962,"title":{},"body":{"classes/ODataModel.html":{}}}],["otherwise",{"_index":153,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["out",{"_index":3022,"title":{},"body":{"license.html":{}}}],["overview",{"_index":3026,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":27,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["p.configure(settings",{"_index":1203,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.name",{"_index":1196,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.serialize(params[p.name",{"_index":1200,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["p.startswith(application_json",{"_index":2462,"title":{},"body":{"classes/ODataResponse.html":{}}}],["package",{"_index":2776,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1278,"title":{},"body":{"classes/ODataCollection.html":{}}}],["pages",{"_index":1279,"title":{},"body":{"classes/ODataCollection.html":{}}}],["param",{"_index":173,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["param_separator",{"_index":2344,"title":{},"body":{"classes/ODataResource.html":{}}}],["parameter",{"_index":218,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["parameter.type",{"_index":1180,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parameters",{"_index":222,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":99,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["params[p.name",{"_index":1197,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["parent",{"_index":1591,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{}}}],["parent.children.push(this",{"_index":1613,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["parent.fields.filter(field",{"_index":2716,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["parent.parent",{"_index":2719,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["parentelement.children",{"_index":673,"title":{},"body":{"classes/Field.html":{}}}],["parse",{"_index":656,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataModel.html":{},"classes/ODataResponse.html":{}}}],["parse(entity",{"_index":1920,"title":{},"body":{"classes/ODataModel.html":{}}}],["parse(parser",{"_index":1538,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["parse(values",{"_index":1246,"title":{},"body":{"classes/ODataCollection.html":{}}}],["parsenot",{"_index":2824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsenot(builtfilters",{"_index":2850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parser",{"_index":179,"title":{"interfaces/Parser.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parser).serialize(e",{"_index":2377,"title":{},"body":{"classes/ODataResource.html":{}}}],["parser.deserialize(value",{"_index":1578,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["parser.findparser(c",{"_index":1576,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["parser.parsefromstring(xml",{"_index":620,"title":{},"body":{"classes/Field.html":{}}}],["parser.serialize(options.attrs",{"_index":2392,"title":{},"body":{"classes/ODataResource.html":{}}}],["parser.serialize(value",{"_index":1583,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResource.html":{}}}],["parserfortype",{"_index":2611,"title":{},"body":{"classes/ODataSettings.html":{}}}],["parserfortype(type",{"_index":2644,"title":{},"body":{"classes/ODataSettings.html":{}}}],["parsers",{"_index":194,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["parsers/entity",{"_index":1939,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataResponse.html":{}}}],["parsers/index",{"_index":761,"title":{},"body":{"classes/ODataApi.html":{}}}],["partial",{"_index":1371,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{}}}],["particular",{"_index":3009,"title":{},"body":{"license.html":{}}}],["partner",{"_index":397,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["parts",{"_index":2357,"title":{},"body":{"classes/ODataResource.html":{}}}],["parts[0",{"_index":2359,"title":{},"body":{"classes/ODataResource.html":{}}}],["pass",{"_index":140,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["patch",{"_index":968,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["patch(attrs",{"_index":1381,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["path",{"_index":219,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{}}}],["path.indexof(query_separator",{"_index":2356,"title":{},"body":{"classes/ODataResource.html":{}}}],["path.match(/([^[.\\]])+/g",{"_index":2239,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["path.split(query_separator",{"_index":2358,"title":{},"body":{"classes/ODataResource.html":{}}}],["path_separator",{"_index":2090,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathandparams",{"_index":1358,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["patharray",{"_index":2237,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["patharray.length",{"_index":2242,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["patharray.reduce((acc",{"_index":2240,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["patharray.reduce((prevobj",{"_index":2247,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["pathsegmentnames",{"_index":909,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["pathsegmentnames.function",{"_index":2095,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegments",{"_index":1354,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["pathsegmentsbuilder",{"_index":2825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pathsegmentsbuilder(segment",{"_index":2092,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["pathwithparams",{"_index":2258,"title":{},"body":{"classes/ODataRequest.html":{}}}],["path}${query_separator}${querystring",{"_index":2374,"title":{},"body":{"classes/ODataResource.html":{}}}],["path}?${this.params",{"_index":2319,"title":{},"body":{"classes/ODataRequest.html":{}}}],["payload",{"_index":183,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["people",{"_index":2925,"title":{},"body":{"index.html":{}}}],["people.expand",{"_index":2927,"title":{},"body":{"index.html":{}}}],["people.get({withcount",{"_index":2935,"title":{},"body":{"index.html":{}}}],["peopleservice",{"_index":2895,"title":{},"body":{"index.html":{}}}],["peopleservice.entities",{"_index":2926,"title":{},"body":{"index.html":{}}}],["permission",{"_index":2966,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":13,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["permit",{"_index":2989,"title":{},"body":{"license.html":{}}}],["person",{"_index":2971,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2990,"title":{},"body":{"license.html":{}}}],["pick",{"_index":2700,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pick(value",{"_index":2708,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["pipe",{"_index":1033,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["pipe(catcherror((error",{"_index":1765,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["pipe(map(({entity",{"_index":1749,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["pipe(switchmap",{"_index":2907,"title":{},"body":{"index.html":{}}}],["plainobject",{"_index":2087,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":781,"title":{},"body":{"classes/ODataApi.html":{},"index.html":{}}}],["pm",{"_index":1927,"title":{},"body":{"classes/ODataModel.html":{}}}],["pointer",{"_index":1319,"title":{},"body":{"classes/ODataCollection.html":{}}}],["policies",{"_index":108,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["policy",{"_index":1124,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["populate",{"_index":1215,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["populate(data",{"_index":1922,"title":{},"body":{"classes/ODataModel.html":{}}}],["populate(values",{"_index":1248,"title":{},"body":{"classes/ODataCollection.html":{}}}],["portions",{"_index":2999,"title":{},"body":{"license.html":{}}}],["post",{"_index":967,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["post(attrs",{"_index":1385,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["post(entity",{"_index":1748,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["post(func",{"_index":1014,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["precision",{"_index":56,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["predicate",{"_index":1690,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["predicate(this",{"_index":1647,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["prefix",{"_index":944,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["present",{"_index":117,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["prevobj",{"_index":2248,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["prevobj[key",{"_index":2249,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["primitive",{"_index":1639,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["private",{"_index":166,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["project",{"_index":2863,"title":{},"body":{"index.html":{}}}],["projects/.../batch.ts",{"_index":2819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../builder.ts",{"_index":2800,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../client.ts",{"_index":2808,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../edm.ts",{"_index":3032,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../metadata.ts",{"_index":2796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../module.ts",{"_index":2816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../options.ts",{"_index":3037,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../path",{"_index":2797,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../query",{"_index":2798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../types.ts",{"_index":3030,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["prop",{"_index":1965,"title":{},"body":{"classes/ODataModel.html":{}}}],["prop.ascollection(value",{"_index":1969,"title":{},"body":{"classes/ODataModel.html":{}}}],["prop.asmodel(value",{"_index":1972,"title":{},"body":{"classes/ODataModel.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["properties(value",{"_index":83,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["property",{"_index":35,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["property(name",{"_index":1429,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["property(value",{"_index":74,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["property.enum",{"_index":1798,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["property.maxlength",{"_index":1587,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["property.ts",{"_index":393,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["property.ts:1",{"_index":486,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:14",{"_index":429,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:15",{"_index":430,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:16",{"_index":431,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:17",{"_index":433,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:18",{"_index":432,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:19",{"_index":428,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:25",{"_index":401,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:3",{"_index":487,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:30",{"_index":404,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:31",{"_index":402,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:32",{"_index":405,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:33",{"_index":403,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:39",{"_index":443,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:4",{"_index":489,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:41",{"_index":444,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:42",{"_index":445,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:46",{"_index":417,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:48",{"_index":418,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:5",{"_index":488,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:9",{"_index":427,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["propertyref",{"_index":552,"title":{},"body":{"classes/Field.html":{}}}],["propertyrefs",{"_index":316,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["propname",{"_index":2847,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propprefix",{"_index":2836,"title":{},"body":{"miscellaneous/functions.html":{}}}],["protected",{"_index":657,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataResource.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["provide",{"_index":2051,"title":{},"body":{"modules/ODataModule.html":{}}}],["provided",{"_index":3000,"title":{},"body":{"license.html":{}}}],["providers",{"_index":2034,"title":{},"body":{"modules/ODataModule.html":{}}}],["public",{"_index":165,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"modules/ODataModule.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["publish",{"_index":2983,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":3010,"title":{},"body":{"license.html":{}}}],["push",{"_index":2742,"title":{},"body":{"classes/OptionHandler.html":{}}}],["push(value",{"_index":2213,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["put",{"_index":229,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCountResource.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["put(attrs",{"_index":1387,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["put(entity",{"_index":1756,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["put(key",{"_index":182,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["putresponse",{"_index":1082,"title":{},"body":{"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{}}}],["putresponse(req",{"_index":1103,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["qualifier",{"_index":276,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["queried",{"_index":152,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["queries",{"_index":2892,"title":{},"body":{"index.html":{}}}],["query",{"_index":113,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["query_separator",{"_index":2345,"title":{},"body":{"classes/ODataResource.html":{}}}],["querying",{"_index":2859,"title":{},"body":{"index.html":{}}}],["queryoptionnames",{"_index":1397,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["queryoptionnames.expand",{"_index":2178,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.filter",{"_index":2172,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.format",{"_index":2179,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.orderby",{"_index":2174,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.search",{"_index":1401,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.select",{"_index":2171,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skip",{"_index":2176,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skiptoken",{"_index":2177,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.top",{"_index":2175,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.transform",{"_index":2173,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptions",{"_index":1355,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"miscellaneous/typealiases.html":{}}}],["querystring",{"_index":2369,"title":{},"body":{"classes/ODataResource.html":{}}}],["r",{"_index":1176,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{}}}],["raw",{"_index":3042,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["readlink",{"_index":1411,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["readlink(value",{"_index":88,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["reattach",{"_index":1291,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["records",{"_index":1274,"title":{},"body":{"classes/ODataCollection.html":{}}}],["reduce",{"_index":2575,"title":{},"body":{"classes/ODataSchema.html":{}}}],["reduce((acc",{"_index":1198,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{}}}],["ref",{"_index":59,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["ref.add(model.target",{"_index":1341,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ref.remove(model.target",{"_index":1344,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ref.set(value.rel.target",{"_index":2001,"title":{},"body":{"classes/ODataModel.html":{}}}],["ref.unset({etag",{"_index":2003,"title":{},"body":{"classes/ODataModel.html":{}}}],["reference",{"_index":521,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["reference.ts",{"_index":373,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["reference.ts:14",{"_index":375,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:16",{"_index":377,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:17",{"_index":376,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:21",{"_index":386,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:23",{"_index":389,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:24",{"_index":387,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:25",{"_index":388,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:3",{"_index":438,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:5",{"_index":441,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:6",{"_index":440,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:7",{"_index":439,"title":{},"body":{"classes/CsdlReference.html":{}}}],["referencedproperty",{"_index":410,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["references",{"_index":614,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraint",{"_index":556,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraints",{"_index":398,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["regardless",{"_index":136,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["regex",{"_index":2234,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["region",{"_index":187,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["rel",{"_index":1940,"title":{},"body":{"classes/ODataModel.html":{}}}],["related",{"_index":2862,"title":{},"body":{"index.html":{}}}],["relative",{"_index":962,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["remove",{"_index":1083,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["remove(...names",{"_index":2198,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["remove(model",{"_index":1251,"title":{},"body":{"classes/ODataCollection.html":{}}}],["remove(name",{"_index":2077,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["remove(names",{"_index":2161,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["remove(value",{"_index":2215,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["renderprimitivevalue",{"_index":2826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["renderprimitivevalue(key",{"_index":2852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replace(/\\;/g",{"_index":2467,"title":{},"body":{"classes/ODataResponse.html":{}}}],["reportprogress",{"_index":2257,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["req",{"_index":753,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{}}}],["req.api",{"_index":1017,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResponse.html":{}}}],["req.fetchpolicy",{"_index":1125,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.method",{"_index":1123,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.observe",{"_index":1021,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["req.onload(chunk.slice(1",{"_index":1071,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["req.resource",{"_index":2440,"title":{},"body":{"classes/ODataResponse.html":{}}}],["request",{"_index":127,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["request(method",{"_index":1389,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["request(req",{"_index":750,"title":{},"body":{"classes/ODataApi.html":{}}}],["requested",{"_index":132,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["requester",{"_index":686,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSettings.html":{}}}],["requests",{"_index":997,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["required",{"_index":1625,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["res",{"_index":813,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["res$.pipe",{"_index":815,"title":{},"body":{"classes/ODataApi.html":{}}}],["res$.pipe(catcherror(this.errorhandler",{"_index":820,"title":{},"body":{"classes/ODataApi.html":{}}}],["res$.pipe(map((res",{"_index":2401,"title":{},"body":{"classes/ODataResource.html":{}}}],["res$.pipe(startwith(cached",{"_index":1132,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res$.pipe(tap((res",{"_index":1129,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.body",{"_index":2406,"title":{},"body":{"classes/ODataResource.html":{},"classes/ODataResponse.html":{}}}],["res.delete(object.assign({etag",{"_index":1762,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["res.entities",{"_index":2402,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.entity",{"_index":2403,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.headers",{"_index":2441,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.join(newline",{"_index":975,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.length",{"_index":1054,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.options.cacheability",{"_index":1130,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["res.options.maxage",{"_index":1844,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.patch(attrs",{"_index":1758,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["res.property",{"_index":2404,"title":{},"body":{"classes/ODataResource.html":{}}}],["res.push(`${batch",{"_index":1051,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary",{"_index":1048,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${changesetboundary}${boundary_prefix_suffix",{"_index":1043,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${this.batchboundary",{"_index":1044,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${boundary_prefix_suffix}${this.batchboundary}${boundary_prefix_suffix",{"_index":1055,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_id",{"_index":1050,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_transfer_encoding",{"_index":1049,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(`${content_type",{"_index":969,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(json.stringify(batch.request.body",{"_index":1053,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.push(newline",{"_index":1047,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.segment.key().empty",{"_index":1754,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["res.split(':')[1].trim",{"_index":948,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["res.status",{"_index":2442,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.statustext",{"_index":2443,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.tojson",{"_index":1861,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["res.type",{"_index":817,"title":{},"body":{"classes/ODataApi.html":{}}}],["res.url",{"_index":2444,"title":{},"body":{"classes/ODataResponse.html":{}}}],["res.value",{"_index":2405,"title":{},"body":{"classes/ODataResource.html":{}}}],["resolve",{"_index":1516,"title":{},"body":{"classes/ODataEntityFieldParser.html":{}}}],["resolve(value",{"_index":1541,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["resolvekey",{"_index":1678,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["resolvekey(attrs",{"_index":1634,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["resource",{"_index":912,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"index.html":{}}}],["resource.clone().asmodel(value",{"_index":1296,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.entity",{"_index":1293,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.put(attrs",{"_index":2006,"title":{},"body":{"classes/ODataModel.html":{}}}],["resource.segment.key(value",{"_index":1295,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.type",{"_index":1289,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resourceparams",{"_index":2300,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resourcepath",{"_index":2299,"title":{},"body":{"classes/ODataRequest.html":{}}}],["resources",{"_index":1110,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"interfaces/StoragePayload.html":{},"index.html":{}}}],["resources/index",{"_index":771,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resp",{"_index":1036,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["responds",{"_index":129,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["response",{"_index":991,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["response.body.split(newline_regexp",{"_index":1063,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["response.headers.get(content_type",{"_index":1059,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["responseoptions",{"_index":175,"title":{"interfaces/ResponseOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["responses",{"_index":932,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"interfaces/StoragePayload.html":{}}}],["responses/index",{"_index":2347,"title":{},"body":{"classes/ODataResource.html":{}}}],["responsetype",{"_index":1032,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{}}}],["restriction",{"_index":2978,"title":{},"body":{"license.html":{}}}],["result",{"_index":224,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":226,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":134,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["returned",{"_index":133,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["returns",{"_index":232,"title":{},"body":{"interfaces/Cache.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":242,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["rights",{"_index":2981,"title":{},"body":{"license.html":{}}}],["root",{"_index":2884,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":23,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{},"classes/ODataSettings.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":759,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataResource.html":{}}}],["s",{"_index":1907,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.isnamespaceof(type",{"_index":825,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataSettings.html":{}}}],["s.name",{"_index":2122,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.path",{"_index":2123,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.type).filter(t",{"_index":2112,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s1.namespace.length",{"_index":829,"title":{},"body":{"classes/ODataApi.html":{}}}],["s2",{"_index":828,"title":{},"body":{"classes/ODataApi.html":{}}}],["s2.namespace.length).pop",{"_index":830,"title":{},"body":{"classes/ODataApi.html":{}}}],["same",{"_index":1020,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["save",{"_index":1705,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["save(entity",{"_index":1724,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["save(options",{"_index":1924,"title":{},"body":{"classes/ODataModel.html":{}}}],["scale",{"_index":58,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schema",{"_index":38,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataModel.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schema.alias",{"_index":2715,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["schema.callables",{"_index":844,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.collection",{"_index":849,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.configure",{"_index":811,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.entities",{"_index":843,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.entitysets",{"_index":845,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.enums",{"_index":840,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.model",{"_index":847,"title":{},"body":{"classes/ODataApi.html":{}}}],["schema.namespace",{"_index":1157,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["schema.namespace}.${config.name",{"_index":1151,"title":{},"body":{"classes/ODataCallable.html":{}}}],["schema.ts",{"_index":455,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:10",{"_index":475,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:11",{"_index":468,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:12",{"_index":473,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:13",{"_index":470,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:14",{"_index":472,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:15",{"_index":474,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:16",{"_index":467,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:17",{"_index":471,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:18",{"_index":477,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:19",{"_index":476,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:20",{"_index":469,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:8",{"_index":466,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema/index",{"_index":766,"title":{},"body":{"classes/ODataApi.html":{}}}],["schemaconfig",{"_index":196,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataSchema.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["schemas",{"_index":195,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["schemas.length",{"_index":826,"title":{},"body":{"classes/ODataApi.html":{}}}],["schemas.sort((s1",{"_index":827,"title":{},"body":{"classes/ODataApi.html":{}}}],["schemas[0",{"_index":831,"title":{},"body":{"classes/ODataApi.html":{}}}],["search",{"_index":2120,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["segment",{"_index":2065,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["segment(name",{"_index":2079,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.name",{"_index":2094,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.options[segmentoptionnames.key",{"_index":2100,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.options[segmentoptionnames.parameters",{"_index":2096,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.path",{"_index":2098,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.settype(type",{"_index":2737,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["segment.type",{"_index":2114,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler",{"_index":2075,"title":{"classes/SegmentHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(segment",{"_index":2129,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(this.segments[this.segments.length",{"_index":2125,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmentoptionnames",{"_index":2091,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["segments",{"_index":910,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/SegmentHandler.html":{}}}],["segments.segment(pathsegmentnames.batch",{"_index":1012,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["segments.segment(pathsegmentnames.count",{"_index":1398,"title":{},"body":{"classes/ODataCountResource.html":{}}}],["segments.segment(pathsegmentnames.metadata",{"_index":1885,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["segments.segment(pathsegmentnames.value",{"_index":2736,"title":{},"body":{"classes/ODataValueResource.html":{}}}],["segments.ts",{"_index":2064,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["segments.ts:101",{"_index":2080,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:112",{"_index":2073,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:116",{"_index":2078,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:123",{"_index":2767,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:128",{"_index":2772,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:132",{"_index":2773,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:136",{"_index":2771,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:140",{"_index":2775,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:144",{"_index":2770,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:149",{"_index":2769,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:156",{"_index":2768,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:55",{"_index":2068,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:61",{"_index":2076,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:67",{"_index":2083,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:71",{"_index":2082,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:75",{"_index":2081,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:85",{"_index":2069,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:89",{"_index":2071,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:96",{"_index":2074,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["select",{"_index":45,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":2882,"title":{},"body":{"index.html":{}}}],["selecttype",{"_index":3043,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sell",{"_index":2987,"title":{},"body":{"license.html":{}}}],["serialize",{"_index":1167,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"interfaces/Parser.html":{}}}],["serialize(params",{"_index":1177,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["serialize(value",{"_index":181,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["server",{"_index":150,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataBatchRequest.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["service",{"_index":1744,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{},"index.html":{}}}],["servicerooturl",{"_index":190,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["services/index",{"_index":2044,"title":{},"body":{"modules/ODataModule.html":{}}}],["sessionstorage",{"_index":1855,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["set",{"_index":333,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/OptionHandler.html":{}}}],["set(model",{"_index":1952,"title":{},"body":{"classes/ODataModel.html":{}}}],["set(path",{"_index":2232,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["set.ts",{"_index":334,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:15",{"_index":1772,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:22",{"_index":1773,"title":{},"body":{"classes/ODataEntitySet.html":{}}}],["set.ts:3",{"_index":338,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:5",{"_index":341,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:6",{"_index":339,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:7",{"_index":342,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["set.ts:8",{"_index":340,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/ODataEntitySet.html":{}}}],["setcache",{"_index":2486,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setcache(cachecontrol",{"_index":2497,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures",{"_index":2487,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setfeatures(features",{"_index":2499,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setnavigationproperty",{"_index":1897,"title":{},"body":{"classes/ODataModel.html":{}}}],["setnavigationproperty(field",{"_index":1926,"title":{},"body":{"classes/ODataModel.html":{}}}],["setnavigationproperty>(field",{"_index":2027,"title":{},"body":{"classes/ODataModel.html":{}}}],["setpath",{"_index":2764,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["setpath(value",{"_index":2137,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["settings",{"_index":721,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{}}}],["settings.findparserfortype(this.base",{"_index":1612,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["settings.findparserfortype(this.return",{"_index":1201,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["settings.findparserfortype(this.type",{"_index":1185,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{}}}],["settings.requester",{"_index":809,"title":{},"body":{"classes/ODataApi.html":{}}}],["settype",{"_index":2765,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["settype(value",{"_index":2135,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["setup",{"_index":2659,"title":{},"body":{"classes/ODataSettings.html":{}}}],["setversion",{"_index":2488,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["setversion(version",{"_index":2501,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["shall",{"_index":2996,"title":{},"body":{"license.html":{}}}],["shortcuts",{"_index":1763,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSettings.html":{}}}],["single",{"_index":1638,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["singleton",{"_index":33,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEntityContainer.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["singleton(name",{"_index":2592,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["singleton.ts",{"_index":480,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:3",{"_index":482,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:5",{"_index":483,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:6",{"_index":485,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:7",{"_index":484,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singletons",{"_index":323,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["size",{"_index":1277,"title":{},"body":{"classes/ODataCollection.html":{}}}],["skip",{"_index":118,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{}}}],["skiptoken",{"_index":1276,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["slice(1",{"_index":2099,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["software",{"_index":2974,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["specified",{"_index":662,"title":{},"body":{"classes/Field.html":{}}}],["split",{"_index":2187,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["srid",{"_index":261,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["standardaggregatemethods",{"_index":2799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":2856,"title":{"index.html":{},"license.html":{}},"body":{}}],["startindex",{"_index":1067,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["startwith",{"_index":1107,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["state",{"_index":1218,"title":{},"body":{"classes/ODataCollection.html":{}}}],["states",{"_index":2916,"title":{},"body":{"index.html":{}}}],["static",{"_index":528,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{}}}],["status",{"_index":901,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["status.code",{"_index":979,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["status.text",{"_index":982,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statusparts",{"_index":1069,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statusparts[2",{"_index":1073,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["statustext",{"_index":981,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["step",{"_index":120,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["storage",{"_index":1852,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["storagepayload",{"_index":1851,"title":{"interfaces/StoragePayload.html":{}},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["store",{"_index":167,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["store'].indexof(directive",{"_index":2523,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["streaming",{"_index":168,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["stringasenum",{"_index":101,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structural",{"_index":311,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["structured",{"_index":294,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{}}}],["structuredschema",{"_index":2687,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["structuredtypebyname",{"_index":2612,"title":{},"body":{"classes/ODataSettings.html":{}}}],["structuredtypebyname(name",{"_index":2646,"title":{},"body":{"classes/ODataSettings.html":{}}}],["structuredtypeconfig",{"_index":203,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/typealiases.html":{}}}],["structuredtypefield",{"_index":48,"title":{"interfaces/StructuredTypeField.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypefieldoptions",{"_index":178,"title":{"interfaces/StructuredTypeFieldOptions.html":{}},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["structuredtypefortype",{"_index":2613,"title":{},"body":{"classes/ODataSettings.html":{}}}],["structuredtypefortype(type",{"_index":2648,"title":{},"body":{"classes/ODataSettings.html":{}}}],["styleurls",{"_index":2887,"title":{},"body":{"index.html":{}}}],["subject",{"_index":893,"title":{},"body":{"classes/ODataBatchRequest.html":{},"license.html":{}}}],["sublicense",{"_index":2985,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":2937,"title":{},"body":{"index.html":{}}}],["subscribe(({entities",{"_index":2903,"title":{},"body":{"index.html":{}}}],["subscribe(({entity",{"_index":2909,"title":{},"body":{"index.html":{}}}],["subscribe(aports",{"_index":2899,"title":{},"body":{"index.html":{}}}],["substantial",{"_index":2998,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":943,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["sum",{"_index":2802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":960,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["super(annotationlist",{"_index":277,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["super(client",{"_index":1001,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{}}}],["super(init",{"_index":1842,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["super(name",{"_index":312,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{}}}],["super.get",{"_index":1405,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataValueResource.html":{}}}],["support",{"_index":2946,"title":{},"body":{"index.html":{}}}],["supported",{"_index":667,"title":{},"body":{"classes/Field.html":{}}}],["switch",{"_index":2093,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataResource.html":{},"classes/ODataResponseOptions.html":{},"classes/SegmentHandler.html":{}}}],["switchmap",{"_index":1936,"title":{},"body":{"classes/ODataModel.html":{}}}],["switchmap(({meta",{"_index":2005,"title":{},"body":{"classes/ODataModel.html":{}}}],["symbol.iterator",{"_index":1318,"title":{},"body":{"classes/ODataCollection.html":{}}}],["system",{"_index":2166,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["t",{"_index":29,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityService.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["t[]).map(value",{"_index":1294,"title":{},"body":{"classes/ODataCollection.html":{}}}],["t[p",{"_index":30,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["table",{"_index":2869,"title":{},"body":{"index.html":{}}}],["tag",{"_index":525,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["tag_action",{"_index":561,"title":{},"body":{"classes/Field.html":{}}}],["tag_action_import",{"_index":567,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotation",{"_index":541,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotations",{"_index":540,"title":{},"body":{"classes/Field.html":{}}}],["tag_complex_type",{"_index":546,"title":{},"body":{"classes/Field.html":{}}}],["tag_data_services",{"_index":531,"title":{},"body":{"classes/Field.html":{}}}],["tag_edmx",{"_index":529,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_container",{"_index":562,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_set",{"_index":563,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_type",{"_index":548,"title":{},"body":{"classes/Field.html":{}}}],["tag_enum_type",{"_index":543,"title":{},"body":{"classes/Field.html":{}}}],["tag_function",{"_index":558,"title":{},"body":{"classes/Field.html":{}}}],["tag_function_import",{"_index":565,"title":{},"body":{"classes/Field.html":{}}}],["tag_include",{"_index":535,"title":{},"body":{"classes/Field.html":{}}}],["tag_include_annotations",{"_index":537,"title":{},"body":{"classes/Field.html":{}}}],["tag_key",{"_index":550,"title":{},"body":{"classes/Field.html":{}}}],["tag_member",{"_index":545,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property",{"_index":553,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property_binding",{"_index":569,"title":{},"body":{"classes/Field.html":{}}}],["tag_on_delete",{"_index":557,"title":{},"body":{"classes/Field.html":{}}}],["tag_parameter",{"_index":560,"title":{},"body":{"classes/Field.html":{}}}],["tag_property",{"_index":549,"title":{},"body":{"classes/Field.html":{}}}],["tag_property_ref",{"_index":551,"title":{},"body":{"classes/Field.html":{}}}],["tag_reference",{"_index":533,"title":{},"body":{"classes/Field.html":{}}}],["tag_referential_constraint",{"_index":555,"title":{},"body":{"classes/Field.html":{}}}],["tag_return_type",{"_index":559,"title":{},"body":{"classes/Field.html":{}}}],["tag_schema",{"_index":542,"title":{},"body":{"classes/Field.html":{}}}],["tag_singleton",{"_index":564,"title":{},"body":{"classes/Field.html":{}}}],["tag_term",{"_index":539,"title":{},"body":{"classes/Field.html":{}}}],["tag_type_definition",{"_index":570,"title":{},"body":{"classes/Field.html":{}}}],["tags",{"_index":527,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["tap",{"_index":1108,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["target",{"_index":275,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["target.type",{"_index":2029,"title":{},"body":{"classes/ODataModel.html":{}}}],["targetnamespace",{"_index":384,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["templateurl",{"_index":2885,"title":{},"body":{"index.html":{}}}],["term",{"_index":278,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["termnamespace",{"_index":383,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["terms",{"_index":463,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["test",{"_index":2188,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["testing",{"_index":2367,"title":{},"body":{"classes/ODataResource.html":{}}}],["text",{"_index":977,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{}}}],["text/plain",{"_index":2313,"title":{},"body":{"classes/ODataRequest.html":{}}}],["text/xml",{"_index":621,"title":{},"body":{"classes/Field.html":{}}}],["this._api",{"_index":1002,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataMetadataResource.html":{}}}],["this._config.fields({include_navigation",{"_index":1944,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._context",{"_index":1458,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._entity",{"_index":1941,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._functions",{"_index":1486,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._meta",{"_index":1283,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._meta.attributes(data",{"_index":1975,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._meta.clone",{"_index":1314,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._meta.entity(value",{"_index":1297,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._meta.etag",{"_index":2010,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._meta.options",{"_index":1971,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._models",{"_index":1273,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._models.map(model",{"_index":1312,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._navigationproperty(field.name",{"_index":2021,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._options",{"_index":2456,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setcache(cachecontrol",{"_index":2471,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setfeatures(features",{"_index":2463,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._options.setversion(version",{"_index":2468,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this._properties",{"_index":1460,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this._query.skip(this._state.skip",{"_index":1331,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._query.skiptoken(this._state.skiptoken",{"_index":1333,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._relations",{"_index":1942,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._relations[field.name",{"_index":2025,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._relations[field.name].rel",{"_index":2026,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource",{"_index":1282,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.all",{"_index":1335,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._resource.api.options",{"_index":1974,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.clone",{"_index":1292,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.delete(object.assign",{"_index":2009,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.get",{"_index":1328,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.get(options).pipe",{"_index":1325,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.post(attrs",{"_index":1991,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.reference",{"_index":1340,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._resource.segment.key().empty",{"_index":1987,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.segment.key(this",{"_index":1986,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.type",{"_index":1288,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._state",{"_index":1280,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.page",{"_index":1309,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.pages",{"_index":1307,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.records",{"_index":1306,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.size",{"_index":1301,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.skip",{"_index":1302,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.skiptoken",{"_index":1304,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.top",{"_index":1299,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.alias",{"_index":1595,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSchema.html":{}}}],["this.annotations",{"_index":1453,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSchema.html":{},"classes/ODataStructuredType.html":{}}}],["this.annotations.find(annot",{"_index":1571,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.api",{"_index":1018,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{}}}],["this.api.findentitysetbyname(this.name",{"_index":1746,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["this.api.findparserfortype(type",{"_index":2474,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.api.findstructuredtypefortype(this.entitytype",{"_index":1747,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["this.api.options",{"_index":2574,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.api.options.fetchpolicy",{"_index":2298,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.helper",{"_index":1751,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.api.options.ieee754compatible",{"_index":2308,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.metadata",{"_index":2305,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.options.withcredentials",{"_index":2296,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.request",{"_index":1016,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.api.servicerooturl}${this.path",{"_index":2320,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.api.servicerooturl}${this.pathwithparams",{"_index":2321,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.apis",{"_index":2651,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.every(c",{"_index":2660,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.filter(c",{"_index":2657,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.find(a",{"_index":2668,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.find(c",{"_index":2665,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.foreach(api",{"_index":2663,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.length",{"_index":2654,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.map(api",{"_index":2670,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis.some(c",{"_index":2655,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.apis[0].default",{"_index":2662,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.assertarray",{"_index":2227,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().filter(v",{"_index":2216,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().push(value",{"_index":2214,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray()[index",{"_index":2222,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(false",{"_index":2245,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject(true",{"_index":2233,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.attach(options.resource",{"_index":1285,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this.base",{"_index":1592,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.batchboundary",{"_index":1004,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.body",{"_index":1031,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.body)[\"d",{"_index":2476,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.bound",{"_index":1152,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.cache",{"_index":799,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.cache.handlerequest(req",{"_index":822,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.cache.iscacheable(req",{"_index":821,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.cacheability",{"_index":2524,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.callables",{"_index":2565,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.callables.find(e",{"_index":2580,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.checkversion(document",{"_index":622,"title":{},"body":{"classes/Field.html":{}}}],["this.children",{"_index":1596,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.children.find(c",{"_index":1648,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.client",{"_index":2348,"title":{},"body":{"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{}}}],["this.client.apibyname(options.apiname",{"_index":2383,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.apifortype(this.entitytype",{"_index":1745,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["this.client.collectionfortype(type",{"_index":2365,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.entityset(this.name",{"_index":1737,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.client.get(this",{"_index":1888,"title":{},"body":{"classes/ODataMetadataResource.html":{}}}],["this.client.modelfortype(type",{"_index":2362,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.post(this",{"_index":1030,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.client.request(method",{"_index":2395,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.client.singleton(this.name",{"_index":2696,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["this.collection",{"_index":1556,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataStructuredType.html":{}}}],["this.complete",{"_index":985,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.composable",{"_index":1153,"title":{},"body":{"classes/ODataCallable.html":{}}}],["this.constructor",{"_index":1316,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this.containers",{"_index":2568,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.context",{"_index":1466,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.create(entity",{"_index":1768,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.create(options",{"_index":2007,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.creation",{"_index":794,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.default",{"_index":791,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.deserialize(type",{"_index":2481,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.entities",{"_index":1739,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSchema.html":{}}}],["this.entities.find(e",{"_index":2579,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entity(entity",{"_index":1753,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.entity(entity).fetch(options",{"_index":1764,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.entity(entity).segment.key().empty",{"_index":1770,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.entitysets",{"_index":1506,"title":{},"body":{"classes/ODataEntityContainer.html":{}}}],["this.entitysets.find(e",{"_index":2581,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.entitytype",{"_index":1738,"title":{},"body":{"classes/ODataEntityService.html":{},"classes/ODataSingletonService.html":{}}}],["this.entries",{"_index":1113,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.entries.delete(key",{"_index":1121,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.foreach((entry",{"_index":1120,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.get(key",{"_index":1116,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.entries.set(key",{"_index":1114,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.enums",{"_index":2549,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.enums.find(e",{"_index":2577,"title":{},"body":{"classes/ODataSchema.html":{}}}],["this.error(new",{"_index":989,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.error(res",{"_index":994,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.errorhandler",{"_index":801,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.factory.entity(\"airports",{"_index":2894,"title":{},"body":{"index.html":{}}}],["this.factory.entity(\"people",{"_index":2896,"title":{},"body":{"index.html":{}}}],["this.fetch(options",{"_index":1332,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.fetchpolicy",{"_index":888,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.field",{"_index":1563,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.fields",{"_index":1597,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.fields().find(f",{"_index":1824,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.fields().map(mapper",{"_index":1826,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.fields(opts).map(f",{"_index":2721,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.fields.filter(f",{"_index":1626,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.fields.find(f",{"_index":1629,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.fields.foreach(f",{"_index":1614,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.find(name",{"_index":2126,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.find(predicate",{"_index":1651,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.findcallablefortype(type",{"_index":856,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findenumtypefortype(type",{"_index":854,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findparserfortype(type",{"_index":812,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findschemafortype(type)?.findcallablefortype(type",{"_index":834,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findschemafortype(type)?.findentitysetfortype(type",{"_index":835,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findschemafortype(type)?.findenumtypefortype(type",{"_index":832,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findschemafortype(type)?.findstructuredtypefortype(type",{"_index":833,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findstructuredtypebyname(name",{"_index":846,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findstructuredtypefortype(type",{"_index":855,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findstructuredtypefortype(type)?.collection",{"_index":837,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.findstructuredtypefortype(type)?.model",{"_index":836,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.flags",{"_index":1784,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.functions[name",{"_index":1488,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.get(req.urlwithparams",{"_index":1845,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.getfieldvaluebyattribute",{"_index":624,"title":{},"body":{"classes/Field.html":{}}}],["this.getnavigationproperty(field",{"_index":1951,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.getobjects(dataservices",{"_index":640,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(document.documentelement",{"_index":629,"title":{},"body":{"classes/Field.html":{}}}],["this.getresponse(req",{"_index":1126,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.handleresponse(resp",{"_index":1035,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.headers",{"_index":884,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.headers.get(cache_control",{"_index":2470,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(content_type",{"_index":2458,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.get(key",{"_index":2466,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.getall(name",{"_index":2452,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.keys",{"_index":2450,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.headers.keys().find(k",{"_index":2464,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.ieee754compatible",{"_index":880,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.isexpired(entry",{"_index":1117,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.key",{"_index":1554,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.keys",{"_index":1635,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.keys().length",{"_index":1645,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.maxage",{"_index":2522,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.maxlength",{"_index":1552,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.members",{"_index":1786,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{}}}],["this.metadata",{"_index":876,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.metadataurl",{"_index":786,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.method",{"_index":2283,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.model",{"_index":2711,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.n",{"_index":2207,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.name",{"_index":788,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{}}}],["this.name).split('/').reduce((acc",{"_index":1572,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.namespace",{"_index":1594,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSchema.html":{}}}],["this.namespace}.${this.name",{"_index":1601,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.navigation",{"_index":1561,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.next(odataresponse.fromhttpresponse(this.request",{"_index":984,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.nextlink",{"_index":1496,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.nullable",{"_index":1558,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.o[this.n",{"_index":2208,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].filter((v",{"_index":2251,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].length",{"_index":2219,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n][0",{"_index":2220,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.observe",{"_index":2293,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.odata.batch(\"trippin\").post(batch",{"_index":2932,"title":{},"body":{"index.html":{}}}],["this.odata.fromjson(json",{"_index":2922,"title":{},"body":{"index.html":{}}}],["this.odv.annotations(data",{"_index":1454,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.attributes(data",{"_index":1471,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.context(this.annotations",{"_index":1459,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.count(this.annotations",{"_index":1492,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.deltalink(this.annotations",{"_index":1494,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.editlink(this.annotations",{"_index":1479,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.entities(data",{"_index":1490,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.entity(data",{"_index":1469,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.etag(this.annotations",{"_index":1457,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.functions(this.annotations",{"_index":1487,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.id(this.annotations",{"_index":1472,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediacontenttype(this.annotations",{"_index":1485,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediaeditlink(this.annotations",{"_index":1483,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediaetag(this.annotations",{"_index":1474,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.mediareadlink(this.annotations",{"_index":1481,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.metadataetag(this.annotations",{"_index":1476,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.nextlink(this.annotations",{"_index":1493,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.properties(this.annotations",{"_index":1461,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.property(data",{"_index":1465,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.readlink(this.annotations",{"_index":1477,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.odv.type(this.annotations",{"_index":1467,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.option(name).clear",{"_index":2200,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options",{"_index":796,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.options.helper",{"_index":1449,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.options.helper.etag(attrs",{"_index":2726,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.options.helper.etag(value",{"_index":2725,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["this.options.helper.type(value",{"_index":2472,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options.version",{"_index":2475,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.options[k",{"_index":2205,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[key",{"_index":2182,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[name",{"_index":2196,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[queryoptionnames.custom",{"_index":2185,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[type",{"_index":2140,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.parameters",{"_index":1189,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parameters.foreach(p",{"_index":1202,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.params",{"_index":882,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["this.params.keys().length",{"_index":2318,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.parent",{"_index":1603,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parent.deserialize(value",{"_index":1604,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parent.keys",{"_index":1632,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parent.serialize(value",{"_index":1609,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parent.typefor(name",{"_index":1630,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parse(parser",{"_index":1579,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["this.parse(this._entity",{"_index":1976,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.parse(values",{"_index":1311,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.parser",{"_index":1155,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataParameterParser.html":{},"classes/ODataStructuredType.html":{}}}],["this.parser.configure(settings",{"_index":1164,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataStructuredType.html":{}}}],["this.parser.deserialize(value",{"_index":1193,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.fields",{"_index":1823,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["this.parser.iscomplextype",{"_index":1590,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parser.serialize(v",{"_index":1183,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.serialize(value",{"_index":1184,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.parser.tojsonschema(options",{"_index":1585,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.parsers",{"_index":803,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.parsers[type",{"_index":850,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.path",{"_index":1148,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/SegmentHandler.html":{}}}],["this.pathandparams",{"_index":2368,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments",{"_index":2349,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.clone",{"_index":1009,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataValueResource.html":{}}}],["this.pathsegments.last",{"_index":2351,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.path",{"_index":2354,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.tojson",{"_index":2379,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.pathsegments.types",{"_index":2352,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.populate((values",{"_index":1286,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.populate(data",{"_index":1943,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.populate(entities",{"_index":1327,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.populate(entity",{"_index":1989,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.populate(this._entity",{"_index":1954,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.precision",{"_index":1565,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.properties[name",{"_index":1462,"title":{},"body":{"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{}}}],["this.put(req.urlwithparams",{"_index":1843,"title":{},"body":{"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["this.putresponse(req",{"_index":1131,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.queries",{"_index":2891,"title":{},"body":{"index.html":{}}}],["this.queryoptions",{"_index":2350,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.alias(name",{"_index":2381,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.clone",{"_index":1404,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataValueResource.html":{}}}],["this.queryoptions.params",{"_index":2355,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.queryoptions.tojson",{"_index":2380,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.ref",{"_index":1569,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.references",{"_index":628,"title":{},"body":{"classes/Field.html":{}}}],["this.remove",{"_index":1115,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.reportprogress",{"_index":2289,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.request('delete",{"_index":2412,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('get",{"_index":2407,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('patch",{"_index":2411,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('post",{"_index":2408,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request('put",{"_index":2410,"title":{},"body":{"classes/ODataResource.html":{}}}],["this.request.headers",{"_index":970,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.method",{"_index":965,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.pathwithparams",{"_index":966,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.request.urlwithparams",{"_index":983,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requester",{"_index":808,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.requester(req",{"_index":814,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.requests",{"_index":1006,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests.push(new",{"_index":1025,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests[index",{"_index":1068,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.requests[this.requests.length",{"_index":1027,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["this.resource",{"_index":2285,"title":{},"body":{"classes/ODataRequest.html":{},"classes/ODataResponse.html":{}}}],["this.resource.type",{"_index":2480,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.responsetype",{"_index":2291,"title":{},"body":{"classes/ODataRequest.html":{}}}],["this.return",{"_index":1187,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataParameterParser.html":{}}}],["this.scale",{"_index":1567,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.schema",{"_index":1147,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.alias",{"_index":1160,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.namespace}.${this.name",{"_index":1159,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schema.options",{"_index":1163,"title":{},"body":{"classes/ODataCallable.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["this.schemas",{"_index":639,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{}}}],["this.schemas.filter(s",{"_index":824,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.schemas.foreach(schema",{"_index":810,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.schemas.reduce((acc",{"_index":838,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.segment.name",{"_index":2133,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.options",{"_index":2132,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.path",{"_index":2136,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.type",{"_index":2134,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments",{"_index":2107,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.filter(s",{"_index":2130,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.length",{"_index":2124,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(s",{"_index":2111,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(segment",{"_index":2113,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.push(segment",{"_index":2127,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments].reverse().find(s",{"_index":2121,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.servicerooturl",{"_index":776,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.servicerooturl.endswith",{"_index":785,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.servicerooturl.indexof",{"_index":778,"title":{},"body":{"classes/ODataApi.html":{}}}],["this.setnavigationproperty(field",{"_index":1953,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.status",{"_index":2453,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.statustext",{"_index":2454,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.streaming",{"_index":2514,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["this.stringasenum",{"_index":878,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.timeout",{"_index":1111,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["this.toentity",{"_index":1990,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.tojson(parser",{"_index":1584,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["this.type",{"_index":680,"title":{},"body":{"classes/ODataAnnotation.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResource.html":{}}}],["this.type}'${name",{"_index":1795,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.update(entity",{"_index":1771,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["this.update(options",{"_index":2008,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.url",{"_index":2455,"title":{},"body":{"classes/ODataResponse.html":{}}}],["this.value",{"_index":1781,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["this.version",{"_index":623,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponseOptions.html":{}}}],["this.withcredentials",{"_index":886,"title":{},"body":{"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{}}}],["throw",{"_index":654,"title":{},"body":{"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["throw(\"no",{"_index":1967,"title":{},"body":{"classes/ODataModel.html":{}}}],["throwerror",{"_index":1106,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataEntityService.html":{}}}],["throwerror(\"no",{"_index":1128,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{}}}],["throwerror(\"resource",{"_index":1755,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["throwerror(error",{"_index":1769,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["thrown",{"_index":155,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["time",{"_index":939,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["timeout",{"_index":1076,"title":{},"body":{"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["title",{"_index":1586,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"index.html":{}}}],["todo",{"_index":961,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/OptionHandler.html":{}}}],["toentities",{"_index":1216,"title":{},"body":{"classes/ODataCollection.html":{}}}],["toentity",{"_index":1898,"title":{},"body":{"classes/ODataModel.html":{}}}],["tojson",{"_index":1359,"title":{},"body":{"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["tojson(parser",{"_index":1544,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["tojsonschema",{"_index":1517,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{}}}],["tojsonschema(config",{"_index":1616,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["tojsonschema(options",{"_index":1546,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["tokens",{"_index":2046,"title":{},"body":{"modules/ODataModule.html":{}}}],["tools",{"_index":2197,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["top",{"_index":1275,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataMeta.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["tort",{"_index":3020,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":896,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCountResource.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["transform",{"_index":2167,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transforms",{"_index":2842,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trim",{"_index":2516,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["trippin",{"_index":2890,"title":{},"body":{"index.html":{}}}],["trippinconfig",{"_index":2939,"title":{},"body":{"index.html":{}}}],["trippinmodule",{"_index":2940,"title":{},"body":{"index.html":{}}}],["trips",{"_index":2930,"title":{},"body":{"index.html":{}}}],["true",{"_index":1560,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"index.html":{}}}],["true}).subscribe(console.log",{"_index":2936,"title":{},"body":{"index.html":{}}}],["try",{"_index":616,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{}}}],["tslib",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":139,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["type(value",{"_index":86,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["type.startswith(\"edm",{"_index":853,"title":{},"body":{"classes/ODataApi.html":{}}}],["type.startswith(this.alias",{"_index":2573,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.startswith(this.namespace",{"_index":2572,"title":{},"body":{"classes/ODataSchema.html":{}}}],["type.ts",{"_index":295,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:1",{"_index":355,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:10",{"_index":349,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:11",{"_index":1812,"title":{},"body":{"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:12",{"_index":350,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:13",{"_index":351,"title":{},"body":{"classes/CsdlEnumMember.html":{}}}],["type.ts:14",{"_index":303,"title":{},"body":{"classes/CsdlComplexType.html":{}}}],["type.ts:20",{"_index":1818,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:23",{"_index":2707,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:27",{"_index":344,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataEnumType.html":{}}}],["type.ts:3",{"_index":358,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:30",{"_index":346,"title":{},"body":{"classes/CsdlEntityType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:31",{"_index":1813,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:34",{"_index":2701,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:35",{"_index":1815,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:36",{"_index":345,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:38",{"_index":2703,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:39",{"_index":1817,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:4",{"_index":357,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:42",{"_index":391,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:43",{"_index":1820,"title":{},"body":{"classes/ODataEnumType.html":{}}}],["type.ts:44",{"_index":392,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:48",{"_index":434,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:5",{"_index":359,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:50",{"_index":436,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:51",{"_index":435,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:56",{"_index":2706,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:6",{"_index":356,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:60",{"_index":2709,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["type.ts:7",{"_index":491,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:8",{"_index":490,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["type.ts:9",{"_index":492,"title":{},"body":{"classes/CsdlStructuredType.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["typealiases",{"_index":3029,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefinition",{"_index":571,"title":{},"body":{"classes/Field.html":{}}}],["typedefinitions",{"_index":464,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["typefor",{"_index":1679,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["typefor(name",{"_index":1628,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["typeof",{"_index":848,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataPathSegments.html":{},"classes/ODataRequest.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["types",{"_index":519,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotation.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityContainer.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMeta.html":{},"classes/ODataMetadataResource.html":{},"modules/ODataModule.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["types.isarray(custom",{"_index":2186,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isarray(path",{"_index":2238,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isarray(this.o[this.n",{"_index":2212,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(key",{"_index":1644,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["types.isempty(options",{"_index":2116,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(this.o[this.n",{"_index":2209,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(this.options[key",{"_index":2181,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(v",{"_index":2252,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(this.o[this.n",{"_index":2225,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(v",{"_index":2230,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(value",{"_index":1574,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataResponse.html":{}}}],["types.some(type",{"_index":2667,"title":{},"body":{"classes/ODataSettings.html":{}}}],["undefined",{"_index":186,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesMeta.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityMeta.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMeta.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataPropertyMeta.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StoragePayload.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["underlayingtype",{"_index":505,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["underlyingtype",{"_index":353,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["unicode",{"_index":409,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["uniqid",{"_index":2827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniqid(batch_prefix",{"_index":1005,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["uniqid(changeset_prefix",{"_index":1045,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["uniqid(prefix",{"_index":942,"title":{},"body":{"classes/ODataBatchRequest.html":{},"miscellaneous/functions.html":{}}}],["united",{"_index":2915,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":993,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["unnamed",{"_index":2828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unpacked",{"_index":3044,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unset",{"_index":2743,"title":{},"body":{"classes/OptionHandler.html":{}}}],["unset(path",{"_index":2250,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["unsuccessful",{"_index":986,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["up",{"_index":142,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["update",{"_index":131,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["update(entity",{"_index":1726,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["update(options",{"_index":1931,"title":{},"body":{"classes/ODataModel.html":{}}}],["updated",{"_index":146,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["updating",{"_index":151,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["uri",{"_index":379,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["url",{"_index":964,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataRequest.html":{},"classes/ODataResponse.html":{},"interfaces/StoragePayload.html":{}}}],["urls",{"_index":2165,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/OptionHandler.html":{}}}],["urls.parsequerystring(parts[1",{"_index":2360,"title":{},"body":{"classes/ODataResource.html":{}}}],["urls.parsequerystring(query.substr(1",{"_index":2184,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["urlwithparams",{"_index":2259,"title":{},"body":{"classes/ODataRequest.html":{}}}],["usage",{"_index":2872,"title":{},"body":{"index.html":{}}}],["use",{"_index":782,"title":{},"body":{"classes/ODataApi.html":{},"classes/ODataModel.html":{},"index.html":{},"license.html":{}}}],["usefactory",{"_index":2053,"title":{},"body":{"modules/ODataModule.html":{}}}],["uses",{"_index":130,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["usevalue",{"_index":2052,"title":{},"body":{"modules/ODataModule.html":{}}}],["using",{"_index":2951,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1548,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataRequest.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["utils/index",{"_index":2346,"title":{},"body":{"classes/ODataResource.html":{}}}],["utils/types",{"_index":520,"title":{},"body":{"classes/Field.html":{},"classes/ODataResponse.html":{}}}],["v",{"_index":1580,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{}}}],["v.rel",{"_index":1982,"title":{},"body":{"classes/ODataModel.html":{}}}],["v4",{"_index":2950,"title":{},"body":{"index.html":{}}}],["val",{"_index":2853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":61,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataCallableParser.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSettings.html":{},"classes/ODataSingletonService.html":{},"classes/ODataStructuredType.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["value(v",{"_index":2210,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["value).reduce((acc",{"_index":1790,"title":{},"body":{"classes/ODataEnumFieldParser.html":{},"classes/ODataEnumParser.html":{}}}],["value.attach(this.entities",{"_index":1743,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["value.attach(this.entities().entity(value.toentity",{"_index":1742,"title":{},"body":{"classes/ODataEntityService.html":{}}}],["value.attach(this.entity",{"_index":2697,"title":{},"body":{"classes/ODataSingletonService.html":{}}}],["value.field.collection",{"_index":1996,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.field.navigation",{"_index":1995,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.map(e",{"_index":2376,"title":{},"body":{"classes/ODataResource.html":{}}}],["value.map(v",{"_index":1182,"title":{},"body":{"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataParameterParser.html":{},"classes/ODataResponse.html":{}}}],["value.rel",{"_index":2000,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.toentities",{"_index":1984,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.toentity",{"_index":1983,"title":{},"body":{"classes/ODataModel.html":{}}}],["value?.parser",{"_index":857,"title":{},"body":{"classes/ODataApi.html":{}}}],["value[f.name",{"_index":1607,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["value[k",{"_index":2723,"title":{},"body":{"classes/ODataStructuredType.html":{}}}],["value_separator",{"_index":2343,"title":{},"body":{"classes/ODataResource.html":{}}}],["values",{"_index":1224,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{}}}],["values.length",{"_index":1310,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSettings.html":{}}}],["values.some(v",{"_index":1641,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{}}}],["values[0",{"_index":1640,"title":{},"body":{"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataSettings.html":{}}}],["van",{"_index":2964,"title":{},"body":{"license.html":{}}}],["var",{"_index":936,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataCallable.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntitySet.html":{},"classes/ODataEnumType.html":{},"classes/ODataStructuredType.html":{}}}],["variables",{"_index":996,"title":{},"body":{"classes/ODataBatchRequest.html":{},"classes/ODataResource.html":{}}}],["version",{"_index":98,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/Field.html":{},"classes/ODataApi.html":{},"classes/ODataApiOptions.html":{},"classes/ODataResponse.html":{},"classes/ODataResponseOptions.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"index.html":{}}}],["version.replace(/\\;/g",{"_index":2515,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_2_0",{"_index":2504,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_3_0",{"_index":2505,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["version_4_0",{"_index":522,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataResponseOptions.html":{}}}],["version_4_0].indexof(value",{"_index":2517,"title":{},"body":{"classes/ODataResponseOptions.html":{}}}],["versions",{"_index":2947,"title":{},"body":{"index.html":{}}}],["view",{"_index":2478,"title":{},"body":{"classes/ODataResponse.html":{}}}],["viewed",{"_index":2953,"title":{},"body":{"index.html":{}}}],["void",{"_index":184,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApi.html":{},"classes/ODataBatchRequest.html":{},"classes/ODataCache.html":{},"interfaces/ODataCacheEntry.html":{},"classes/ODataCallable.html":{},"classes/ODataCallableParser.html":{},"classes/ODataEntityFieldParser.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumType.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataModel.html":{},"classes/ODataParameterParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResponseOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataSettings.html":{},"classes/ODataStructuredType.html":{},"classes/OptionHandler.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"classes/SegmentHandler.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["warranties",{"_index":3006,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3001,"title":{},"body":{"license.html":{}}}],["whether",{"_index":137,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["wiki",{"_index":2956,"title":{},"body":{"index.html":{}}}],["window.addeventlistener(\"beforeunload",{"_index":1857,"title":{},"body":{"classes/ODataInStorageCache.html":{},"interfaces/StoragePayload.html":{}}}],["withcount",{"_index":1324,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataResource.html":{}}}],["withcredentials",{"_index":174,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataApiOptions.html":{},"classes/ODataRequest.html":{},"classes/ODataResource.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{}}}],["without",{"_index":148,"title":{},"body":{"interfaces/Annotation.html":{},"interfaces/ApiOptions.html":{},"interfaces/Cache.html":{},"interfaces/EnumTypeField.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityService.html":{},"classes/ODataModel.html":{},"interfaces/Options.html":{},"interfaces/OptionsHelper.html":{},"interfaces/Parser.html":{},"interfaces/ResponseOptions.html":{},"interfaces/StructuredTypeField.html":{},"interfaces/StructuredTypeFieldOptions.html":{},"license.html":{}}}],["works",{"_index":2942,"title":{},"body":{"index.html":{}}}],["xssi_prefix",{"_index":933,"title":{},"body":{"classes/ODataBatchRequest.html":{}}}],["yes",{"_index":248,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataCache.html":{},"classes/ODataCollection.html":{},"classes/ODataCountResource.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEntityService.html":{},"classes/ODataInMemoryCache.html":{},"classes/ODataInStorageCache.html":{},"classes/ODataMetadataResource.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataResource.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSingletonService.html":{},"classes/ODataValueResource.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Annotation.html":{"url":"interfaces/Annotation.html","title":"interface - Annotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Annotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        bool\n                                \n                                \n                                            Optional\n                                        int\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        properties\n                                \n                                \n                                            Optional\n                                        string\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bool\n                                    \n                                \n                                \n                                    \n                                        bool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        int\n                                    \n                                \n                                \n                                    \n                                        int:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        properties\n                                    \n                                \n                                \n                                    \n                                        properties:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        string\n                                    \n                                \n                                \n                                    \n                                        string:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiOptions.html":{"url":"interfaces/ApiOptions.html","title":"interface - ApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fetchPolicy\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        params\n                                \n                                \n                                            Optional\n                                        withCredentials\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fetchPolicy\n                                    \n                                \n                                \n                                    \n                                        fetchPolicy:         FetchPolicy\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         FetchPolicy\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                    \n                                \n                                \n                                    \n                                        params:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        withCredentials\n                                    \n                                \n                                \n                                    \n                                        withCredentials:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    get\n                                \n                                \n                                    put\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAction.html":{"url":"classes/CsdlAction.html","title":"class - CsdlAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                    Optional\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType?: CsdlReturnType, isBound?: boolean, entitySetPath?: string, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlActionImport.html":{"url":"classes/CsdlActionImport.html","title":"class - CsdlActionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlActionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, action: string, entitySet?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotable.html":{"url":"classes/CsdlAnnotable.html","title":"class - CsdlAnnotable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotation.html":{"url":"classes/CsdlAnnotation.html","title":"class - CsdlAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(term: string, qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            term\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotations.html":{"url":"classes/CsdlAnnotations.html","title":"class - CsdlAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: string, annotationList: CsdlAnnotation[], qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlComplexType.html":{"url":"classes/CsdlComplexType.html","title":"class - CsdlComplexType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlComplexType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityContainer.html":{"url":"classes/CsdlEntityContainer.html","title":"class - CsdlEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actionImports\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySets\n                            \n                            \n                                    Public\n                                    Optional\n                                extend\n                            \n                            \n                                    Public\n                                    Optional\n                                functionImports\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                singletons\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, extend?: string, entitySets?: CsdlEntitySet[], singletons?: CsdlSingleton[], functionImports?: CsdlFunctionImport[], actionImports?: CsdlActionImport[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extend\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySets\n                                                  \n                                                        \n                                                                        CsdlEntitySet[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        singletons\n                                                  \n                                                        \n                                                                        CsdlSingleton[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionImports\n                                                  \n                                                        \n                                                                    CsdlFunctionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionImports\n                                                  \n                                                        \n                                                                    CsdlActionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlActionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            extend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlFunctionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            singletons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlSingleton[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n    constructor(\n        public name: string,\n        public extend?: string,\n        public entitySets?: CsdlEntitySet[],\n        public singletons?: CsdlSingleton[],\n        public functionImports?: CsdlFunctionImport[],\n        public actionImports?: CsdlActionImport[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntitySet.html":{"url":"classes/CsdlEntitySet.html","title":"class - CsdlEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entityType\n                            \n                            \n                                    Public\n                                    Optional\n                                includeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBinding\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, entityType: string, navigationPropertyBinding?: CsdlNavigationPropertyBinding[], includeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBinding\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBinding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n    constructor(\n        public name: string,\n        public entityType: string,\n        public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n        public includeInServiceDocument?: boolean\n    ) {\n\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityType.html":{"url":"classes/CsdlEntityType.html","title":"class - CsdlEntityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                hasStream\n                            \n                            \n                                    Public\n                                    Optional\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, key?: CsdlKey, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean, hasStream?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        CsdlKey\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        hasStream\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            hasStream\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlKey\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumMember.html":{"url":"classes/CsdlEnumMember.html","title":"class - CsdlEnumMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumType.html":{"url":"classes/CsdlEnumType.html","title":"class - CsdlEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                isFlags\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                underlyingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, members: CsdlEnumMember[], underlyingType?: string, isFlags?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        CsdlEnumMember[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlyingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isFlags\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isFlags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumMember[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            underlyingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunction.html":{"url":"classes/CsdlFunction.html","title":"class - CsdlFunction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                    Optional\n                                isComposable\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType: CsdlReturnType, isBound?: boolean, entitySetPath?: string, isComposable?: boolean, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isComposable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isComposable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunctionImport.html":{"url":"classes/CsdlFunctionImport.html","title":"class - CsdlFunctionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunctionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                functionName\n                            \n                            \n                                    Public\n                                    Optional\n                                IncludeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, functionName: string, entitySet?: string, IncludeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        IncludeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            functionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            IncludeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlInclude.html":{"url":"classes/CsdlInclude.html","title":"class - CsdlInclude","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlInclude\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                namespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlIncludeAnnotations.html":{"url":"classes/CsdlIncludeAnnotations.html","title":"class - CsdlIncludeAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlIncludeAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                    Optional\n                                targetNamespace\n                            \n                            \n                                    Public\n                                termNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(termNamespace: string, qualifier?: string, targetNamespace?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        termNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            targetNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            termNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlKey.html":{"url":"classes/CsdlKey.html","title":"class - CsdlKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                propertyRefs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyRefs: CsdlPropertyRef[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyRefs\n                                                  \n                                                        \n                                                                    CsdlPropertyRef[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyRefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlPropertyRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationProperty.html":{"url":"classes/CsdlNavigationProperty.html","title":"class - CsdlNavigationProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                containsTarget\n                            \n                            \n                                    Public\n                                    Optional\n                                onDelete\n                            \n                            \n                                    Public\n                                    Optional\n                                partner\n                            \n                            \n                                    Public\n                                    Optional\n                                referentialConstraints\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, partner?: string, containsTarget?: boolean, referentialConstraints?: CsdlReferentialConstraint[], onDelete?: CsdlOnDelete)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        partner\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        containsTarget\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        referentialConstraints\n                                                  \n                                                        \n                                                                        CsdlReferentialConstraint[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        onDelete\n                                                  \n                                                        \n                                                                        CsdlOnDelete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            containsTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlOnDelete\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            partner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            referentialConstraints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReferentialConstraint[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationPropertyBinding.html":{"url":"classes/CsdlNavigationPropertyBinding.html","title":"class - CsdlNavigationPropertyBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationPropertyBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string, target: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlNavigationPropertyBinding {\n    constructor(\n        public path: string,\n        public target: string,\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlOnDelete.html":{"url":"classes/CsdlOnDelete.html","title":"class - CsdlOnDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlOnDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlParameter.html":{"url":"classes/CsdlParameter.html","title":"class - CsdlParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlProperty.html":{"url":"classes/CsdlProperty.html","title":"class - CsdlProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, defaultValue?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlPropertyRef.html":{"url":"classes/CsdlPropertyRef.html","title":"class - CsdlPropertyRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlPropertyRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReference.html":{"url":"classes/CsdlReference.html","title":"class - CsdlReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                includeAnnotations\n                            \n                            \n                                    Public\n                                    Optional\n                                includes\n                            \n                            \n                                    Public\n                                uri\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string, includes?: CsdlInclude[], includeAnnotations?: CsdlIncludeAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        includes\n                                                  \n                                                        \n                                                                        CsdlInclude[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeAnnotations\n                                                  \n                                                        \n                                                                        CsdlIncludeAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeAnnotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlIncludeAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlInclude[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReferentialConstraint.html":{"url":"classes/CsdlReferentialConstraint.html","title":"class - CsdlReferentialConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReferentialConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, referencedProperty: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referencedProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referencedProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReturnType.html":{"url":"classes/CsdlReturnType.html","title":"class - CsdlReturnType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReturnType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSchema.html":{"url":"classes/CsdlSchema.html","title":"class - CsdlSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actions\n                            \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationsList\n                            \n                            \n                                    Public\n                                    Optional\n                                complexTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                entityContainer\n                            \n                            \n                                    Public\n                                    Optional\n                                entityTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                enumTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                functions\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                    Optional\n                                terms\n                            \n                            \n                                    Public\n                                    Optional\n                                typeDefinitions\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string, enumTypes?: CsdlEnumType[], complexTypes?: CsdlComplexType[], entityTypes?: CsdlEntityType[], functions?: CsdlFunction[], actions?: CsdlAction[], entityContainer?: CsdlEntityContainer, typeDefinitions?: CsdlTypeDefinition[], terms?: CsdlTerm[], annotationsList?: CsdlAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        enumTypes\n                                                  \n                                                        \n                                                                        CsdlEnumType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexTypes\n                                                  \n                                                        \n                                                                        CsdlComplexType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityTypes\n                                                  \n                                                        \n                                                                        CsdlEntityType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functions\n                                                  \n                                                        \n                                                                        CsdlFunction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                        CsdlAction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityContainer\n                                                  \n                                                        \n                                                                        CsdlEntityContainer\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeDefinitions\n                                                  \n                                                        \n                                                                        CsdlTypeDefinition[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        terms\n                                                  \n                                                        \n                                                                        CsdlTerm[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationsList\n                                                  \n                                                        \n                                                                        CsdlAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            complexTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlComplexType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            enumTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlFunction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            terms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTerm[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            typeDefinitions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTypeDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n    constructor(\n        public namespace: string,\n        public alias?: string,\n        public enumTypes?: CsdlEnumType[],\n        public complexTypes?: CsdlComplexType[],\n        public entityTypes?: CsdlEntityType[],\n        public functions?: CsdlFunction[],\n        public actions?: CsdlAction[],\n        public entityContainer?: CsdlEntityContainer,\n        public typeDefinitions?: CsdlTypeDefinition[],\n        public terms?: CsdlTerm[],\n        public annotationsList?: CsdlAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSingleton.html":{"url":"classes/CsdlSingleton.html","title":"class - CsdlSingleton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSingleton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBindings\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, navigationPropertyBindings?: CsdlNavigationPropertyBinding[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBindings\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBindings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n    constructor(\n        public name: string,\n        public type: string,\n        public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuralProperty.html":{"url":"classes/CsdlStructuralProperty.html","title":"class - CsdlStructuralProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuralProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuredType.html":{"url":"classes/CsdlStructuredType.html","title":"class - CsdlStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTerm.html":{"url":"classes/CsdlTerm.html","title":"class - CsdlTerm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTerm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appliesTo\n                            \n                            \n                                    Public\n                                    Optional\n                                baseTerm\n                            \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, baseTerm?: string, defaultValue?: string, appliesTo?: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseTerm\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        appliesTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appliesTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseTerm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTypeDefinition.html":{"url":"classes/CsdlTypeDefinition.html","title":"class - CsdlTypeDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTypeDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                underlayingType\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, underlayingType: string, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlayingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            underlayingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n    constructor(\n        public name: string,\n        public underlayingType: string,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        annotationList?: CsdlAnnotation[]) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnumTypeField.html":{"url":"interfaces/EnumTypeField.html","title":"interface - EnumTypeField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EnumTypeField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotations\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotations\n                                    \n                                \n                                \n                                    \n                                        annotations:         Annotation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Annotation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/metadata.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldType\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, fieldType: FieldType)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldType\n                                                  \n                                                        \n                                                                        FieldType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Types } from '../../utils/types';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport { CsdlEntityType, CsdlPropertyRef, CsdlKey, CsdlComplexType } from './csdl/csdl-structured-type';\nimport { CsdlFunction, CsdlParameter, CsdlFunctionImport, CsdlActionImport, CsdlReturnType, CsdlAction } from './csdl/csdl-function-action';\nimport { CsdlProperty, CsdlNavigationProperty, CsdlReferentialConstraint, CsdlOnDelete } from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlReference, CsdlInclude, CsdlIncludeAnnotations } from './csdl/csdl-reference';\nimport { CsdlAnnotation, CsdlTerm, CsdlAnnotations } from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\nimport { VERSION_4_0 } from '../../constants';\n\nenum FieldType {\n    ATTRIBUTE, TAG\n}\n\nclass Field {\n    constructor(public name: string, public fieldType: FieldType) { }\n}\n\nexport class ODataMetadata {\n    // TAGS\n    private static readonly TAG_EDMX = 'edmx:Edmx';\n    private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n    private static readonly TAG_REFERENCE = 'edmx:Reference';\n    private static readonly TAG_INCLUDE = 'edmx:Include';\n    private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n    private static readonly TAG_TERM = 'Term';\n    private static readonly TAG_ANNOTATIONS = 'Annotations';\n    private static readonly TAG_ANNOTATION = 'Annotation';\n    private static readonly TAG_SCHEMA = 'Schema';\n    private static readonly TAG_ENUM_TYPE = 'EnumType';\n    private static readonly TAG_MEMBER = 'Member';\n    private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n    private static readonly TAG_ENTITY_TYPE = 'EntityType';\n    private static readonly TAG_PROPERTY = 'Property';\n    private static readonly TAG_KEY = 'Key';\n    private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n    private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n    private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n    private static readonly TAG_ON_DELETE = 'OnDelete';\n    private static readonly TAG_FUNCTION = 'Function';\n    private static readonly TAG_RETURN_TYPE = 'ReturnType';\n    private static readonly TAG_PARAMETER = 'Parameter';\n    private static readonly TAG_ACTION = 'Action';\n    private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n    private static readonly TAG_ENTITY_SET = 'EntitySet';\n    private static readonly TAG_SINGLETON = 'Singleton';\n    private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n    private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n    private static readonly TAG_NAVIGATION_PROPERTY_BINDING = 'NavigationPropertyBinding';\n    private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n    // ATTRIBUTES\n    private static readonly ATTRIBUTE_VERSION = 'Version';\n    private static readonly ATTRIBUTE_URI = 'Uri';\n    private static readonly ATTRIBUTE_ALIAS = 'Alias';\n    private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n    private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n    private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n    private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n    private static readonly ATTRIBUTE_TERM = 'Term';\n    private static readonly ATTRIBUTE_NAME = 'Name';\n    private static readonly ATTRIBUTE_VALUE = 'Value';\n    private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n    private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n    private static readonly ATTRIBUTE_TYPE = 'Type';\n    private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n    private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n    private static readonly ATTRIBUTE_PRECISION = 'Precision';\n    private static readonly ATTRIBUTE_SCALE = 'Scale';\n    private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n    private static readonly ATTRIBUTE_SRID = 'SRID';\n    private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n    private static readonly ATTRIBUTE_PARTNER = 'Partner';\n    private static readonly ATTRIBUTE_PROPERTY = 'Property';\n    private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n    private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n    private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n    private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n    private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n    private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n    private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n    private static readonly ATTRIBUTE_PATH = 'Path';\n    private static readonly ATTRIBUTE_TARGET = 'Target';\n    private static readonly ATTRIBUTE_FUNCTION = 'Function';\n    private static readonly ATTRIBUTE_ACTION = 'Action';\n    private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n    private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT = 'IncludeInServiceDocument';\n    private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n    private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n    private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n    private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n    private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n    private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n    public readonly version: string;\n    public readonly references: CsdlReference[];\n    public readonly schemas: CsdlSchema[];\n\n    constructor(xml: string) {\n        try {\n            const parser: DOMParser = new DOMParser();\n            const document: Document = parser.parseFromString(xml, 'text/xml');\n\n            this.checkVersion(document);\n\n            this.version = this.getFieldValueByAttribute(\n                new Field(ODataMetadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n                document.documentElement.attributes);\n\n            this.references = this.getObjects(document.documentElement, ODataMetadata.TAG_REFERENCE, [\n                new Field(ODataMetadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_INCLUDE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n\n            const dataServices: Element = document.documentElement.getElementsByTagName(ODataMetadata.TAG_DATA_SERVICES)[0];\n            this.schemas = this.getObjects(dataServices, ODataMetadata.TAG_SCHEMA, [\n                new Field(ODataMetadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_ENUM_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_FUNCTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ACTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TERM, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n        } catch (error) {\n            throw new Error('Unable to parse metadata, ' + error);\n        }\n    }\n\n    protected checkVersion(document: Document) {\n        // check version\n        const attributes: NamedNodeMap = document.documentElement.attributes;\n        if (!attributes) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const attr: Attr | null = attributes.getNamedItem('Version');\n        if (attr === null) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const odataVersion = attr?.nodeValue;\n        if (odataVersion !== VERSION_4_0) {\n            throw new Error('OData version \"' + odataVersion + '\" is not supported');\n        }\n    }\n\n    protected getObjects(parentElement: Element, tag: string, fieldNames: Field[]): any[] {\n        let objects: any[] = [];\n\n        const children: HTMLCollection = parentElement.children;\n        for (let index = 0; index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotation.html":{"url":"classes/ODataAnnotation.html","title":"class - ODataAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annot: AnnotationConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/annotation.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annot\n                                                  \n                                                        \n                                                                        AnnotationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/annotation.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AnnotationConfig } from '../types';\n\nexport class ODataAnnotation {\n  type: string;\n  constructor(annot: AnnotationConfig) {\n    this.type = annot.type;\n    Object.assign(this, annot);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataApi.html":{"url":"classes/ODataApi.html","title":"class - ODataApi","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataApi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/api.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cache\n                            \n                            \n                                creation\n                            \n                            \n                                default\n                            \n                            \n                                    Optional\n                                errorHandler\n                            \n                            \n                                metadataUrl\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                options\n                            \n                            \n                                parsers\n                            \n                            \n                                    Optional\n                                requester\n                            \n                            \n                                schemas\n                            \n                            \n                                serviceRootUrl\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                    Public\n                                findCallableByName\n                            \n                            \n                                    Public\n                                findCallableForType\n                            \n                            \n                                    Public\n                                findCollectionByName\n                            \n                            \n                                    Public\n                                findCollectionForType\n                            \n                            \n                                    Public\n                                findEntitySetByName\n                            \n                            \n                                    Public\n                                findEntitySetForType\n                            \n                            \n                                    Public\n                                findEnumTypeByName\n                            \n                            \n                                    Public\n                                findEnumTypeForType\n                            \n                            \n                                    Public\n                                findModelByName\n                            \n                            \n                                    Public\n                                findModelForType\n                            \n                            \n                                    Public\n                                findParserForType\n                            \n                            \n                                    Private\n                                findSchemaForType\n                            \n                            \n                                    Public\n                                findStructuredTypeByName\n                            \n                            \n                                    Public\n                                findStructuredTypeForType\n                            \n                            \n                                request\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/api.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCache\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            creation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            errorHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metadataUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApiOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            requester\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         function\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schemas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceRootUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/api.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCallableByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:122\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCallableForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:92\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCollectionByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCollectionByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCollectionForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCollectionForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEntitySetByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEntitySetForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEnumTypeByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:112\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEnumTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findModelByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findModelByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findModelForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findModelForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findParserForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findParserForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:145\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            findSchemaForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findSchemaForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findStructuredTypeByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:117\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findStructuredTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:88\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            request\n                        \n                        \n                    \n                \n            \n            \n                \nrequest(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/api.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpEvent, HttpEventType } from '@angular/common/http';\nimport { NEVER, Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { ApiConfig, ApiOptions, Parser } from './types';\nimport { EDM_PARSERS } from './parsers/index';\nimport { ODataSchema, ODataEnumType, ODataCallable, ODataEntitySet, ODataStructuredType } from './schema/index';\nimport { ODataModel, ODataCollection } from './models/index';\nimport { ODataRequest, ODataResponse } from './resources/index';\nimport { ODataCache, ODataInMemoryCache } from './cache/index';\nimport { ODataApiOptions } from './options';\nimport { DEFAULT_VERSION } from './constants';\n\nexport class ODataApi {\n  requester?: (request: ODataRequest) => Observable;\n  serviceRootUrl: string;\n  metadataUrl: string;\n  name?: string;\n  version: string;\n  default: boolean;\n  creation: Date;\n  // Options\n  options: ODataApiOptions;\n  // Cache\n  cache!: ODataCache;\n  // Error Handler\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  // Base Parsers\n  parsers: { [type: string]: Parser };\n  // Schemas\n  schemas: ODataSchema[];\n\n  constructor(config: ApiConfig) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.name = config.name;\n    this.version = config.version || DEFAULT_VERSION;\n    this.default = config.default || false;\n    this.creation = config.creation || new Date();\n    this.options = new ODataApiOptions(Object.assign({version: this.version}, config.options || {}));\n\n    this.cache = (config.cache as ODataCache) || new ODataInMemoryCache();\n    this.errorHandler = config.errorHandler;\n\n    this.parsers = config.parsers || EDM_PARSERS;\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema, this));\n  }\n\n  configure(settings: { requester?: (request: ODataRequest) => Observable } = {}) {\n    this.requester = settings.requester;\n    this.schemas.forEach(schema => {\n      schema.configure({ findParserForType: (type: string) => this.findParserForType(type) });\n    });\n  }\n\n  request(req: ODataRequest): Observable {\n    let res$ = this.requester !== undefined ? this.requester(req) : NEVER;\n    res$ = res$.pipe(\n      map((res: HttpEvent) => res.type === HttpEventType.Response ? ODataResponse.fromHttpResponse(req, res) : res\n    ));\n\n    if (this.errorHandler !== undefined)\n      res$ = res$.pipe(catchError(this.errorHandler));\n\n    return (this.cache.isCacheable(req)) ?\n      this.cache.handleRequest(req, res$) :\n      res$;\n  }\n\n  //#region Find Schema for Type\n  private findSchemaForType(type: string) {\n    const schemas = this.schemas.filter(s => s.isNamespaceOf(type));\n    if (schemas.length > 1)\n      return schemas.sort((s1, s2) => s1.namespace.length - s2.namespace.length).pop();\n    if (schemas.length === 1) return schemas[0];\n    return undefined;\n  }\n\n  public findEnumTypeForType(type: string) {\n    return this.findSchemaForType(type)?.findEnumTypeForType(type);\n  }\n\n  public findStructuredTypeForType(type: string) {\n    return this.findSchemaForType(type)?.findStructuredTypeForType(type);\n  }\n\n  public findCallableForType(type: string) {\n    return this.findSchemaForType(type)?.findCallableForType(type);\n  }\n\n  public findEntitySetForType(type: string) {\n    return this.findSchemaForType(type)?.findEntitySetForType(type);\n  }\n\n  //#region Model and Collection for type\n  public findModelForType(type: string) {\n    return this.findStructuredTypeForType(type)?.model;\n  }\n\n  public findCollectionForType(type: string) {\n    return this.findStructuredTypeForType(type)?.collection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public findEnumTypeByName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name);\n  }\n\n  public findStructuredTypeByName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name);\n  }\n\n  public findCallableByName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.callables], []>[])\n      .find(e => e.name === name);\n  }\n\n  public findEntitySetByName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entitySets], [])\n      .find(e => e.name === name);\n  }\n\n  //#region Model and Collection for type\n  public findModelByName(name: string) {\n    let schema = this.findStructuredTypeByName(name);\n    return schema !== undefined ? schema.model as typeof ODataModel : null;\n  }\n\n  public findCollectionByName(name: string) {\n    let schema = this.findStructuredTypeByName(name);\n    return schema !== undefined ? schema.collection as typeof ODataCollection : null;\n  }\n  //#endregion\n  //#endregion\n\n  public findParserForType(type: string) {\n    if (type in this.parsers) {\n      return this.parsers[type] as Parser;\n    }\n    // Not edms here\n    if (!type.startsWith(\"Edm.\")) {\n      let value = this.findEnumTypeForType(type) || this.findStructuredTypeForType(type) || this.findCallableForType(type);\n      return value?.parser as Parser;\n    }\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataApiOptions.html":{"url":"classes/ODataApiOptions.html","title":"class - ODataApiOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataApiOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ApiOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fetchPolicy\n                            \n                            \n                                headers\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ApiOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/options.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ApiOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FetchPolicy\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ieee754Compatible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/options.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/options.ts:28\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DEFAULT_FETCH_POLICY, DEFAULT_VERSION } from './constants';\nimport { ODataHelper } from './helpers';\nimport { ApiOptions, FetchPolicy, ODataMetadataType, ODataVersion, OptionsHelper } from './types';\n\nexport class ODataApiOptions implements ApiOptions, OptionsHelper {\n  version: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  fetchPolicy: FetchPolicy;\n  streaming?: boolean;\n  // Http\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n\n  constructor(config: ApiOptions) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.metadata = config.metadata;\n    this.stringAsEnum = config.stringAsEnum;\n    this.ieee754Compatible = config.ieee754Compatible;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.withCredentials = config.withCredentials;\n    this.fetchPolicy = config.fetchPolicy || DEFAULT_FETCH_POLICY;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBatchRequest.html":{"url":"classes/ODataBatchRequest.html","title":"class - ODataBatchRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBatchRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/batch.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                request\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onError\n                            \n                            \n                                onLoad\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: ODataRequest)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/batch.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                        ODataRequest\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataRequest\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:50\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoad\n                        \n                        \n                    \n                \n            \n            \n                \nonLoad(content: string[], status: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/batch.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { ODataClient } from '../../client';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataResource } from '../resource';\nimport { HttpHeaders, HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { BOUNDARY_PREFIX_SUFFIX, APPLICATION_JSON, HTTP11, CONTENT_TYPE, NEWLINE, BATCH_PREFIX, $BATCH, MULTIPART_MIXED_BOUNDARY, VERSION_4_0, MULTIPART_MIXED, ODATA_VERSION, ACCEPT, CONTENT_TRANSFER_ENCODING, APPLICATION_HTTP, CONTENT_ID, BINARY, CHANGESET_PREFIX, NEWLINE_REGEXP } from '../../constants';\nimport { ODataRequest } from '../request';\nimport { ODataApi } from '../../api';\nimport { ODataResponse } from '../responses';\n\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n\n// From https://github.com/adamhalasz/uniqid\nvar glast: number;\nfunction now() {\n  let time = Date.now();\n  let last = glast || time;\n  return glast = time > last ? time : last + 1;\n}\nfunction uniqid(prefix?: string, suffix?: string): string { return (prefix ? prefix : '') + now().toString(36) + (suffix ? suffix : ''); }\n\nfunction getHeaderValue(header: string): string {\n  let res: string = header.split(';')[0].trim();\n  res = res.split(':')[1].trim();\n  return res;\n}\n\nfunction getBoundaryDelimiter(contentType: string): string {\n  const contentTypeParts: string[] = contentType.split(';');\n  if (contentTypeParts.length === 2) {\n    const boundary: string = contentType.split(';')[1].trim();\n    const boundaryDelimiter: string = BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n    return boundaryDelimiter;\n  } else {\n    return '';\n  }\n}\n\nfunction getBoundaryEnd(boundaryDelimiter: string): string {\n  if (!boundaryDelimiter.length) {\n    return '';\n  }\n  const boundaryEnd: string = boundaryDelimiter + BOUNDARY_PREFIX_SUFFIX;\n  return boundaryEnd;\n}\n\nexport class ODataBatchRequest extends Subject> {\n  constructor(public request: ODataRequest)\n   {\n    super();\n  }\n\n  toString() {\n    //TODO: Relative or Absolute url ?\n    let res = [`${this.request.method} ${this.request.pathWithParams} ${HTTP11}`];\n    if (this.request.method === 'POST' || this.request.method === 'PATCH' || this.request.method === 'PUT') {\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_JSON}`);\n    }\n\n    if (this.request.headers instanceof HttpHeaders) {\n      let headers = this.request.headers;\n      res = [\n        ...res,\n        ...headers.keys().map(key => `${key}: ${(headers.getAll(key) || []).join(',')}`)\n      ];\n    }\n\n    return res.join(NEWLINE);\n  }\n\n  onLoad(content: string[], status: { code: number, text: string }) {\n    let headers: HttpHeaders = new HttpHeaders();\n    var index = 1;\n    for (; index = 200 && status.code ({\n        body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      });\n      this.next(ODataResponse.fromHttpResponse(this.request, res));\n      this.complete();\n    } else {\n      // An unsuccessful request is delivered on the error channel.\n      this.error(new HttpErrorResponse({\n        // The error in this case is the response body (error from the server).\n        error: body,\n        headers,\n        status: status.code,\n        statusText: status.text,\n        url: this.request.urlWithParams\n      }));\n    }\n  }\n\n  onError(content: string[], status: { code: number, text: string }) {\n    const res = new HttpErrorResponse({\n      error: content.join(NEWLINE),\n      status: status.code || 0,\n      statusText: status.text || 'Unknown Error',\n      url: this.request.urlWithParams || undefined,\n    });\n    this.error(res);\n  }\n}\n\nexport class ODataBatchResource extends ODataResource {\n  // VARIABLES\n  private requests: ODataBatchRequest[];\n  private _api: ODataApi;\n  batchBoundary: string;\n\n  constructor(client: ODataClient, api?: ODataApi, segments?: ODataPathSegments) {\n    super(client, segments);\n    this._api = api || client.apiFor(this);\n    this.batchBoundary = uniqid(BATCH_PREFIX);\n    this.requests = [];\n  }\n\n  clone() {\n    //TODO: Clone\n    return new ODataBatchResource(this.client, this._api, this.pathSegments.clone());\n  }\n\n  //#region Factory\n  static factory(client: ODataClient, api?: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.segment(PathSegmentNames.batch, $BATCH);\n    return new ODataBatchResource(client, api, segments);\n  }\n  //#endregion\n\n  //#region Api Config\n  get api(): ODataApi {\n    return this._api;\n  }\n  ////#endregion\n\n  post(func: (batch: ODataBatchResource) => void) {\n    const current = this.api.request;\n    this.api.request = (req: ODataRequest): Observable => {\n      if (req.api !== this.api)\n        throw new Error(\"Batch Request are for the same api.\");\n      if (req.observe === 'events')\n        throw new Error(\"Batch Request does not allows observe == 'events'.\");\n      this.requests.push(new ODataBatchRequest(req));\n      return this.requests[this.requests.length - 1];\n    }\n    try {\n      func(this);\n    } finally {\n      this.api.request = current;\n    }\n\n    return this.client.post(this, this.body(), {\n      observe: 'response',\n      responseType: 'text',\n      headers: {\n        [ODATA_VERSION]: VERSION_4_0,\n        [CONTENT_TYPE]: MULTIPART_MIXED_BOUNDARY + this.batchBoundary,\n        [ACCEPT]: MULTIPART_MIXED\n      }\n    }).pipe(\n      map((resp: ODataResponse) => {\n        this.handleResponse(resp);\n        return resp;\n      })\n    );\n  }\n\n  body(): string {\n    let res = [];\n    let changesetBoundary: string | null = null;\n    let changesetId = 1;\n\n    for (const batch of this.requests) {\n      // if method is GET and there is a changeset boundary open then close it\n      if (batch.request.method === 'GET' && changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (changesetBoundary === null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}`);\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (batch.request.method !== 'GET') {\n        if (changesetBoundary === null) {\n          changesetBoundary = uniqid(CHANGESET_PREFIX);\n          res.push(`${CONTENT_TYPE}: ${MULTIPART_MIXED_BOUNDARY}${changesetBoundary}`);\n          res.push(NEWLINE);\n        }\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}`);\n      }\n\n      res.push(`${CONTENT_TYPE}: ${APPLICATION_HTTP}`);\n      res.push(`${CONTENT_TRANSFER_ENCODING}: ${BINARY}`);\n\n      if (batch.request.method !== 'GET') {\n        res.push(`${CONTENT_ID}: ${changesetId++}`);\n      }\n\n      res.push(NEWLINE);\n      res.push(`${batch}`);\n\n      if (batch.request.method === 'GET' || batch.request.method === 'DELETE') {\n        res.push(NEWLINE);\n      } else {\n        res.push(JSON.stringify(batch.request.body));\n      }\n    }\n\n    if (res.length) {\n      if (changesetBoundary !== null) {\n        res.push(`${BOUNDARY_PREFIX_SUFFIX}${changesetBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n        changesetBoundary = null;\n      }\n      res.push(`${BOUNDARY_PREFIX_SUFFIX}${this.batchBoundary}${BOUNDARY_PREFIX_SUFFIX}`);\n    }\n    return res.join(NEWLINE);\n  }\n\n  handleResponse(response: ODataResponse) {\n    let chunks: string[][] = [];\n    const contentType: string = response.headers.get(CONTENT_TYPE) || \"\";\n    const batchBoundary: string = getBoundaryDelimiter(contentType);\n    const endLine: string = getBoundaryEnd(batchBoundary);\n\n    const lines: string[] = response.body.split(NEWLINE_REGEXP);\n\n    let changesetResponses: string[][] | null = null;\n    let contentId: number | null = null;\n    let changesetBoundary: string | null = null;\n    let changesetEndLine: string | null = null;\n    let startIndex: number | null = null;\n    for (let index = 0; index  {\n      const req = this.requests[index];\n      const statusParts = chunk[0].split(' ');\n      req.onLoad(chunk.slice(1), {\n        code: Number(statusParts[1]),\n        text: statusParts[2]\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCache.html":{"url":"classes/ODataCache.html","title":"class - ODataCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Cache\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/cache.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/cache/cache.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/cache.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor(init?: {timeout?: number}) {\n    this.timeout = init?.timeout || DEFAULT_TIMEOUT;\n    this.entries = new Map>();\n  }\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(payload: T, timeout?: number) {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    };\n  }\n\n  put(key: string, payload: T, timeout?: number) {\n    const entry = {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    } as ODataCacheEntry;\n    this.entries.set(key, entry);\n    this.remove();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry) ? entry.payload : undefined;\n  }\n\n  private remove() {\n    // remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (this.isExpired(entry)) {\n        this.entries.delete(key);\n      }\n    });\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ) {\n    return req.observe === 'response' && req.method === 'GET';\n  }\n\n  handleRequest(req: ODataRequest, res$: Observable>): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError(\"No Cached\");\n      }\n    }\n    if (policy === 'cache-first' || policy === 'cache-and-network' || policy === 'network-only') {\n      res$ = res$.pipe(tap((res: ODataResponse) => {\n        if (res.options.cacheability !== 'no-store')\n          this.putResponse(req, res);\n      }));\n    }\n    return (cached !== undefined && policy !== 'network-only') ?\n      (policy === 'cache-and-network' ? res$.pipe(startWith(cached)) : of(cached)) :\n      res$;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ODataCacheEntry.html":{"url":"interfaces/ODataCacheEntry.html","title":"interface - ODataCacheEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ODataCacheEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/cache.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lastRead\n                                \n                                \n                                        payload\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lastRead\n                                    \n                                \n                                \n                                    \n                                        lastRead:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, throwError } from 'rxjs';\nimport { startWith, tap } from 'rxjs/operators';\nimport { DEFAULT_TIMEOUT } from '../constants';\nimport { Cache } from '../types';\nimport { ODataRequest, ODataResponse } from '../resources';\n\nexport interface ODataCacheEntry {\n  payload: T;\n  lastRead: number;\n  timeout?: number;\n}\n\nexport abstract class ODataCache implements Cache {\n  timeout: number;\n  entries: Map>;\n  constructor(init?: {timeout?: number}) {\n    this.timeout = init?.timeout || DEFAULT_TIMEOUT;\n    this.entries = new Map>();\n  }\n  abstract getResponse(req: ODataRequest): ODataResponse | undefined;\n  abstract putResponse(req: ODataRequest, res: ODataResponse): void;\n\n  buildEntry(payload: T, timeout?: number) {\n    return {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    };\n  }\n\n  put(key: string, payload: T, timeout?: number) {\n    const entry = {\n      payload,\n      lastRead: Date.now(),\n      timeout: timeout\n    } as ODataCacheEntry;\n    this.entries.set(key, entry);\n    this.remove();\n  }\n\n  get(key: string) {\n    const entry = this.entries.get(key);\n    return entry !== undefined && !this.isExpired(entry) ? entry.payload : undefined;\n  }\n\n  private remove() {\n    // remove expired cache entries\n    this.entries.forEach((entry, key) => {\n      if (this.isExpired(entry)) {\n        this.entries.delete(key);\n      }\n    });\n  }\n\n  isExpired(entry: ODataCacheEntry) {\n    return entry.lastRead ) {\n    return req.observe === 'response' && req.method === 'GET';\n  }\n\n  handleRequest(req: ODataRequest, res$: Observable>): Observable> {\n    const policy = req.fetchPolicy;\n    const cached = this.getResponse(req);\n    if (policy === 'no-cache') {\n      return res$;\n    }\n    if (policy === 'cache-only') {\n      if (cached) {\n        return of(cached);\n      } else {\n        return throwError(\"No Cached\");\n      }\n    }\n    if (policy === 'cache-first' || policy === 'cache-and-network' || policy === 'network-only') {\n      res$ = res$.pipe(tap((res: ODataResponse) => {\n        if (res.options.cacheability !== 'no-store')\n          this.putResponse(req, res);\n      }));\n    }\n    return (cached !== undefined && policy !== 'network-only') ?\n      (policy === 'cache-and-network' ? res$.pipe(startWith(cached)) : of(cached)) :\n      res$;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallable.html":{"url":"classes/ODataCallable.html","title":"class - ODataCallable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/callable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bound\n                            \n                            \n                                    Optional\n                                composable\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                path\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                isTypeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            bound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            composable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallableParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/callable.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/callable.ts:29\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Parser, CallableConfig } from '../types';\nimport { ODataSchema } from './schema';\nimport { ODataCallableParser } from '../parsers';\n\nexport class ODataCallable {\n  schema: ODataSchema;\n  name: string;\n  path: string;\n  bound?: boolean;\n  composable?: boolean;\n  parser: ODataCallableParser;\n\n  constructor(config: CallableConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.path = config.path || (config.bound ? `${schema.namespace}.${config.name}` : config.name);\n    this.bound = config.bound;\n    this.composable = config.composable;\n    this.parser = new ODataCallableParser(config, schema.namespace);\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser.configure(settings);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCallableParser.html":{"url":"classes/ODataCallableParser.html","title":"class - ODataCallableParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCallableParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                parameters\n                            \n                            \n                                parser\n                            \n                            \n                                    Optional\n                                return\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: CallableConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        CallableConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataParameterParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            return\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:34\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     R\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(params: any, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parser, Options, Parameter, CallableConfig, StructuredTypeFieldOptions } from '../types';\n\nconst NONE_PARSER = {\n  serialize(value: any, options: Options) {return value}\n} as Parser;\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  serialize(value: Type, options: StructuredTypeFieldOptions): any {\n    return Array.isArray(value) ?\n      value.map(v => this.parser.serialize(v, options)) :\n      this.parser.serialize(value, options);\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  type: string;\n  return?: string;\n  parser: Parser;\n  parameters: ODataParameterParser[];\n\n  constructor(config: CallableConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || [])\n      .map(([name, p]) => new ODataParameterParser(name, p as Parameter));\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): R {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options: StructuredTypeFieldOptions): any {\n    return Object.assign({}, this.parameters\n      .filter(p => p.name in params && params[p.name] !== undefined)\n      .reduce((acc, p) => Object.assign(acc, { [p.name]: p.serialize(params[p.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.return)\n      this.parser = settings.findParserForType(this.return) || NONE_PARSER;\n    this.parameters.forEach(p => p.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCollection.html":{"url":"classes/ODataCollection.html","title":"class - ODataCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/collection.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Iterable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _meta\n                            \n                            \n                                    Protected\n                                _models\n                            \n                            \n                                    Protected\n                                _resource\n                            \n                            \n                                    Private\n                                _state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _action\n                            \n                            \n                                    Protected\n                                _function\n                            \n                            \n                                add\n                            \n                            \n                                all\n                            \n                            \n                                attach\n                            \n                            \n                                clone\n                            \n                            \n                                count\n                            \n                            \n                                fetch\n                            \n                            \n                                next\n                            \n                            \n                                    Protected\n                                parse\n                            \n                            \n                                    Protected\n                                populate\n                            \n                            \n                                remove\n                            \n                            \n                                target\n                            \n                            \n                                toEntities\n                            \n                            \n                                    Public\n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    models\n                                \n                                \n                                    state\n                                \n                                \n                                    _config\n                                \n                                \n                                    _segment\n                                \n                                \n                                    _query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(values?: any[], options: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/collection.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntitiesMeta | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     M[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _action\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _action(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:227\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _function\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _function(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:220\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \nattach(resource: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataCollection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:197\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext(options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(values: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            populate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populate(values: any[], annots?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    annots\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            target\n                        \n                        \n                    \n                \n            \n            \n                \ntarget()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEntities\n                        \n                        \n                    \n                \n            \n            \n                \ntoEntities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { next(): any; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        models\n                    \n                \n\n                \n                    \n                        getmodels()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:22\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:35\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _config\n                    \n                \n\n                \n                    \n                        get_config()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:201\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _segment\n                    \n                \n\n                \n                    \n                        get_segment()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:207\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _query\n                    \n                \n\n                \n                    \n                        get_query()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:213\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { map } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\n\nimport {\n  ODataResource,\n  ODataEntitySetResource,\n  ODataEntityResource,\n  ODataNavigationPropertyResource,\n  ODataFunctionResource,\n  ODataEntitiesMeta,\n  HttpOptions,\n  HttpEntitiesOptions\n} from '../resources/index';\n\nimport { ODataModel } from './model';\n\nexport class ODataCollection> implements Iterable {\n  protected _resource: ODataResource | null;\n  protected _meta: ODataEntitiesMeta | null;\n\n  protected _models: M[];\n  get models() {\n    return [...this._models];\n  }\n\n  private _state: {\n    records?: number,\n    skip?: number,\n    top?: number,\n    skiptoken?: string,\n    size?: number,\n    page?: number,\n    pages?: number\n  } = {};\n  get state() {\n    return Object.assign({}, this._state);\n  }\n\n  constructor(values?: any[], options: { resource?: ODataResource, meta?: ODataEntitiesMeta } = {}) {\n    this._resource = null;\n    this._meta = null;\n    this._models = [];\n    if (options.resource instanceof ODataResource)\n      this.attach(options.resource);\n    this.populate((values || []), options.meta);\n  }\n\n  attach(resource: ODataResource) {\n    if (this._resource && this._resource.type() !== resource.type())\n      throw new Error(`Can't reattach ${resource.type()} with ${this._resource.type()}`);\n    this._resource = resource;\n    return this;\n  }\n\n  target() {\n    return this._resource !== null ? this._resource.clone() as ODataResource : null;\n  }\n\n  protected parse(values: any[]): M[] {\n    let resource = this._resource ? this._resource.clone() : null;\n    if (resource instanceof ODataEntitySetResource)\n      resource = resource.entity();\n    return (values as T[]).map(value => {\n      if (resource instanceof ODataEntityResource || resource instanceof ODataNavigationPropertyResource)\n        resource.segment.key(value);\n      return (resource ? resource.clone().asModel(value, this._meta !== null ? this._meta.entity(value) : undefined) : value) as M;\n    });\n  }\n\n  protected populate(values: any[], annots?: ODataEntitiesMeta): this {\n    this._meta = annots || null;\n\n    if (annots instanceof ODataEntitiesMeta) {\n      this._state = {};\n      if (annots.top)\n        this._state.top = annots.top;\n      if (annots.skip)\n        this._state.size = this._state.skip = annots.skip;\n      if (annots.skiptoken)\n        this._state.skiptoken = annots.skiptoken;\n      if (annots.count) {\n        this._state.records = annots.count;\n      if (this._state.records && this._state.size)\n        this._state.pages = Math.ceil(this._state.records / this._state.size);\n      if (this._state.top && this._state.size)\n        this._state.page = (this._state.top / this._state.size) + 1;\n      }\n    } else {\n      this._state = {\n        records: values.length, size: values.length,\n        page: 1, pages: 1\n      };\n    }\n\n    this._models = this.parse(values);\n    return this;\n  }\n\n  toEntities() {\n    return this._models.map(model => model.toEntity());\n  }\n\n  clone() {\n    let options: {resource?: ODataResource, meta?: ODataEntitiesMeta} = {};\n    if (this._resource)\n      options.resource = this._resource.clone();\n    if (this._meta)\n      options.meta = this._meta.clone();\n    let Ctor = this.constructor;\n    return new Ctor(this.models, options);\n  }\n\n  // Iterable\n  public [Symbol.iterator]() {\n    let pointer = 0;\n    let models = this._models;\n    return {\n      next(): IteratorResult {\n        return {\n          done: pointer === models.length,\n          value: models[pointer++]\n        };\n      }\n    }\n  }\n\n  // Requests\n  fetch(options?: HttpOptions & {withCount?: boolean}): Observable {\n    if (this._resource instanceof ODataEntitySetResource) {\n      return this._resource.get(options).pipe(\n      map(({entities, meta}) => this.populate(entities || [], meta)));\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entities'}, options || {})).pipe(\n      map(({entities, meta}) => this.populate(entities || [], meta)));\n    } else if (this._resource instanceof ODataFunctionResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entities'}, options || {})).pipe(\n      map(({entities, meta}) => this.populate(entities || [], meta)));\n    }\n    throw new Error(\"Not Yet!\");\n  }\n\n  next(options?: HttpOptions & {withCount?: boolean}) {\n    if (this._state.skip) {\n      this._query.skip(this._state.skip);\n      return this.fetch(options);\n    }\n    else if (this._state.skiptoken) {\n      this._query.skiptoken(this._state.skiptoken);\n      return this.fetch(options);\n    }\n    return EMPTY;\n  }\n\n  all(): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = this._resource.all();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this._resource.all();\n    } else {\n      throw new Error(\"Not Yet!\");\n    }\n    return obs$.pipe(\n      map(entities => this.populate(entities)));\n  }\n\n  // Mutate\n  add(model: M): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = model.save();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      let ref = this._resource.reference();\n      obs$ = ref.add(model.target() as ODataEntityResource);\n    } else {\n      throw new Error(`Can't add`);\n    }\n    return obs$.pipe(map(() => this));\n  }\n\n  remove(model: M) {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = model.destroy();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      let ref = this._resource.reference();\n      obs$ = ref.remove(model.target() as ODataEntityResource);\n    } else {\n      throw new Error(`Can't remove`);\n    }\n    return obs$.pipe(map(() => this));\n  }\n\n  // Count\n  count() {\n    return (this._resource as ODataEntitySetResource).count().get();\n  }\n\n  get _config() {\n    if (!this._resource)\n      throw new Error(`Can't config without ODataResource`);\n    return (this._resource as ODataEntitySetResource).schema;\n  }\n\n  get _segment() {\n    if (!this._resource)\n      throw new Error(`Can't call without ODataResource`);\n    return (this._resource as ODataEntitySetResource).segment;\n  }\n\n  get _query() {\n    if (!this._resource)\n      throw new Error(`Can't query without ODataResource`);\n    return (this._resource as ODataEntitySetResource).query;\n  }\n\n  // Function\n  protected _function(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    return (this._resource as ODataEntitySetResource).function(path);\n  }\n\n  // Action\n  protected _action(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    return (this._resource as ODataEntitySetResource).action(path);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCountResource.html":{"url":"classes/ODataCountResource.html","title":"class - ODataCountResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCountResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/count.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                get\n                            \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:30\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataCountResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(client: ODataClient, segments: ODataPathSegments, options: ODataQueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                ODataClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                                ODataPathSegments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataCountResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/count.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:84\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:102\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:226\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:218\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:203\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:210\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:104\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:45\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions, QueryOptionNames } from '../query-options';\nimport { ODataResource } from '../resource';\nimport { ODataClient } from '../../client';\nimport { HttpOptions } from './options';\nimport { $COUNT } from '../../constants';\n\nexport class ODataCountResource extends ODataResource {\n  //#region Factory\n  static factory(client: ODataClient, segments: ODataPathSegments, options: ODataQueryOptions) {\n    segments.segment(PathSegmentNames.count, $COUNT).setType('Edm.Int32');\n    options.keep(QueryOptionNames.filter, QueryOptionNames.search);\n    return new ODataCountResource(client, segments, options);\n  }\n\n  clone() {\n    return new ODataCountResource(this.client, this.pathSegments.clone(), this.queryOptions.clone());\n  }\n  //#endregion\n\n  //#region Requests\n  get(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({responseType: 'value'}, options || {})\n    );\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitiesMeta.html":{"url":"classes/ODataEntitiesMeta.html","title":"class - ODataEntitiesMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitiesMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                entity\n                            \n                            \n                                function\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    readLink\n                                \n                                \n                                    count\n                                \n                                \n                                    nextLink\n                                \n                                \n                                    deltaLink\n                                \n                                \n                                    top\n                                \n                                \n                                    skip\n                                \n                                \n                                    skiptoken\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:177\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitiesMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityMeta\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:146\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        count\n                    \n                \n\n                \n                    \n                        getcount()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:150\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextLink\n                    \n                \n\n                \n                    \n                        getnextLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:154\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deltaLink\n                    \n                \n\n                \n                    \n                        getdeltaLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:158\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n\n                \n                    \n                        gettop()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:162\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:167\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skiptoken\n                    \n                \n\n                \n                    \n                        getskiptoken()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:172\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:178\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag(): string {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink(): string {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink(): string {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink(): string {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType(): string {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count(): number {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink(): string {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink(): string {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityContainer.html":{"url":"classes/ODataEntityContainer.html","title":"class - ODataEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                entitySets\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityContainerConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityContainerConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-container.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { EntityContainerConfig } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEntityContainer {\n  schema: ODataSchema;\n  name: string;\n  annotations: ODataAnnotation[];\n  entitySets: ODataEntitySet[];\n  constructor(config: EntityContainerConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.annotations = (config.annotations || []);\n    this.entitySets = (config.entitySets || []).map(config => new ODataEntitySet(config, schema));\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityFieldParser.html":{"url":"classes/ODataEntityFieldParser.html","title":"class - ODataEntityFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            StructuredTypeField\n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                collection\n                            \n                            \n                                    Optional\n                                default\n                            \n                            \n                                    Optional\n                                field\n                            \n                            \n                                key\n                            \n                            \n                                    Optional\n                                maxLength\n                            \n                            \n                                name\n                            \n                            \n                                navigation\n                            \n                            \n                                nullable\n                            \n                            \n                                    Private\n                                parser\n                            \n                            \n                                    Optional\n                                precision\n                            \n                            \n                                    Optional\n                                ref\n                            \n                            \n                                    Optional\n                                scale\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                annotation\n                            \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                isComplexType\n                            \n                            \n                                isNavigation\n                            \n                            \n                                    Private\n                                parse\n                            \n                            \n                                resolve\n                            \n                            \n                                serialize\n                            \n                            \n                                    Private\n                                toJson\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: StructuredTypeField)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/entity.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        StructuredTypeField\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Annotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ref\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            annotation\n                        \n                        \n                    \n                \n            \n            \n                \nannotation(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplexType\n                        \n                        \n                    \n                \n            \n            \n                \nisComplexType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNavigation\n                        \n                        \n                    \n                \n            \n            \n                \nisNavigation()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(parser: ODataEntityParser, value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                ODataEntityParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            toJson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toJson(parser: ODataEntityParser, value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                ODataEntityParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from '../utils';\nimport { Parser, StructuredTypeField, JsonSchemaExpandOptions, JsonSchemaConfig, StructuredTypeConfig, Annotation, OptionsHelper } from '../types';\n\nconst NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value\n} as Parser;\n\nexport class ODataEntityFieldParser implements StructuredTypeField, Parser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  key: boolean;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  field?: string;\n  precision?: number;\n  scale?: number;\n  ref?: string;\n  annotations: Annotation[];\n\n  constructor(name: string, field: StructuredTypeField) {\n    this.name = name;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = field.annotations || [];\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.key = field.key !== undefined ? field.key : false;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.field = field.field;\n    this.precision = field.precision;\n    this.scale = field.scale;\n    this.ref = field.ref;\n  }\n  annotation(type: string) {\n    return this.annotations.find(annot => annot.type === type);\n  }\n\n  resolve(value: any) {\n    return (this.ref || this.name).split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  private parse(parser: ODataEntityParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options: OptionsHelper): Type {\n    const parser = this.parser;\n    if (parser instanceof ODataEntityParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v, options)) :\n        this.parse(parser, value, options);\n    }\n    return parser.deserialize(value, Object.assign({field: this}, options));\n  }\n\n  // Serialize\n  private toJson(parser: ODataEntityParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: Type, options: OptionsHelper): any {\n    const parser = this.parser;\n    if (parser instanceof ODataEntityParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.toJson(parser, v, options)) :\n        this.toJson(parser, value, options);\n    }\n    return parser.serialize(value, Object.assign({field: this}, options));\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property: any = this.parser instanceof ODataEntityParser ? this.parser.toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\",\n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplexType();\n  }\n}\n\nexport class ODataEntityParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  base?: string;\n  parent?: ODataEntityParser;\n  children: ODataEntityParser[];\n  fields: ODataEntityFieldParser[];\n\n  constructor(config: StructuredTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.children = [];\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEntityFieldParser(name, f as StructuredTypeField));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options: OptionsHelper): Type {\n    if (this.parent)\n      value = this.parent.deserialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && value[f.name] !== undefined && value[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.deserialize(value[f.name], options) }), {})\n    );\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): any {\n    if (this.parent)\n      value = this.parent.serialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && (value as any)[f.name] !== undefined && (value as any)[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.serialize((value as any)[f.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.base) {\n      const parent = settings.findParserForType(this.base) as ODataEntityParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties: any = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({ [f.name]: f.toJsonSchema((config as any)[f.name]) }))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string | null {\n    const field = this.fields.find(f => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : null;\n  }\n\n  keys() {\n    const keys: ODataEntityFieldParser[] = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {}) as any;\n    const values = Object.values(key);\n    if (values.length === 1) {\n      // Single primitive key value\n      key = values[0];\n    } else if (values.some(v => v === undefined)) {\n      // Compose key, needs all values\n      key = null;\n    }\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplexType() {\n    return this.keys().length === 0;\n  }\n\n  find(predicate: (p: ODataEntityParser) => boolean): ODataEntityParser | undefined {\n    if (predicate(this))\n      return this;\n    return this.children.find(c => c.find(predicate));\n  }\n\n  findParser(predicate: (p: ODataEntityParser) => boolean): Parser {\n    return this.find(predicate) || NONE_PARSER;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityMeta.html":{"url":"classes/ODataEntityMeta.html","title":"class - ODataEntityMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attributes\n                            \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                function\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    id\n                                \n                                \n                                    etag\n                                \n                                \n                                    mediaEtag\n                                \n                                \n                                    metadataEtag\n                                \n                                \n                                    readLink\n                                \n                                \n                                    editLink\n                                \n                                \n                                    mediaReadLink\n                                \n                                \n                                    mediaEditLink\n                                \n                                \n                                    mediaContentType\n                                \n                                \n                                    functions\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attributes\n                        \n                        \n                    \n                \n            \n            \n                \nattributes(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntityMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:84\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        etag\n                    \n                \n\n                \n                    \n                        getetag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:88\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEtag\n                    \n                \n\n                \n                    \n                        getmediaEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:92\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        metadataEtag\n                    \n                \n\n                \n                    \n                        getmetadataEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:96\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:100\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        editLink\n                    \n                \n\n                \n                    \n                        geteditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:104\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaReadLink\n                    \n                \n\n                \n                    \n                        getmediaReadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:108\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEditLink\n                    \n                \n\n                \n                    \n                        getmediaEditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:112\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaContentType\n                    \n                \n\n                \n                    \n                        getmediaContentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:116\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:121\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag(): string {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink(): string {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink(): string {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink(): string {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType(): string {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count(): number {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink(): string {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink(): string {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityParser.html":{"url":"classes/ODataEntityParser.html","title":"class - ODataEntityParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/entity.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                    Optional\n                                base\n                            \n                            \n                                children\n                            \n                            \n                                fields\n                            \n                            \n                                name\n                            \n                            \n                                namespace\n                            \n                            \n                                    Optional\n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                deserialize\n                            \n                            \n                                find\n                            \n                            \n                                findParser\n                            \n                            \n                                isComplexType\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                keys\n                            \n                            \n                                resolveKey\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                typeFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/entity.ts:124\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            children\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:123\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:122\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:163\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(predicate: (p: ODataEntityParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityParser | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findParser\n                        \n                        \n                    \n                \n            \n            \n                \nfindParser(predicate: (p: ODataEntityParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    predicate\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Parser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplexType\n                        \n                        \n                    \n                \n            \n            \n                \nisComplexType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveKey\n                        \n                        \n                    \n                \n            \n            \n                \nresolveKey(attrs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:154\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(config: JsonSchemaConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            JsonSchemaConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { title: string; type: string; description: string; properties: any; required: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeFor\n                        \n                        \n                    \n                \n            \n            \n                \ntypeFor(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/entity.ts:187\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types } from '../utils';\nimport { Parser, StructuredTypeField, JsonSchemaExpandOptions, JsonSchemaConfig, StructuredTypeConfig, Annotation, OptionsHelper } from '../types';\n\nconst NONE_PARSER = {\n  deserialize: (value: any, options: OptionsHelper) => value,\n  serialize: (value: any, options: OptionsHelper) => value\n} as Parser;\n\nexport class ODataEntityFieldParser implements StructuredTypeField, Parser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  default?: any;\n  maxLength?: number;\n  key: boolean;\n  collection: boolean;\n  nullable: boolean;\n  navigation: boolean;\n  field?: string;\n  precision?: number;\n  scale?: number;\n  ref?: string;\n  annotations: Annotation[];\n\n  constructor(name: string, field: StructuredTypeField) {\n    this.name = name;\n    this.type = field.type;\n    this.parser = NONE_PARSER;\n    this.annotations = field.annotations || [];\n    this.default = field.default;\n    this.maxLength = field.maxLength;\n    this.key = field.key !== undefined ? field.key : false;\n    this.collection = field.collection !== undefined ? field.collection : false;\n    this.nullable = field.nullable !== undefined ? field.nullable : true;\n    this.navigation = field.navigation !== undefined ? field.navigation : false;\n    this.field = field.field;\n    this.precision = field.precision;\n    this.scale = field.scale;\n    this.ref = field.ref;\n  }\n  annotation(type: string) {\n    return this.annotations.find(annot => annot.type === type);\n  }\n\n  resolve(value: any) {\n    return (this.ref || this.name).split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  private parse(parser: ODataEntityParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).deserialize(value, options);\n    }\n    return parser.deserialize(value, options);\n  }\n\n  deserialize(value: any, options: OptionsHelper): Type {\n    const parser = this.parser;\n    if (parser instanceof ODataEntityParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v, options)) :\n        this.parse(parser, value, options);\n    }\n    return parser.deserialize(value, Object.assign({field: this}, options));\n  }\n\n  // Serialize\n  private toJson(parser: ODataEntityParser, value: any, options: OptionsHelper): any {\n    const type = Types.isObject(value) ? options.helper.type(value) : undefined;\n    if (type !== undefined) {\n      return parser.findParser(c => c.isTypeOf(type)).serialize(value, options);\n    }\n    return parser.serialize(value, options);\n  }\n\n  serialize(value: Type, options: OptionsHelper): any {\n    const parser = this.parser;\n    if (parser instanceof ODataEntityParser) {\n      return Array.isArray(value) ?\n        value.map(v => this.toJson(parser, v, options)) :\n        this.toJson(parser, value, options);\n    }\n    return parser.serialize(value, Object.assign({field: this}, options));\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property: any = this.parser instanceof ODataEntityParser ? this.parser.toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\",\n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplexType();\n  }\n}\n\nexport class ODataEntityParser implements Parser {\n  name: string;\n  namespace: string;\n  alias?: string;\n  base?: string;\n  parent?: ODataEntityParser;\n  children: ODataEntityParser[];\n  fields: ODataEntityFieldParser[];\n\n  constructor(config: StructuredTypeConfig, namespace: string, alias?: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.namespace = namespace;\n    this.alias = alias;\n    this.children = [];\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEntityFieldParser(name, f as StructuredTypeField));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.namespace}.${this.name}`];\n    if (this.alias)\n      names.push(`${this.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  // Deserialize\n  deserialize(value: any, options: OptionsHelper): Type {\n    if (this.parent)\n      value = this.parent.deserialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && value[f.name] !== undefined && value[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.deserialize(value[f.name], options) }), {})\n    );\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): any {\n    if (this.parent)\n      value = this.parent.serialize(value, options);\n    return Object.assign({}, value, this.fields\n      .filter(f => f.name in value && (value as any)[f.name] !== undefined && (value as any)[f.name] !== null)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.serialize((value as any)[f.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.base) {\n      const parent = settings.findParserForType(this.base) as ODataEntityParser;\n      parent.children.push(this);\n      this.parent = parent;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties: any = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({ [f.name]: f.toJsonSchema((config as any)[f.name]) }))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string | null {\n    const field = this.fields.find(f => f.name === name);\n    if (field === undefined && this.parent !== undefined)\n      return this.parent.typeFor(name);\n    return field !== undefined ? field.type : null;\n  }\n\n  keys() {\n    const keys: ODataEntityFieldParser[] = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {}) as any;\n    const values = Object.values(key);\n    if (values.length === 1) {\n      // Single primitive key value\n      key = values[0];\n    } else if (values.some(v => v === undefined)) {\n      // Compose key, needs all values\n      key = null;\n    }\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplexType() {\n    return this.keys().length === 0;\n  }\n\n  find(predicate: (p: ODataEntityParser) => boolean): ODataEntityParser | undefined {\n    if (predicate(this))\n      return this;\n    return this.children.find(c => c.find(predicate));\n  }\n\n  findParser(predicate: (p: ODataEntityParser) => boolean): Parser {\n    return this.find(predicate) || NONE_PARSER;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityService.html":{"url":"classes/ODataEntityService.html","title":"class - ODataEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                            \n                                    Public\n                                fetchOrCreate\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                                \n                                    entitySetSchema\n                                \n                                \n                                    entitySchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, name: string, entityType?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/entity.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(entity: Partial, attrs: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attrs\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchOrCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOrCreate(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:34\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        entitySetSchema\n                    \n                \n\n                \n                    \n                        getentitySetSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:39\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        entitySchema\n                    \n                \n\n                \n                    \n                        getentitySchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/entity.ts:44\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataEntitySetResource, ODataEntityResource, HttpOptions } from '../resources';\nimport { ODataClient } from \"../client\";\nimport { EntityKey } from '../types';\nimport { ODataCollection } from '../models/collection';\nimport { ODataModel } from '../models/model';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError } from 'rxjs/operators';\n\nexport class ODataEntityService {\n  constructor(protected client: ODataClient, protected name: string, protected entityType?: string) { }\n\n  public entities(): ODataEntitySetResource {\n    return this.client.entitySet(this.name, this.entityType);\n  }\n\n  public entity(key?: EntityKey): ODataEntityResource {\n    return this.entities()\n      .entity(key);\n  }\n\n  // Models\n  public attach>(value: M): M;\n  public attach>>(value: C): C;\n  public attach(value: any): any {\n    if (value instanceof ODataModel) {\n      return value.attach(this.entities().entity(value.toEntity()));\n    } else if (value instanceof ODataCollection) {\n      return value.attach(this.entities());\n    }\n  }\n\n  // Service Config\n  get api() {\n    return this.client.apiForType(this.entityType);\n  }\n\n  // Service Config\n  get entitySetSchema() {\n    return this.api.findEntitySetByName(this.name) || null;\n  }\n\n  // Entity Config\n  get entitySchema() {\n    if (this.entityType === undefined)\n      return null;\n    return this.api.findStructuredTypeForType(this.entityType) || null;\n  }\n\n  public create(entity: Partial, options?: HttpOptions): Observable {\n    return this.entities()\n      .post(entity, options)\n      .pipe(map(({entity}) => entity));\n  }\n\n  public update(entity: Partial, options?: HttpOptions): Observable {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (res.segment.key().empty())\n      return throwError(\"Resource without key\");\n    return this.entity(entity as EntityKey)\n      .put(entity, Object.assign({etag}, options || {}))\n      .pipe(map(({entity}) => entity));\n  }\n\n  public assign(entity: Partial, attrs: Partial, options?: HttpOptions): Observable {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (res.segment.key().empty())\n      return throwError(\"Resource without key\");\n    return res.patch(attrs, Object.assign({etag}, options || {}))\n      .pipe(map(({entity: newentity, meta}) => newentity ? newentity :\n        Object.assign(entity, attrs, meta.annotations) as T));\n  }\n\n  public destroy(entity: Partial, options?: HttpOptions) {\n    const odata = this.api.options.helper;\n    const etag = odata.etag(entity);\n    const res = this.entity(entity);\n    if (res.segment.key().empty())\n      return throwError(\"Resource without key\");\n    return res.delete(Object.assign({etag}, options || {}));\n  }\n\n  // Shortcuts\n  public fetchOrCreate(entity: Partial, options?: HttpOptions): Observable {\n    return this.entity(entity).fetch(options)\n      .pipe(catchError((error: HttpErrorResponse) => {\n        if (error.status === 404)\n          return this.create(entity, options);\n        else\n          return throwError(error);\n      }));\n  }\n\n  public save(entity: Partial, options?: HttpOptions) {\n    return this.entity(entity).segment.key().empty() ?\n      this.create(entity, options) :\n      this.update(entity, options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitySet.html":{"url":"classes/ODataEntitySet.html","title":"class - ODataEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isTypeOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntitySetConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/entity-set.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntitySetConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/entity-set.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { EntitySetConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEntitySet {\n  schema: ODataSchema\n  name: string;\n  annotations: ODataAnnotation[];\n  constructor(config: EntitySetConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumFieldParser.html":{"url":"classes/ODataEnumFieldParser.html","title":"class - ODataEnumFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            EnumTypeField\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                annotation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: EnumTypeField)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        EnumTypeField\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Annotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            annotation\n                        \n                        \n                    \n                \n            \n            \n                \nannotation(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EnumHelper } from '../helpers';\nimport { JsonSchemaExpandOptions, EnumTypeConfig, Parser, StructuredTypeFieldOptions, EnumTypeField, Annotation, OptionsHelper } from '../types';\n\nexport class ODataEnumFieldParser implements EnumTypeField {\n  name: string;\n  value: number;\n  annotations: Annotation[];\n  constructor(name: string, field: EnumTypeField) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = field.annotations || [];\n  }\n  annotation(type: string) {\n    return this.annotations.find(annot => annot.type === type);\n  }\n}\n\nexport class ODataEnumParser implements Parser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumFieldParser[];\n\n  constructor(config: EnumTypeConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEnumFieldParser(name, f as EnumTypeField));\n  }\n\n  // Deserialize\n  deserialize(value: string, options: OptionsHelper): Type {\n    // string -> Type\n    if (this.flags) {\n      return EnumHelper.toValues(this.members, value).reduce((acc, v) => acc | v, 0) as any;\n    } else {\n      return EnumHelper.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): string {\n    // Type -> string\n    if (this.flags) {\n      let names = EnumHelper.toNames(this.members, value);\n      if (!options.stringAsEnum)\n        names = names.map(name => `${this.type}'${name}'`)\n      return names.join(\", \");\n    } else {\n      let name = EnumHelper.toName(this.members, (value) as number);\n      if (!options.stringAsEnum)\n        name = `${this.type}'${name}'`;\n      return name;\n    }\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = EnumHelper.names(this.members);\n    return property;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumParser.html":{"url":"classes/ODataEnumParser.html","title":"class - ODataEnumParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/enum.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            Parser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                    Optional\n                                flags\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deserialize\n                            \n                            \n                                serialize\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/enum.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            flags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: string, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/enum.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EnumHelper } from '../helpers';\nimport { JsonSchemaExpandOptions, EnumTypeConfig, Parser, StructuredTypeFieldOptions, EnumTypeField, Annotation, OptionsHelper } from '../types';\n\nexport class ODataEnumFieldParser implements EnumTypeField {\n  name: string;\n  value: number;\n  annotations: Annotation[];\n  constructor(name: string, field: EnumTypeField) {\n    this.name = name;\n    this.value = field.value;\n    this.annotations = field.annotations || [];\n  }\n  annotation(type: string) {\n    return this.annotations.find(annot => annot.type === type);\n  }\n}\n\nexport class ODataEnumParser implements Parser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  members: { [name: string]: number } | { [value: number]: string };\n  fields: ODataEnumFieldParser[];\n\n  constructor(config: EnumTypeConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.flags = config.flags;\n    this.members = config.members;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataEnumFieldParser(name, f as EnumTypeField));\n  }\n\n  // Deserialize\n  deserialize(value: string, options: OptionsHelper): Type {\n    // string -> Type\n    if (this.flags) {\n      return EnumHelper.toValues(this.members, value).reduce((acc, v) => acc | v, 0) as any;\n    } else {\n      return EnumHelper.toValue(this.members, value) as any;\n    }\n  }\n\n  // Serialize\n  serialize(value: Type, options: OptionsHelper): string {\n    // Type -> string\n    if (this.flags) {\n      let names = EnumHelper.toNames(this.members, value);\n      if (!options.stringAsEnum)\n        names = names.map(name => `${this.type}'${name}'`)\n      return names.join(\", \");\n    } else {\n      let name = EnumHelper.toName(this.members, (value) as number);\n      if (!options.stringAsEnum)\n        name = `${this.type}'${name}'`;\n      return name;\n    }\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = EnumHelper.names(this.members);\n    return property;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumType.html":{"url":"classes/ODataEnumType.html","title":"class - ODataEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fields\n                            \n                            \n                                findFieldByName\n                            \n                            \n                                findFieldByValue\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                mapFields\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEnumFieldParser[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByName\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findFieldByValue\n                        \n                        \n                    \n                \n            \n            \n                \nfindFieldByValue(value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            mapFields\n                        \n                        \n                    \n                \n            \n            \n                \nmapFields(mapper: (field: ODataEnumFieldParser) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapper\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/enum-type.ts:27\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataSchema } from './schema';\nimport { ODataEnumFieldParser, ODataEnumParser } from '../parsers';\nimport { EnumTypeConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataEnumType {\n  schema: ODataSchema;\n  name: string;\n  parser: ODataEnumParser;\n  members: { [name: string]: number } | { [value: number]: string };\n  annotations: ODataAnnotation[];\n  constructor(config: EnumTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.members = config.members;\n    this.parser = new ODataEnumParser(config, schema.namespace);\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  fields(): ODataEnumFieldParser[] {\n    return this.parser.fields;\n  }\n\n  findFieldByName(name: string) {\n    return this.fields().find(f => f.name === name);\n  }\n\n  findFieldByValue(value: number) {\n    return this.fields().find(f => f.value === value);\n  }\n\n  mapFields(mapper: (field: ODataEnumFieldParser) => T) {\n    return this.fields().map(mapper);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInMemoryCache.html":{"url":"classes/ODataInMemoryCache.html","title":"class - ODataInMemoryCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInMemoryCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/memory.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/memory.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:14\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/memory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache } from './cache';\nexport class ODataInMemoryCache extends ODataCache> {\n  constructor(init?: {timeout?: number}) {\n    super(init);\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res, res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    return this.get(req.urlWithParams);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataInStorageCache.html":{"url":"classes/ODataInStorageCache.html","title":"class - ODataInStorageCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataInStorageCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataCache\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResponse\n                            \n                            \n                                putResponse\n                            \n                            \n                                buildEntry\n                            \n                            \n                                get\n                            \n                            \n                                    Abstract\n                                getResponse\n                            \n                            \n                                handleRequest\n                            \n                            \n                                isCacheable\n                            \n                            \n                                isExpired\n                            \n                            \n                                put\n                            \n                            \n                                    Abstract\n                                putResponse\n                            \n                            \n                                    Private\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/cache/storage.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Map>\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeout\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataCache\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataCache:14\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \ngetResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \nputResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/cache/storage.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildEntry\n                        \n                        \n                    \n                \n            \n            \n                \nbuildEntry(payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { payload: T; lastRead: any; timeout: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:20\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleRequest\n                        \n                        \n                    \n                \n            \n            \n                \nhandleRequest(req: ODataRequest, res$: Observable>)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res$\n                                    \n                                                Observable>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isCacheable\n                        \n                        \n                    \n                \n            \n            \n                \nisCacheable(req: ODataRequest)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isExpired\n                        \n                        \n                    \n                \n            \n            \n                \nisExpired(entry: ODataCacheEntry)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                ODataCacheEntry\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            put\n                        \n                        \n                    \n                \n            \n            \n                \nput(key: string, payload: T, timeout?: number)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    timeout\n                                    \n                                                number\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            putResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putResponse(req: ODataRequest, res: ODataResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                ODataResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataCache\n\n                \n            \n            \n                \n                        Defined in         ODataCache:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n    body: any | null;\n    headers: {[name: string]: string | string[]};\n    status: number;\n    statusText: string;\n    url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor(init: {timeout?: number, name: string, storage?: Storage}) {\n    super(init);\n    const name = init.name;\n    const storage = init.storage || sessionStorage;\n    this.entries = new Map>(JSON.parse(storage.getItem(name) || \"[]\"));\n    window.addEventListener(\"beforeunload\", ((backend, key, responses) => function() {\n      backend.setItem(key, JSON.stringify(Array.from(responses.entries())))\n    })(storage, name, this.entries));\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res.toJSON(), res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.urlWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataMeta.html":{"url":"classes/ODataMeta.html","title":"class - ODataMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    odv\n                                \n                                \n                                    context\n                                \n                                \n                                    properties\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: Object, opt: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        opt\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        odv\n                    \n                \n\n                \n                    \n                        getodv()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:7\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n\n                \n                    \n                        getcontext()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        properties\n                    \n                \n\n                \n                    \n                        getproperties()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:37\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag(): string {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink(): string {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink(): string {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink(): string {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType(): string {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count(): number {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink(): string {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink(): string {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataMetadataResource.html":{"url":"classes/ODataMetadataResource.html","title":"class - ODataMetadataResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataMetadataResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/metadata.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _api\n                            \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                get\n                            \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, api?: ODataApi, segments?: ODataPathSegments)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:30\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMetadataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(client: ODataClient, api?: ODataApi)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                ODataClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    api\n                                    \n                                                ODataApi\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataMetadataResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:84\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:102\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:226\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:218\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:203\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:210\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:104\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:45\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/types/metadata.ts:33\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataResource } from '../resource';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { map } from 'rxjs/operators';\nimport { ODataClient } from '../../client';\nimport { HttpOptions } from './options';\nimport { ODataMetadata } from '../responses';\nimport { $METADATA } from '../../constants';\nimport { ODataApi } from '../../api';\n\nexport class ODataMetadataResource extends ODataResource {\n  private _api: ODataApi;\n\n  constructor(client: ODataClient, api?: ODataApi, segments?: ODataPathSegments) {\n    super(client, segments);\n    this._api = api || client.apiFor(this);\n  }\n\n  clone() {\n    return new ODataMetadataResource(this.client, this._api, this.pathSegments.clone());\n  }\n\n  //#region Factory\n  static factory(client: ODataClient, api?: ODataApi) {\n    let segments = new ODataPathSegments();\n    segments.segment(PathSegmentNames.metadata, $METADATA);\n    return new ODataMetadataResource(client, api, segments);\n  }\n  //#endregion\n\n  //#region Api Config\n  get api(): ODataApi {\n    return this._api;\n  }\n  //#endregion\n\n  //#region Requests\n  get(options?: HttpOptions): Observable {\n    let opts = Object.assign({ observe: 'body', responseType: 'text' }, options || {});\n    return this.client.get(this, opts).pipe(map((body: any) => new ODataMetadata(body)));\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataModel.html":{"url":"classes/ODataModel.html","title":"class - ODataModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _entity\n                            \n                            \n                                    Protected\n                                _meta\n                            \n                            \n                                    Protected\n                                _relations\n                            \n                            \n                                    Protected\n                                _resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _action\n                            \n                            \n                                    Protected\n                                _cast\n                            \n                            \n                                    Protected\n                                _function\n                            \n                            \n                                    Protected\n                                _navigationProperty\n                            \n                            \n                                attach\n                            \n                            \n                                clone\n                            \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                fetch\n                            \n                            \n                                    Protected\n                                getNavigationProperty\n                            \n                            \n                                    Protected\n                                parse\n                            \n                            \n                                    Protected\n                                populate\n                            \n                            \n                                save\n                            \n                            \n                                    Protected\n                                setNavigationProperty\n                            \n                            \n                                target\n                            \n                            \n                                toEntity\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _config\n                                \n                                \n                                    _segment\n                                \n                                \n                                    _query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data?: any, options: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/model.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _meta\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityMeta | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _relations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _action\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _action(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:259\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _cast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _cast(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:235\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        S\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _function\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _function(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:247\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            _navigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _navigationProperty(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:271\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \nattach(resource: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataModel\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:193\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNavigationProperty(field: ODataEntityFieldParser)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:282\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                ODataEntityFieldParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataModel | ODataCollection | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            populate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populate(data: Object, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNavigationProperty(field: ODataEntityFieldParser, model: Pm | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:296\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        Pm\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                ODataEntityFieldParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                            Pm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            target\n                        \n                        \n                    \n                \n            \n            \n                \ntarget()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEntity\n                        \n                        \n                    \n                \n            \n            \n                \ntoEntity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _config\n                    \n                \n\n                \n                    \n                        get_config()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:203\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _segment\n                    \n                \n\n                \n                    \n                        get_segment()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:212\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _query\n                    \n                \n\n                \n                    \n                        get_query()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:223\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport {\n  ODataResource,\n  ODataEntityResource,\n  ODataPropertyResource,\n  ODataFunctionResource,\n  ODataNavigationPropertyResource,\n  HttpOptions,\n  HttpEntityOptions,\n  ODataEntityMeta,\n  ODataEntitiesMeta\n} from '../resources/index';\n\nimport { ODataCollection } from './collection';\nimport { ODataEntityFieldParser } from '../parsers/entity';\n\nexport class ODataModel {\n  protected _resource: ODataResource | null;\n  protected _entity: T;\n  protected _meta: ODataEntityMeta | null;\n  protected _relations: { [name: string]: {\n    rel: ODataModel | ODataCollection> | null,\n    field: ODataEntityFieldParser\n  }};\n\n  constructor(data?: any, options: { resource?: ODataResource, meta?: ODataEntityMeta } = {}) {\n    this._resource = null;\n    this._entity = {} as T;\n    this._meta = null;\n    this._relations = {};\n    if (options.resource instanceof ODataResource)\n      this.attach(options.resource);\n    this.populate(data || {}, options.meta);\n  }\n\n  attach(resource: ODataResource) {\n    if (this._resource !== null && this._resource.type() !== resource.type())\n      throw new Error(`Can't reattach ${resource.type()} with ${this._resource.type()}`);\n    let first = !this._resource;\n    this._resource = resource;\n    if (first) {\n      this._config.fields({include_navigation: true, include_parents: true})\n        .filter(field => field.isNavigation())\n        .forEach(field => {\n          Object.defineProperty(this, field.name, {\n            get() {\n              return this.getNavigationProperty(field);\n            },\n            set(model: ODataModel | null) {\n              this.setNavigationProperty(field, model);\n            }\n          });\n        });\n      if (this._entity)\n        this.populate(this._entity, this._meta !== null ? this._meta : undefined);\n    }\n    return this;\n  }\n\n  target() {\n    return this._resource !== null ? this._resource.clone() as ODataResource : null;\n  }\n\n  protected parse(entity: T) {\n    let fields = this._resource ? this._config.fields({include_navigation: true, include_parents: true}) : [];\n    let entries = Object.entries(entity)\n      .map(([key, value]) => [key, value, fields.find(f => f.name === key)]);\n    //Attributes\n    let attrs = Object.assign({}, entries\n      .filter(([, , f]) => f && !(f.isNavigation() || f.isComplexType()))\n      .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}));\n    //Others\n    Object.assign(attrs, entries\n      .filter(([, , f]) => !f)\n      .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}));\n    //Complexes\n    Object.assign(attrs, entries\n      .filter(([, , f]) => f && f.isComplexType())\n      .reduce((acc, [k, , f]) => {\n        let value = (this._entity as any)[f.name];\n        if (value) {\n          let prop = (this._resource as ODataEntityResource).property(f.name);\n          if (this._meta === null)\n            throw(\"No metadata value\");\n          value = f.collection ?\n            prop.asCollection(value, new ODataEntitiesMeta(this._meta.property(f.name) || {}, {options: this._meta.options})) :\n            prop.asModel(value, new ODataEntityMeta(value || {}, {options: this._meta.options}));\n        }\n        return Object.assign(acc, { [k]: value });\n      }, {}));\n    return attrs;\n  }\n\n  protected populate(data: Object, meta?: ODataEntityMeta) {\n    this._meta = meta || new ODataEntityMeta(data, {options: this._resource ? this._resource.api.options : undefined});\n    this._entity = this._meta.attributes(data);\n    this._relations = {};\n    return Object.assign(this, this.parse(this._entity));\n  }\n\n  toEntity(): T {\n    return Object.entries(\n      Object.assign({},\n        this._entity,\n        Object.entries(this)\n          .filter(([key, ]) => !(key.startsWith(\"_\")))\n          .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}),\n        Object.entries(this._relations).reduce((acc, [k, v]) => Object.assign(acc, {[k]: v.rel}), {})\n      )\n    ).reduce((acc, [k, value]) =>\n      Object.assign(acc, { [k]: (value instanceof ODataModel) ?\n        value.toEntity() :\n        (value instanceof ODataCollection) ?\n        value.toEntities() : value }),\n      {}) as T;\n  }\n\n  clone() {\n    let options: {resource?: ODataResource, meta?: ODataEntityMeta} = {};\n    if (this._resource)\n      options.resource = this._resource.clone();\n    if (this._meta)\n      options.meta = this._meta.clone();\n    let Ctor = this.constructor;\n    return new Ctor(this.toEntity(), options);\n  }\n\n  fetch(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't fetch entity without key`);\n      return this._resource.get(options).pipe(\n        map(({entity, meta}) => this.populate(entity, meta)));\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {})).pipe(\n          map(({entity, meta}) => this.populate(entity, meta)));\n    } else if (this._resource instanceof ODataPropertyResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {})).pipe(\n          map(({entity, meta}) => this.populate(entity, meta)));\n    } else if (this._resource instanceof ODataFunctionResource) {\n      return this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {})).pipe(\n          map(({entity, meta}) => this.populate(entity, meta)));\n    }\n    throw new Error(\"Not Yet!\");\n  }\n\n  create(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      let attrs = this.toEntity();\n      return this._resource.post(attrs, options).pipe(\n        map(({entity, meta}) => this.populate(entity || attrs, meta)));\n    }\n    throw new Error(`Can't create`);\n  }\n\n  update(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't update entity without key`);\n      let resource = this._resource;\n      let attrs = this.toEntity() as any;\n      return Object.values(this._relations)\n        .filter((value) => value.field.navigation && !value.field.collection)\n        .reduce((acc, value) => {\n          let ref = (this._resource as ODataEntityResource).navigationProperty(value.field.name).reference();\n          delete attrs[value.field.name];\n          return acc.pipe(switchMap(({meta}) => value.rel != null ?\n            ref.set(value.rel.target() as ODataEntityResource, {etag: meta.etag}) :\n            ref.unset({etag: meta.etag})));\n        }, of({meta: this._meta as ODataEntityMeta}))\n        .pipe(\n          switchMap(({meta}) => resource.put(attrs, Object.assign({ etag: meta.etag }, options || {}))),\n          map(({entity, meta}) => this.populate(entity || attrs, meta)));\n    }\n    throw new Error(`Can't update`);\n  }\n\n  save(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      return this._resource.segment.key().empty() ? this.create(options) : this.update(options);\n    }\n    throw new Error(`Can't save`);\n  }\n\n  destroy(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't destroy entity without key`);\n      return this._resource.delete(Object.assign({ etag: this._meta !== null ? this._meta.etag : undefined }, options || {}));\n    }\n    throw new Error(`Can't destroy`);\n  }\n\n  get _config() {\n    if (!this._resource)\n      throw new Error(`Can't config without ODataResource`);\n    let schema = (this._resource as ODataEntityResource).schema;\n    if (schema === null)\n      throw new Error(`Can't config without schema`);\n    return schema;\n  }\n\n  get _segment() {\n    if (!this._resource)\n      throw new Error(`Can't call without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't use without key`);\n    }\n    return (this._resource as ODataEntityResource).segment;\n  }\n\n  get _query() {\n    if (!this._resource)\n      throw new Error(`Can't query without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't query without key`);\n    }\n    return (this._resource as ODataEntityResource).query;\n  }\n\n  // Function\n  protected _cast(type: string) {\n    if (!this._resource)\n      throw new Error(`Can't cast without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't cast without key`);\n    }\n    return (this._resource as ODataEntityResource).cast(type);\n  }\n\n  // Function\n  protected _function(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't navigationProperty without key`);\n    }\n    return (this._resource as ODataEntityResource).function(path);\n  }\n\n  // Action\n  protected _action(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't navigationProperty without key`);\n    }\n    return (this._resource as ODataEntityResource).action(path);\n  }\n\n  // Navigation\n  protected _navigationProperty(path: string) {\n    if (!this._resource)\n      throw new Error(`Can't navigationProperty without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.segment.key(this);\n      if (this._resource.segment.key().empty())\n        throw new Error(`Can't navigationProperty without key`);\n    }\n    return (this._resource as ODataEntityResource).navigationProperty(path);\n  }\n\n  protected getNavigationProperty(field: ODataEntityFieldParser): ODataModel | ODataCollection> | null {\n    if (!(field.name in this._relations)) {\n      let value = (this._entity as any)[field.name];\n      let nav = this._navigationProperty(field.name);\n      if (this._meta === null)\n        throw new Error(\"No Meta\")\n      let rel = field.collection ?\n          nav.asCollection(value, new ODataEntitiesMeta(this._meta.property(field.name) || {}, {options: this._meta.options})) :\n          nav.asModel(value, new ODataEntityMeta(value || {}, {options: this._meta.options}));\n      this._relations[field.name] = {field, rel};\n    }\n    return this._relations[field.name].rel;\n  }\n\n  protected setNavigationProperty>(field: ODataEntityFieldParser, model: Pm | null) {\n    let target = model?.target();\n    if (field.collection)\n      throw new Error(`Can't set ${field.name} to collection, use add`);\n    if (model instanceof ODataModel && target && target.type() !== field.type)\n      throw new Error(`Can't set ${target.type()} to ${field.type}`);\n    this._relations[field.name] = {rel: model, field};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ODataModule.html":{"url":"modules/ODataModule.html","title":"module - ODataModule","body":"\n                   \n\n\n\n\n    Modules\n    ODataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-odata/src/lib/module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ODataClient\n                        \n                        \n                            ODataServiceFactory\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configs: ApiConfig[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/module.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                ApiConfig[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ODataSettings } from './settings';\nimport { ODataClient } from './client';\nimport { ODataServiceFactory } from './services/index';\nimport { ApiConfig } from './types';\nimport { ODATA_CONFIGURATIONS } from './tokens';\n\nexport function createSettings(configs: ApiConfig[]) {\n  return new ODataSettings(...configs);\n}\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ODataClient, ODataServiceFactory]\n})\nexport class ODataModule {\n  public static forRoot(...configs: ApiConfig[]): ModuleWithProviders {\n    return {\n      ngModule: ODataModule,\n      providers: [\n        { provide: ODATA_CONFIGURATIONS, useValue: configs },\n        {\n          provide: ODataSettings,\n          useFactory: createSettings,\n          deps: [ODATA_CONFIGURATIONS]\n        },\n        ODataClient,\n        ODataServiceFactory\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataParameterParser.html":{"url":"classes/ODataParameterParser.html","title":"class - ODataParameterParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataParameterParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers/callable.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                nullable\n                            \n                            \n                                    Private\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, parameter: Parameter)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers/callable.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameter\n                                                  \n                                                        \n                                                                        Parameter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: Type, options: StructuredTypeFieldOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers/callable.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                StructuredTypeFieldOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Parser, Options, Parameter, CallableConfig, StructuredTypeFieldOptions } from '../types';\n\nconst NONE_PARSER = {\n  serialize(value: any, options: Options) {return value}\n} as Parser;\n\nexport class ODataParameterParser {\n  name: string;\n  type: string;\n  private parser: Parser;\n  collection?: boolean;\n  nullable?: boolean;\n\n  constructor(name: string, parameter: Parameter) {\n    this.name = name;\n    this.type = parameter.type;\n    this.parser = NONE_PARSER;\n    Object.assign(this, parameter);\n  }\n\n  serialize(value: Type, options: StructuredTypeFieldOptions): any {\n    return Array.isArray(value) ?\n      value.map(v => this.parser.serialize(v, options)) :\n      this.parser.serialize(value, options);\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser = settings.findParserForType(this.type) || NONE_PARSER;\n  }\n}\n\nexport class ODataCallableParser implements Parser {\n  name: string;\n  type: string;\n  return?: string;\n  parser: Parser;\n  parameters: ODataParameterParser[];\n\n  constructor(config: CallableConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${config.name}`;\n    this.return = config.return;\n    this.parser = NONE_PARSER;\n    this.parameters = Object.entries(config.parameters || [])\n      .map(([name, p]) => new ODataParameterParser(name, p as Parameter));\n  }\n\n  // Deserialize\n  deserialize(value: any, options: StructuredTypeFieldOptions): R {\n    return this.parser.deserialize(value, options);\n  }\n\n  // Serialize\n  serialize(params: any, options: StructuredTypeFieldOptions): any {\n    return Object.assign({}, this.parameters\n      .filter(p => p.name in params && params[p.name] !== undefined)\n      .reduce((acc, p) => Object.assign(acc, { [p.name]: p.serialize(params[p.name], options) }), {})\n    );\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    if (this.return)\n      this.parser = settings.findParserForType(this.return) || NONE_PARSER;\n    this.parameters.forEach(p => p.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPathSegments.html":{"url":"classes/ODataPathSegments.html","title":"class - ODataPathSegments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPathSegments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                find\n                            \n                            \n                                has\n                            \n                            \n                                last\n                            \n                            \n                                path\n                            \n                            \n                                remove\n                            \n                            \n                                segment\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segments?: ODataSegment[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataSegment[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            segments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSegment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:55\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPathSegments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            last\n                        \n                        \n                    \n                \n            \n            \n                \nlast()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SegmentHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            segment\n                        \n                        \n                    \n                \n            \n            \n                \nsegment(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, Dates } from '../utils';\n\nimport { OptionHandler } from './query-options';\nimport { PATH_SEPARATOR } from '../constants';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport enum SegmentOptionNames {\n  key = 'key',\n  parameters = 'parameters'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type?: string;\n  options: PlainObject;\n}\n\nfunction pathSegmentsBuilder(segment: ODataSegment): string {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      let parameters = segment.options[SegmentOptionNames.parameters];\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.options[SegmentOptionNames.key];\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = (segments || []).map(({name, path, type, options}) => ({name, path, type, options: options || {}}));\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => t !== undefined) as string[];\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => {\n      let json = { name: segment.name, path: segment.path, type: segment.type };\n      let options = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.options)));\n      if (!Types.isEmpty(options))\n        json.options = options;\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(name: string, path?: string) {\n    // Backward search\n    return [...this.segments].reverse().find(s =>\n      s.name === name &&\n      (path === undefined || s.path === path));\n  }\n\n  last() {\n    return (this.segments.length > 0) ?\n       new SegmentHandler(this.segments[this.segments.length - 1]) : null;\n  }\n\n  segment(name: string, path?: string) {\n    let segment = this.find(name, path);\n    if (!segment && path !== undefined) {\n      segment = { name, path, options: {} } as ODataSegment;\n      this.segments.push(segment);\n    }\n    if (segment === undefined)\n      throw new Error(`No segment with name: ${name}`)\n    return new SegmentHandler(segment);\n  }\n\n  has(name: string, path?: string) {\n    return !!this.find(name, path);\n  }\n\n  remove(name: string, path?: string) {\n    let segment = this.find(name, path);\n    this.segments = this.segments.filter(s => s !== segment);\n  }\n}\n\nexport class SegmentHandler {\n  options: PlainObject\n  constructor(private segment: ODataSegment) {\n    this.options = this.segment.options;\n  }\n\n  get name() {\n    return this.segment.name;\n  }\n\n  get type() {\n    return this.segment.type || null;\n  }\n\n  setType(value: string) {\n    this.segment.type = value;\n  }\n\n  get path() {\n    return this.segment.path;\n  }\n\n  setPath(value: string) {\n    this.segment.path = value;\n  }\n\n  // Option Handler\n  option(type: SegmentOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[type] = opts;\n    return new OptionHandler(this.options, type as any);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPropertyMeta.html":{"url":"classes/ODataPropertyMeta.html","title":"class - ODataPropertyMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPropertyMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/meta.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataMeta\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _properties\n                            \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                data\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Abstract\n                                data\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OptionsHelper\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataMeta\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataMeta:6\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPropertyMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            data\n                        \n                        \n                    \n                \n            \n            \n                \ndata(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataMeta\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            data\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    data(data: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataMeta\n\n                \n            \n            \n                \n                        Defined in         ODataMeta:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/meta.ts:62\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders } from '@angular/common/http';\nimport { ODataContext, OptionsHelper } from '../../types';\n\nexport abstract class ODataMeta {\n  annotations: Object;\n  options?: OptionsHelper;\n  protected get odv() {\n    if (!this.options)\n      throw Error(\"No helper\");\n    return this.options.helper;\n  }\n\n  constructor(data: Object, opt: {\n    options?: OptionsHelper,\n    headers?: HttpHeaders\n  } = {}) {\n    //TODO: Default options\n    this.options = opt.options;\n    this.annotations = (this.options ? this.odv.annotations(data) : data) || {};\n    if (opt.headers) {\n      const etag = opt.headers.get(\"ETag\");\n      if (etag)\n        this.odv.etag(this.annotations, etag);\n    }\n  }\n\n  // Context\n  private _context: any;\n  get context(): ODataContext {\n    if (!this._context) {\n      this._context = this.odv.context(this.annotations) || {};\n    }\n    return this._context;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = this.odv.properties(this.annotations) || {};\n    }\n    return this._properties;\n  }\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  // Method\n  abstract clone() : ODataMeta;\n  abstract data(data: Object) : Object;\n}\n\nexport class ODataPropertyMeta extends ODataMeta {\n  clone(): ODataPropertyMeta {\n    return new ODataPropertyMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.property(data, this.context);\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n}\n\nexport class ODataEntityMeta extends ODataMeta {\n  clone(): ODataEntityMeta {\n    return new ODataEntityMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entity(data, this.context);\n  }\n\n  attributes(data: Object): T {\n    return this.odv.attributes(data) as T;\n  }\n\n  get type(): string {\n    return this.odv.type(this.annotations);\n  }\n\n  get id() {\n    return this.odv.id(this.annotations);\n  }\n\n  get etag() {\n    return this.odv.etag(this.annotations)\n  }\n\n  get mediaEtag(): string {\n    return this.odv.mediaEtag(this.annotations)\n  }\n\n  get metadataEtag() {\n    return this.odv.metadataEtag(this.annotations)\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations)\n  }\n\n  get editLink(): string {\n    return this.odv.editLink(this.annotations)\n  }\n\n  get mediaReadLink(): string {\n    return this.odv.mediaReadLink(this.annotations)\n  }\n\n  get mediaEditLink(): string {\n    return this.odv.mediaEditLink(this.annotations)\n  }\n\n  get mediaContentType(): string {\n    return this.odv.mediaContentType(this.annotations)\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations) || {};\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\nexport class ODataEntitiesMeta extends ODataMeta {\n  clone(): ODataEntitiesMeta {\n    return new ODataEntitiesMeta(this.annotations, {options: this.options});\n  }\n\n  data(data: Object) {\n    return this.odv.entities(data, this.context);\n  }\n\n  entity(data: Object) {\n    return new ODataEntityMeta(data, {options: this.options});\n  }\n\n  get readLink(): string {\n    return this.odv.readLink(this.annotations);\n  }\n\n  get count(): number {\n    return this.odv.count(this.annotations);\n  }\n\n  get nextLink(): string {\n    return this.odv.nextLink(this.annotations);\n  }\n\n  get deltaLink(): string {\n    return this.odv.deltaLink(this.annotations);\n  }\n\n  get top() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$top=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skip() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skip=(\\d+)/);\n    return match !== null ? Number(match[1]) : undefined;\n  }\n\n  get skiptoken() {\n    let match = (this.nextLink || \"\").match(/[&?]{1}\\$skiptoken=([\\d\\w\\s']+)/);\n    return match !== null ? match[1] : undefined;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = this.odv.functions(this.annotations);\n    }\n    return this._functions;\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataQueryOptions.html":{"url":"classes/ODataQueryOptions.html","title":"class - ODataQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                clear\n                            \n                            \n                                clone\n                            \n                            \n                                has\n                            \n                            \n                                keep\n                            \n                            \n                                option\n                            \n                            \n                                params\n                            \n                            \n                                remove\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PlainObject)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        PlainObject\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlainObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataQueryOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: QueryOptionNames)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keep\n                        \n                        \n                    \n                \n            \n            \n                \nkeep(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(name: QueryOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:75\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OptionHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            params\n                        \n                        \n                    \n                \n            \n            \n                \nparams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PlainObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\nimport { PlainObject } from './builder';\n\nimport { Dates, Types, Urls } from '../utils';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options: PlainObject;\n\n  constructor(options?: PlainObject) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): PlainObject {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? Urls.parseQueryString(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    if (Types.isArray(custom)) {\n      //TODO: split test for item type\n      custom = custom.reduce((acc: {[name: string]: any}, item: {[name: string]: any}) => Object.assign(acc, item), {});\n    }\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter(k => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: PlainObject, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return v !== undefined && (this.o[this.n] = v) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): PlainObject {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    pathArray.reduce((acc, key, i) => {\n      if (acc[key] === undefined) acc[key] = {};\n      if (i === pathArray.length - 1) acc[key] = value;\n      return acc[key];\n    }, obj);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n    // Find value if exist return otherwise return undefined value;\n    return (pathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj) || def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    pathArray.reduce((acc, key, i) => {\n      if (i === pathArray.length - 1) delete acc[key];\n      return acc[key];\n    }, obj);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    return !!pathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj);\n  }\n\n  assign(values: PlainObject) {\n    let obj = this.assertObject(true);\n    Object.assign(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataRequest.html":{"url":"classes/ODataRequest.html","title":"class - ODataRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/request.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                body\n                            \n                            \n                                    Readonly\n                                fetchPolicy\n                            \n                            \n                                    Readonly\n                                headers\n                            \n                            \n                                    Readonly\n                                method\n                            \n                            \n                                    Readonly\n                                observe\n                            \n                            \n                                    Readonly\n                                params\n                            \n                            \n                                    Readonly\n                                path\n                            \n                            \n                                    Readonly\n                                    Optional\n                                reportProgress\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                            \n                                    Readonly\n                                    Optional\n                                responseType\n                            \n                            \n                                    Readonly\n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    pathWithParams\n                                \n                                \n                                    url\n                                \n                                \n                                    urlWithParams\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T | null\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            fetchPolicy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            observe\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"events\" | \"response\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpParams\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            reportProgress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            responseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         \"arraybuffer\" | \"blob\" | \"json\" | \"text\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pathWithParams\n                    \n                \n\n                \n                    \n                        getpathWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:71\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n\n                \n                    \n                        geturl()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:79\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        urlWithParams\n                    \n                \n\n                \n                    \n                        geturlWithParams()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/request.ts:83\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { ODataApi } from '../api';\nimport { ACCEPT, IF_MATCH_HEADER } from '../constants';\nimport { Http } from '../utils';\nimport { ODataResource } from './resource';\n\nexport class ODataRequest {\n  readonly method: string;\n  readonly api: ODataApi;\n  readonly body: T | null;\n  readonly observe: 'events' | 'response'\n  readonly reportProgress?: boolean;\n  readonly withCredentials?: boolean;\n  readonly responseType?: 'arraybuffer' | 'blob' | 'json' | 'text';\n  readonly fetchPolicy: 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\n  readonly headers: HttpHeaders;\n  readonly params: HttpParams;\n  readonly path: string;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n    method: string,\n    api: ODataApi,\n    resource: ODataResource,\n    body: T | null,\n    observe: 'events' | 'response',\n    etag?: string,\n    headers?: HttpHeaders | { [header: string]: string | string[] },\n    reportProgress?: boolean,\n    params?: HttpParams | { [param: string]: string | string[] },\n    responseType?: 'arraybuffer' | 'blob' | 'json' | 'text',\n    fetchPolicy?: 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only',\n    withCredentials?: boolean\n  }) {\n    this.method = init.method;\n    this.resource = init.resource;\n\n    this.api = init.api;\n    this.body = init.body;\n    this.reportProgress = init.reportProgress;\n    this.responseType = init.responseType;\n    this.observe = init.observe;\n\n    this.withCredentials = (init.withCredentials === undefined) ? this.api.options.withCredentials : init.withCredentials;\n    this.fetchPolicy = init.fetchPolicy || this.api.options.fetchPolicy;\n\n    // The Path and Params from resource\n    const [resourcePath, resourceParams] = init.resource.pathAndParams();\n    this.path = resourcePath;\n\n    // Headers\n    let customHeaders: {[name: string]: string | string[]} = {};\n    if (typeof init.etag === 'string')\n      customHeaders[IF_MATCH_HEADER] = init.etag;\n\n    let accept = [];\n    // Metadata ?\n    if (this.api.options.metadata !== undefined)\n      accept.push(`odata.metadata=${this.api.options.metadata}`);\n    // IEEE754\n    if (this.api.options.ieee754Compatible !== undefined)\n      accept.push(`IEEE754Compatible=${this.api.options.ieee754Compatible}`);\n    if (accept.length > 0)\n      customHeaders[ACCEPT] = `application/json;${accept.join(';')}, text/plain, */*`;\n    this.headers = Http.mergeHttpHeaders(this.api.options.headers, customHeaders, init.headers || {});\n\n    // Params\n    this.params = Http.mergeHttpParams(this.api.options.params, resourceParams, init.params || {});\n  }\n\n  get pathWithParams() {\n    let path = this.path;\n    if (this.params.keys().length > 0) {\n      path = `${path}?${this.params}`;\n    }\n    return path;\n  }\n\n  get url() {\n    return `${this.api.serviceRootUrl}${this.path}`;\n  }\n\n  get urlWithParams() {\n    return `${this.api.serviceRootUrl}${this.pathWithParams}`;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResource.html":{"url":"classes/ODataResource.html","title":"class - ODataResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/resource.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, segments?: ODataPathSegments, options?: ODataQueryOptions)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/resource.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataPathSegments\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ODataQueryOptions\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataClient\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:75\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:196\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:64\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/resource.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/resource.ts:58\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  VALUE_SEPARATOR,\n  PARAM_SEPARATOR,\n  QUERY_SEPARATOR\n} from '../constants';\nimport { ODataClient } from '../client';\nimport { Http, Urls } from '../utils/index';\n\nimport { PlainObject } from './builder';\nimport { ODataPathSegments } from './path-segments';\nimport {\n  ODataQueryOptions\n} from './query-options';\nimport { HttpOptions } from './types';\nimport {\n  ODataModel,\n  ODataCollection\n} from '../models/index';\nimport { ODataResponse, ODataEntityMeta, ODataEntitiesMeta } from './responses/index';\nimport { ODataApi } from '../api';\nimport { Parser } from '../types';\n\nexport abstract class ODataResource {\n  // VARIABLES\n  protected client: ODataClient;\n  protected pathSegments: ODataPathSegments;\n  protected queryOptions: ODataQueryOptions;\n\n  constructor(\n    client: ODataClient,\n    segments?: ODataPathSegments,\n    options?: ODataQueryOptions\n  ) {\n    this.client = client;\n    this.pathSegments = segments || new ODataPathSegments();\n    this.queryOptions = options || new ODataQueryOptions();\n  }\n\n  /**\n   * @returns string The type of the resource\n   */\n  type() {\n    const segment = this.pathSegments.last();\n    return segment !== null ? segment.type : null;\n  }\n\n  /**\n   * @returns string All covered types of the resource\n   */\n  types(): string[] {\n    return this.pathSegments.types();\n  }\n\n  //#region Api\n  get api(): ODataApi {\n    return this.client\n      .apiFor(this);\n  }\n  ////#endregion\n\n  pathAndParams(): [string, PlainObject] {\n    let path = this.pathSegments.path();\n    let params = this.queryOptions.params();\n    if (path.indexOf(QUERY_SEPARATOR) !== -1) {\n      let parts = path.split(QUERY_SEPARATOR);\n      path = parts[0];\n      Object.assign(params, Urls.parseQueryString(parts[1]));\n    }\n    return [path, params];\n  }\n\n  asModel>(entity: Partial, meta?: ODataEntityMeta): M {\n    let Model = ODataModel;\n    let type = this.type();\n    if (type !== null) {\n      Model = this.client.modelForType(type);\n    }\n    return new Model(entity, {resource: this, meta}) as M;\n  }\n\n  asCollection>>(entities: Partial[], meta?: ODataEntitiesMeta): C {\n    let Collection = ODataCollection;\n    let type = this.type();\n    if (type !== null) {\n      Collection = this.client.collectionForType(type);\n    }\n    return new Collection(entities, {resource: this, meta}) as C;\n  }\n\n  // Testing\n  toString(): string {\n    let [path, params] = this.pathAndParams();\n    let queryString = Object.entries(params)\n      .map(e => `${e[0]}${VALUE_SEPARATOR}${e[1]}`)\n      .join(PARAM_SEPARATOR);\n    return queryString ? `${path}${QUERY_SEPARATOR}${queryString}` : path;\n  }\n\n  abstract clone(): ODataResource;\n\n  serialize(value: any): any {\n    let api = this.api;\n    let type = this.type();\n    if (type !== null) {\n      let parser = api.findParserForType(type);\n      if (parser !== undefined && 'serialize' in parser) {\n        return Array.isArray(value) ?\n          value.map(e => (parser as Parser).serialize(e, api.options)) :\n          parser.serialize(value, api.options);\n      }\n    }\n    return value;\n  }\n\n  toJSON() {\n    return {\n      segments: this.pathSegments.toJSON(),\n      options: this.queryOptions.toJSON()\n    };\n  }\n\n  alias(name: string, value?: any) {\n    return this.queryOptions.alias(name, value);\n  }\n\n  // Base Requests\n  protected request(\n    method: string,\n    options: HttpOptions & {\n      attrs?: any,\n      etag?: string,\n      responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n      withCount?: boolean\n    }): Observable {\n\n    let api = options.apiName ? this.client.apiByName(options.apiName) : this.api;\n    const copts = api.options;\n    let params = options.params || {};\n    if (options.withCount) {\n      params = Http.mergeHttpParams(params, copts.helper.countParam());\n    }\n\n    let responseType: 'arraybuffer' | 'blob' | 'json' | 'text' =\n      (options.responseType && ['property', 'entity', 'entities'].indexOf(options.responseType) !== -1) ?\n        'json' :\n      (options.responseType === 'value') ?\n        'text' :\n        options.responseType;\n\n    let body = null;\n    if (options.attrs !== undefined) {\n      let type = this.type();\n      if (type !== null) {\n        let parser = api.findParserForType(type);\n        if (parser !== undefined) {\n            body = parser.serialize(options.attrs, copts);\n        }\n      } else  {\n        body = options.attrs;\n      }\n    }\n\n    let etag = options.etag;\n    if (etag === undefined && options.attrs != null) {\n      etag = copts.helper.etag(options.attrs);\n    }\n    const res$ = this.client.request(method, this, {\n      body,\n      etag,\n      apiName: options.apiName,\n      headers: options.headers,\n      observe: 'response',\n      params: params,\n      responseType: responseType,\n      reportProgress: options.reportProgress,\n      withCredentials: options.withCredentials,\n      fetchPolicy: options.fetchPolicy\n    });\n    switch (options.responseType) {\n      case 'entities':\n        return res$.pipe(map((res: ODataResponse) => res.entities()));\n      case 'entity':\n        return res$.pipe(map((res: ODataResponse) => res.entity()));\n      case 'property':\n        return res$.pipe(map((res: ODataResponse) => res.property()));\n      case 'value':\n        return res$.pipe(map((res: ODataResponse) => res.value() as Type));\n      default:\n        return res$.pipe(map((res: ODataResponse) => res.body));\n    }\n  }\n\n  protected get(options: HttpOptions & {\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('GET', options);\n  }\n\n  protected post(attrs: any, options: HttpOptions & {\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('POST', Object.assign(options, { attrs }));\n  }\n\n  protected put(attrs: any, options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('PUT', Object.assign(options, { attrs }));\n  }\n\n  protected patch(attrs: any, options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('PATCH', Object.assign(options, { attrs }));\n  }\n\n  protected delete(options: HttpOptions & {\n    etag?: string,\n    responseType?: 'arraybuffer' | 'blob' | 'value' | 'property' | 'entity' | 'entities',\n    withCount?: boolean\n  } = {}): Observable {\n    return this.request('DELETE', options);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponse.html":{"url":"classes/ODataResponse.html","title":"class - ODataResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/response.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HttpResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _options\n                            \n                            \n                                    Readonly\n                                api\n                            \n                            \n                                    Readonly\n                                resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deserialize\n                            \n                            \n                                entities\n                            \n                            \n                                entity\n                            \n                            \n                                    Static\n                                fromHttpResponse\n                            \n                            \n                                    Static\n                                fromJSON\n                            \n                            \n                                    Private\n                                parse\n                            \n                            \n                                property\n                            \n                            \n                                toJSON\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/response.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ODataResponseOptions | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deserialize(type: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \nentities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntities\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntity\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromHttpResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromHttpResponse(req: ODataRequest, res: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:31\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromJSON\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromJSON(req: ODataRequest, json: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                ODataRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    json\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(parser: Parser, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parser\n                                    \n                                                Parser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataProperty\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { body: any; headers: any; status: any; statusText: any; url: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T | null\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/response.ts:74\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ODataEntityMeta, ODataEntitiesMeta, ODataPropertyMeta } from './meta';\nimport { Parser } from '../../types';\nimport { Types } from '../../utils/types';\nimport { ODataResource } from '../resource';\nimport { ODataEntityParser } from '../../parsers/entity';\nimport { ODataEntities, ODataEntity, ODataProperty } from './types';\nimport { APPLICATION_JSON, ODATA_VERSION_HEADERS, CONTENT_TYPE, CACHE_CONTROL, MAX_AGE } from '../../constants';\nimport { ODataApi } from '../../api';\nimport { ODataRequest } from '../request';\nimport { ODataResponseOptions } from './options';\n\nexport class ODataResponse extends HttpResponse {\n  readonly api: ODataApi;\n  readonly resource: ODataResource;\n\n  constructor(init: {\n      api: ODataApi,\n      resource: ODataResource,\n      body: T | null;\n      headers: HttpHeaders;\n      status: number;\n      statusText: string;\n      url?: string;\n  }) {\n    super(init);\n    this.api = init.api;\n    this.resource = init.resource;\n  }\n\n  static fromHttpResponse(req: ODataRequest, res: HttpResponse) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: res.body,\n      headers: res.headers,\n      status: res.status,\n      statusText: res.statusText,\n      url: res.url || undefined,\n    });\n  }\n\n  static fromJSON(req: ODataRequest, json: {\n      body: T | null;\n      headers: {[name: string]: string | string[]};\n      status: number;\n      statusText: string;\n      url: string | null;\n  }) {\n    return new ODataResponse({\n      api: req.api,\n      resource: req.resource,\n      body: json.body,\n      headers: new HttpHeaders(json.headers),\n      status: json.status,\n      statusText: json.statusText,\n      url: json.url || undefined,\n    });\n  }\n\n  toJSON() {\n    return {\n      body: this.body,\n      headers: this.headers.keys()\n        .map(name => ({[name]: this.headers.getAll(name) || []}))\n        .reduce((acc, header) => Object.assign(acc, header), {}),\n      status: this.status,\n      statusText: this.statusText,\n      url: this.url\n    }\n  }\n\n  private _options: ODataResponseOptions | null = null;\n  get options(): ODataResponseOptions {\n    if (this._options === null) {\n      this._options = new ODataResponseOptions(this.api.options);\n      const contentType = this.headers.get(CONTENT_TYPE);\n      if (contentType && contentType.indexOf(APPLICATION_JSON) !== -1) {\n        const features = contentType.split(\",\").find(p => p.startsWith(APPLICATION_JSON)) as string;\n        this._options.setFeatures(features);\n      }\n      const key = this.headers.keys().find(k => ODATA_VERSION_HEADERS.indexOf(k) !== -1);\n      if (key) {\n        const version = (this.headers.get(key) || \"\").replace(/\\;/g, \"\") as '2.0' | '3.0' | '4.0';\n        this._options.setVersion(version);\n      }\n      const cacheControl = this.headers.get(CACHE_CONTROL);\n      if (cacheControl) {\n        this._options.setCache(cacheControl);\n      }\n    }\n    return this._options;\n  }\n\n  private parse(parser: Parser, value: any): any {\n    const type = Types.isObject(value) ? this.options.helper.type(value) : undefined;\n    if (type !== undefined && parser instanceof ODataEntityParser) {\n      parser = parser.findParser(c => c.isTypeOf(type));\n    }\n    return parser.deserialize(value, this.options);\n  }\n\n  private deserialize(type: string, value: any): any {\n    const parser = this.api.findParserForType(type);\n    if (parser !== undefined)\n      return Array.isArray(value) ?\n        value.map(v => this.parse(parser, v)) :\n        this.parse(parser, value);\n    return value;\n  }\n\n  entity(): ODataEntity {\n    const payload = this.body && this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataEntityMeta(payload || {}, {options: this.options, headers: this.headers});\n    //TODO: View the type in meta.context\n    const type = this.resource.type();\n    const entity = payload ?\n      (type !== null ? this.deserialize(type, meta.data(payload)) : payload) as T:\n      null;\n    return { entity, meta };\n  }\n\n  entities(): ODataEntities {\n    const payload = this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataEntitiesMeta(payload || {}, {options: this.options, headers: this.headers});\n    //TODO: View the type in meta.context\n    const type = this.resource.type();\n    const entities = payload ?\n      (type !== null ? this.deserialize(type, meta.data(payload)) : payload) as T[]:\n      null;\n    return { entities, meta };\n  }\n\n  property(): ODataProperty {\n    const payload = this.options.version === \"2.0\" ? (this.body)[\"d\"] : this.body;\n    const meta = new ODataPropertyMeta(payload || {}, {options: this.options, headers: this.headers});\n    //TODO: View the type in meta.context\n    const type = this.resource.type();\n    const property = payload ?\n      (type !== null ? this.deserialize(type, meta.data(payload)) : payload) as T:\n      null;\n    return { property, meta };\n  }\n\n  value(): T | null {\n    const payload = this.body && this.options.version === \"2.0\" ? this.body : this.body;\n    const type = this.resource.type();\n    return payload ?\n      (type !== null ? this.deserialize(type, payload) : payload) as T:\n      null;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataResponseOptions.html":{"url":"classes/ODataResponseOptions.html","title":"class - ODataResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/options.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ResponseOptions\n                            OptionsHelper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                cacheability\n                            \n                            \n                                    Optional\n                                ieee754Compatible\n                            \n                            \n                                    Optional\n                                maxAge\n                            \n                            \n                                    Optional\n                                metadata\n                            \n                            \n                                    Optional\n                                streaming\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                setCache\n                            \n                            \n                                setFeatures\n                            \n                            \n                                setVersion\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    helper\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Options)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/options.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Options\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            cacheability\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ieee754Compatible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxAge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataMetadataType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            streaming\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataVersion\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResponseOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCache\n                        \n                        \n                    \n                \n            \n            \n                \nsetCache(cacheControl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cacheControl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFeatures\n                        \n                        \n                    \n                \n            \n            \n                \nsetFeatures(features: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    features\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setVersion\n                        \n                        \n                    \n                \n            \n            \n                \nsetVersion(version: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    version\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        helper\n                    \n                \n\n                \n                    \n                        gethelper()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/options.ts:23\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { DEFAULT_VERSION, MAX_AGE, VERSION_2_0, VERSION_3_0, VERSION_4_0 } from '../../constants';\nimport { ODataHelper } from '../../helpers/odata';\nimport { CacheCacheability, ODataMetadataType, ODataVersion, Options, OptionsHelper, ResponseOptions } from '../../types';\n\nexport class ODataResponseOptions implements ResponseOptions, OptionsHelper {\n  version: ODataVersion;\n  streaming?: boolean;\n  // OData\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  // Cache\n  cacheability?: 'public' | 'private' | 'no-cache' | 'no-store';\n  maxAge?: number;\n\n  constructor(config: Options) {\n    this.version = config.version || DEFAULT_VERSION;\n    this.metadata = config.metadata;\n    this.stringAsEnum = config.stringAsEnum;\n    this.ieee754Compatible = config.ieee754Compatible;\n  }\n\n  get helper() {\n    return ODataHelper[this.version];\n  }\n\n  clone() {\n    return new ODataResponseOptions(this);\n  }\n\n  setFeatures(features: string) {\n    features.split(\";\").forEach(o => {\n      let [k, v] = o.split(\"=\");\n      switch (k.trim()) {\n        case 'odata.metadata':\n          this.metadata = v as ODataMetadataType;\n          break;\n        case 'odata.streaming':\n          this.streaming = v == \"true\";\n          break;\n        case 'IEEE754Compatible':\n          this.ieee754Compatible = v == \"true\";\n          break;\n      }\n    });\n  }\n\n  setVersion(version: string) {\n    const value = version.replace(/\\;/g, \"\").trim();\n    if ([VERSION_2_0, VERSION_3_0, VERSION_4_0].indexOf(value) !== -1)\n      this.version = value as ODataVersion;\n  }\n\n  setCache(cacheControl: string) {\n    cacheControl.split(\",\").forEach(directive => {\n      if (directive.startsWith(MAX_AGE)) {\n        let maxAge = Number(directive.split(\"=\")[1]);\n        if (!Number.isNaN(maxAge))\n          this.maxAge = maxAge;\n      }\n      if (['public', 'private', 'no-cache', 'no-store'].indexOf(directive) !== -1) {\n        this.cacheability = directive as CacheCacheability;\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSchema.html":{"url":"classes/ODataSchema.html","title":"class - ODataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                alias\n                            \n                            \n                                annotations\n                            \n                            \n                                api\n                            \n                            \n                                callables\n                            \n                            \n                                containers\n                            \n                            \n                                entities\n                            \n                            \n                                enums\n                            \n                            \n                                namespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                    Public\n                                findCallableForType\n                            \n                            \n                                    Public\n                                findEntitySetForType\n                            \n                            \n                                    Public\n                                findEnumTypeForType\n                            \n                            \n                                    Public\n                                findStructuredTypeForType\n                            \n                            \n                                isNamespaceOf\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                                \n                                    entitySets\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: SchemaConfig, api: ODataApi)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        SchemaConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                        ODataApi\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            callables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataCallable[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataStructuredType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:12\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findCallableForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findCallableForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEntitySetForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEntitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findEnumTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findEnumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findStructuredTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findStructuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNamespaceOf\n                        \n                        \n                    \n                \n            \n            \n                \nisNamespaceOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/schema.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:47\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        entitySets\n                    \n                \n\n                \n                    \n                        getentitySets()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/schema.ts:51\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataStructuredType } from './structured-type';\nimport { ODataCallable } from './callable';\nimport { ODataEntityContainer } from './entity-container';\nimport { ODataEnumType } from './enum-type';\nimport { ODataApi } from '../api';\nimport { SchemaConfig, Parser, CallableConfig } from '../types';\nimport { ODataEntitySet } from './entity-set';\nimport { ODataAnnotation } from './annotation';\n\nexport class ODataSchema {\n  api: ODataApi;\n  namespace: string;\n  alias?: string;\n  enums: ODataEnumType[];\n  entities: ODataStructuredType[];\n  callables: ODataCallable[];\n  containers: ODataEntityContainer[];\n  annotations: ODataAnnotation[];\n\n  constructor(config: SchemaConfig, api: ODataApi) {\n    this.api = api;\n    this.namespace = config.namespace;\n    this.alias = config.alias;\n    this.enums = (config.enums || []).map(config => new ODataEnumType(config, this));\n    this.entities = (config.entities || []).map(config => new ODataStructuredType(config, this));\n    // Merge callables\n    let callableConfigs = (config.callables || []);\n    callableConfigs = callableConfigs.reduce((acc: CallableConfig[], config) => {\n      if (acc.every(c => c.name !== config.name)) {\n        config = callableConfigs.filter(c => c.name === config.name).reduce((acc, c) => {\n          acc.parameters = Object.assign(acc.parameters || {}, c.parameters || {});\n          return acc;\n        }, config);\n        return [...acc, config];\n      }\n      return acc;\n    }, [] as CallableConfig[]);\n    this.callables = callableConfigs.map(config => new ODataCallable(config, this));\n    this.containers = (config.containers || []).map(container => new ODataEntityContainer(container, this));\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isNamespaceOf(type: string) {\n    return type.startsWith(this.namespace) || (this.alias && type.startsWith(this.alias));\n  }\n\n  get options() {\n    return this.api.options;\n  }\n\n  get entitySets() {\n    return this.containers\n      .reduce(\n        (acc, container) => [...acc, ...container.entitySets], [] as ODataEntitySet[]);\n  }\n\n  //#region Find for Type\n  public findEnumTypeForType(type: string) {\n    return this.enums.find(e => e.isTypeOf(type));\n  }\n\n  public findStructuredTypeForType(type: string) {\n    return this.entities.find(e => e.isTypeOf(type));\n  }\n\n  public findCallableForType(type: string) {\n    return this.callables.find(e => e.isTypeOf(type));\n  }\n\n  public findEntitySetForType(type: string) {\n      return this.entitySets.find(e => e.isTypeOf(type));\n  }\n  //#endregion\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    // Configure Entities\n    this.entities\n      .forEach(config => config.configure(settings));\n    // Configure callables\n    this.callables\n      .forEach(callable => callable.configure(settings));\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataServiceFactory.html":{"url":"injectables/ODataServiceFactory.html","title":"injectable - ODataServiceFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataServiceFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entity\n                            \n                            \n                                singleton\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/factory.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \nentity(name: string, entityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:10\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singleton\n                        \n                        \n                    \n                \n            \n            \n                \nsingleton(name: string, entityType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:15\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    entityType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataSingletonService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ODataClient } from \"../client\";\nimport { ODataEntityService } from './entity';\nimport { ODataSingletonService } from './singleton';\n\n@Injectable()\nexport class ODataServiceFactory {\n  constructor(protected client: ODataClient) { }\n\n  entity(name: string, entityType?: string): ODataEntityService {\n    return new class extends ODataEntityService {\n    }(this.client, name, entityType);\n  }\n\n  singleton(name: string, entityType?: string): ODataSingletonService {\n    return new class extends ODataSingletonService {\n    }(this.client, name, entityType);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSettings.html":{"url":"classes/ODataSettings.html","title":"class - ODataSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apis\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiByName\n                            \n                            \n                                    Public\n                                apiForType\n                            \n                            \n                                    Public\n                                callableByName\n                            \n                            \n                                    Public\n                                callableFor\n                            \n                            \n                                    Public\n                                collectionByName\n                            \n                            \n                                    Public\n                                collectionForType\n                            \n                            \n                                configure\n                            \n                            \n                                    Public\n                                defaultApi\n                            \n                            \n                                    Public\n                                entitySetByName\n                            \n                            \n                                    Public\n                                entitySetForType\n                            \n                            \n                                    Public\n                                enumTypeByName\n                            \n                            \n                                    Public\n                                enumTypeForType\n                            \n                            \n                                    Public\n                                findForTypes\n                            \n                            \n                                    Public\n                                modelByName\n                            \n                            \n                                    Public\n                                modelForType\n                            \n                            \n                                    Public\n                                parserForType\n                            \n                            \n                                    Public\n                                structuredTypeByName\n                            \n                            \n                                    Public\n                                structuredTypeForType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: ApiConfig[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/settings.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        ApiConfig[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apis\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataApi[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/settings.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            apiForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    apiForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            callableByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callableByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:132\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            callableFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    callableFor(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:69\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            defaultApi\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defaultApi()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entitySetByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entitySetByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entitySetForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entitySetForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumTypeByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumTypeByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:114\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:51\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findForTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findForTypes(types: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    types\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parserForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parserForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:87\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            structuredTypeByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    structuredTypeByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:123\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            structuredTypeForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    structuredTypeForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/settings.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiConfig, Parser } from './types';\nimport { ODataApi } from './api';\nimport { ODataCallable, ODataEntitySet, ODataEnumType, ODataStructuredType } from './schema';\nimport { ODataRequest } from './resources';\nimport { Observable } from 'rxjs';\nimport { ODataCollection, ODataModel } from './models';\n\nexport class ODataSettings {\n  apis: ODataApi[];\n\n  constructor(...configs: ApiConfig[]) {\n    this.apis = configs.map(config => new ODataApi(config));\n    if (this.apis.length > 1) {\n      if (this.apis.some(c => c.name === undefined))\n        throw new Error(\"Multiple APIs: Needs configuration names\");\n      if (this.apis.filter(c => c.default).length > 1)\n        throw new Error(\"Multiple APIs: Needs only one default api\");\n    }\n    // If not default setup first config as default api\n    if (this.apis.every(c => !c.default))\n      this.apis[0].default = true;\n  }\n\n  configure(settings: { requester?: (request: ODataRequest) => Observable }) {\n    this.apis.forEach(api => api.configure(settings));\n  }\n\n  public defaultApi() {\n    return this.apis.find(c => c.default) as ODataApi;\n  }\n\n  public apiByName(name: string) {\n    const api = this.apis.find(c => c.name === name);\n    if (api === undefined)\n      throw new Error(`No API for name: ${name}`);\n    return api;\n  }\n\n  public findForTypes(types: string[]) {\n    return this.apis.find(c => c.schemas.some(s => types.some(type => s.isNamespaceOf(type))));\n  }\n\n  public apiForType(type: string) {\n    const api = this.apis.find(a => a.schemas.some(s => s.isNamespaceOf(type)));\n    if (api === undefined)\n      throw new Error(`No API for type: ${type}`);\n    return api;\n  }\n\n  //#region Configs shortcuts\n  public enumTypeForType(type: string) {\n    let values = this.apis.map(api => api.findEnumTypeForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Enum for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataEnumType;\n  }\n\n  public structuredTypeForType(type: string) {\n    let values = this.apis.map(api => api.findStructuredTypeForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Structured for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataStructuredType;\n  }\n\n  public callableFor(type: string) {\n    let values = this.apis.map(api => api.findCallableForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Callable for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataCallable;\n  }\n\n  public entitySetForType(type: string) {\n    let values = this.apis.map(api => api.findEntitySetForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No EntitySet for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataEntitySet;\n  }\n\n  public parserForType(type: string) {\n    let values = this.apis.map(api => api.findParserForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Parser for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as Parser;\n  }\n\n  public modelForType(type: string) {\n    let values = this.apis.map(api => api.findModelForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Model for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as typeof ODataModel;\n  }\n\n  public collectionForType(type: string) {\n    let values = this.apis.map(api => api.findCollectionForType(type)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Collection for type ${type} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as typeof ODataCollection;\n  }\n\n  public enumTypeByName(name: string) {\n    let values = this.apis.map(api => api.findEnumTypeByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Enum for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataEnumType;\n  }\n\n  public structuredTypeByName(name: string) {\n    let values = this.apis.map(api => api.findStructuredTypeByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Structured for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataStructuredType;\n  }\n\n  public callableByName(name: string) {\n    let values = this.apis.map(api => api.findCallableByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Callable for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataCallable;\n  }\n\n  public entitySetByName(name: string) {\n    let values = this.apis.map(api => api.findEntitySetByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No EntitySet for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as ODataEntitySet;\n  }\n\n  public modelByName(name: string) {\n    let values = this.apis.map(api => api.findModelByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Model for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as typeof ODataModel;\n  }\n\n  public collectionByName(name: string) {\n    let values = this.apis.map(api => api.findCollectionByName(name)).filter(e => e);\n    if (values.length === 0)\n      throw Error(`No Collection for name ${name} was found`);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0] as typeof ODataCollection;\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSingletonService.html":{"url":"classes/ODataSingletonService.html","title":"class - ODataSingletonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSingletonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/singleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    api\n                                \n                                \n                                    entitySetSchema\n                                \n                                \n                                    structuredSchema\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient, name: string, entityType?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/singleton.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:13\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/singleton.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataSingletonResource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/singleton.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        entitySetSchema\n                    \n                \n\n                \n                    \n                        getentitySetSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/singleton.ts:23\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        structuredSchema\n                    \n                \n\n                \n                    \n                        getstructuredSchema()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/services/singleton.ts:28\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataClient } from \"../client\";\nimport { ODataModel } from '../models/model';\nimport { ODataSingletonResource } from '../resources';\n\nexport class ODataSingletonService {\n  constructor(protected client: ODataClient, protected name: string, protected entityType?: string) { }\n\n  public entity(): ODataSingletonResource {\n    return this.client.singleton(this.name, this.entityType);\n  }\n\n  // Models\n  public attach>(value: M): M {\n    return value.attach(this.entity());\n  }\n\n  // Service Config\n  get api() {\n    return this.client.apiForType(this.entityType);\n  }\n\n  // Service Config\n  get entitySetSchema() {\n    return this.api.findEntitySetByName(this.name);\n  }\n\n  // Entity Config\n  get structuredSchema() {\n    if (this.entityType === undefined)\n      return null;\n    return this.api.findStructuredTypeForType(this.entityType) || null;\n  }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataStructuredType.html":{"url":"classes/ODataStructuredType.html","title":"class - ODataStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/schema/structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                    Optional\n                                model\n                            \n                            \n                                name\n                            \n                            \n                                parser\n                            \n                            \n                                schema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                fields\n                            \n                            \n                                findField\n                            \n                            \n                                isTypeOf\n                            \n                            \n                                pick\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    options\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: StructuredTypeConfig, schema: ODataSchema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/schema/structured-type.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        StructuredTypeConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ODataSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSchema\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields(opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { include_navigation: false, include_parents: true }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityFieldParser[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findField\n                        \n                        \n                    \n                \n            \n            \n                \nfindField(name: P)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:56\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                            P\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isTypeOf\n                        \n                        \n                    \n                \n            \n            \n                \nisTypeOf(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pick\n                        \n                        \n                    \n                \n            \n            \n                \npick(value: literal type, opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { include_navigation: false, include_parents: true, include_etag: true }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Partial\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n\n                \n                    \n                        getoptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/schema/structured-type.ts:30\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataEntityFieldParser, ODataEntityParser } from '../parsers';\nimport { Parser, StructuredTypeConfig } from '../types';\nimport { ODataAnnotation } from './annotation';\nimport { ODataSchema } from './schema';\n\nexport class ODataStructuredType {\n  schema: ODataSchema;\n  name: string;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  parser: ODataEntityParser;\n  annotations: ODataAnnotation[];\n\n  constructor(config: StructuredTypeConfig, schema: ODataSchema) {\n    this.schema = schema;\n    this.name = config.name;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, schema.namespace, schema.alias);\n    this.annotations = (config.annotations || []).map(annot => new ODataAnnotation(annot));\n  }\n\n  isTypeOf(type: string) {\n    var names = [`${this.schema.namespace}.${this.name}`];\n    if (this.schema.alias)\n      names.push(`${this.schema.alias}.${this.name}`);\n    return names.indexOf(type) !== -1;\n  }\n\n  get options() {\n    return this.schema.options;\n  }\n\n  configure(settings: { findParserForType: (type: string) => Parser | undefined }) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = { include_navigation: false, include_parents: true }): ODataEntityFieldParser[] {\n    let parent = this.parser as ODataEntityParser | undefined;\n    let fields = []>[];\n    while (parent !== undefined) {\n      fields = [\n        ...parent.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parent = parent.parent;\n    }\n    return fields;\n  }\n\n  findField(name: P) {\n    return this.fields().find(f => f.name === name);\n  }\n\n  pick(value: {[name:string]: any}, opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean,\n    include_etag?: boolean\n  } = { include_navigation: false, include_parents: true, include_etag: true }): Partial {\n    const names = this.fields(opts).map(f => f.name);\n    let attrs = Object.keys(value)\n      .filter(k => names.indexOf(k) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: value[k] }), {});\n    if (opts.include_etag) {\n      const etag = this.options.helper.etag(value);\n      this.options.helper.etag(attrs, etag);\n    }\n    return attrs;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataValueResource.html":{"url":"classes/ODataValueResource.html","title":"class - ODataValueResource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataValueResource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/types/value.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataResource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                pathSegments\n                            \n                            \n                                    Protected\n                                queryOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                arraybuffer\n                            \n                            \n                                blob\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                get\n                            \n                            \n                                alias\n                            \n                            \n                                asCollection\n                            \n                            \n                                asModel\n                            \n                            \n                                    Abstract\n                                clone\n                            \n                            \n                                    Protected\n                                delete\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                patch\n                            \n                            \n                                pathAndParams\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                put\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                serialize\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                type\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataClient\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:28\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            pathSegments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataPathSegments\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            queryOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataQueryOptions\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataResource\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataResource:30\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            arraybuffer\n                        \n                        \n                    \n                \n            \n            \n                \narraybuffer(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            blob\n                        \n                        \n                    \n                \n            \n            \n                \nblob(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataValueResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(client: ODataClient, type: string | null, segments: ODataPathSegments, options: ODataQueryOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        V\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                ODataClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    segments\n                                    \n                                                ODataPathSegments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                ODataQueryOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataValueResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/types/value.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:125\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asCollection\n                        \n                        \n                    \n                \n            \n            \n                \nasCollection(entities: Partial[], meta?: ODataEntitiesMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:84\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entities\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntitiesMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            asModel\n                        \n                        \n                    \n                \n            \n            \n                \nasModel(entity: Partial, meta?: ODataEntityMeta)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:75\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        M\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    meta\n                                    \n                                                ODataEntityMeta\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:102\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:226\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:196\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            patch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:218\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pathAndParams\n                        \n                        \n                    \n                \n            \n            \n                \npathAndParams()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:64\n\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:203\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(attrs: any, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:210\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            request\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    request(method: string, options)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:130\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:104\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:118\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { segments: any; options: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:94\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            type\n                        \n                        \n                    \n                \n            \n            \n                \ntype()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:45\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        string The type of the resource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataResource\n\n                \n            \n            \n                \n                        Defined in         ODataResource:53\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        string All covered types of the resource\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\nimport { ODataResource } from '../resource';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions } from '../query-options';\nimport { ODataClient } from '../../client';\nimport { HttpOptions } from './options';\nimport { $VALUE } from '../../constants';\n\nexport class ODataValueResource extends ODataResource {\n  //#region Factory\n  static factory(client: ODataClient, type: string | null, segments: ODataPathSegments, options: ODataQueryOptions) {\n    const segment = segments.segment(PathSegmentNames.value, $VALUE);\n    if (type)\n      segment.setType(type);\n    options.clear();\n    return new ODataValueResource(client, segments, options);\n  }\n\n  clone() {\n    return new ODataValueResource(this.client, this.pathSegments.clone(), this.queryOptions.clone());\n  }\n  //#endregion\n\n  //#region Requests\n  arraybuffer(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({ responseType: 'arraybuffer' }, options || {})\n    );\n  }\n\n  blob(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({ responseType: 'blob' }, options || {})\n    );\n  }\n\n  get(options?: HttpOptions): Observable {\n    return super.get(\n      Object.assign({ responseType: 'value' }, options || {})\n    );\n  }\n  //#endregion\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionHandler.html":{"url":"classes/OptionHandler.html","title":"class - OptionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assertArray\n                            \n                            \n                                    Private\n                                assertObject\n                            \n                            \n                                assign\n                            \n                            \n                                at\n                            \n                            \n                                clear\n                            \n                            \n                                empty\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                push\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                toJSON\n                            \n                            \n                                unset\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: PlainObject, n: QueryOptionNames)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:107\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        PlainObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        n\n                                                  \n                                                        \n                                                                        QueryOptionNames\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertObject(create: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    create\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PlainObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \nassign(values: PlainObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                PlainObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            at\n                        \n                        \n                    \n                \n            \n            \n                \nat(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            empty\n                        \n                        \n                    \n                \n            \n            \n                \nempty()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(path: string, def?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            push\n                        \n                        \n                    \n                \n            \n            \n                \npush(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(path: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unset\n                        \n                        \n                    \n                \n            \n            \n                \nunset(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue(v?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:110\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\nimport { PlainObject } from './builder';\n\nimport { Dates, Types, Urls } from '../utils';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options: PlainObject;\n\n  constructor(options?: PlainObject) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): PlainObject {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? Urls.parseQueryString(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    if (Types.isArray(custom)) {\n      //TODO: split test for item type\n      custom = custom.reduce((acc: {[name: string]: any}, item: {[name: string]: any}) => Object.assign(acc, item), {});\n    }\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return Dates.isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return this.options[name] !== undefined;\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter(k => names.indexOf(k as QueryOptionNames) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: PlainObject, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  empty() {\n    return Types.isEmpty(this.o[this.n]);\n  }\n\n  //#region Primitive Value\n  value(v?: any) {\n    return v !== undefined && (this.o[this.n] = v) || this.o[this.n];\n  }\n  //#endregion\n\n  //#region Array Value\n  private assertArray(): any[] {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = this.o[this.n] !== undefined ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n  //#endregion\n\n  //#region HashMap Value\n  private assertObject(create: boolean): PlainObject {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj && create) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(path: string, value: any) {\n    let obj = this.assertObject(true);\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    pathArray.reduce((acc, key, i) => {\n      if (acc[key] === undefined) acc[key] = {};\n      if (i === pathArray.length - 1) acc[key] = value;\n      return acc[key];\n    }, obj);\n  }\n\n  get(path: string, def?: any): any {\n    let obj = this.assertObject(false) || {};\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n    // Find value if exist return otherwise return undefined value;\n    return (pathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj) || def);\n  }\n\n  unset(path: string) {\n    let obj = this.assertObject(true);\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    pathArray.reduce((acc, key, i) => {\n      if (i === pathArray.length - 1) delete acc[key];\n      return acc[key];\n    }, obj);\n\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter((v: any) => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(path: string) {\n    let obj = this.assertObject(false) || {};\n    // Check if path is string or array. Regex : ensure that we do not have '.' and brackets.\n    const pathArray = (Types.isArray(path) ? path : path.match(/([^[.\\]])+/g)) as any[];\n\n    return !!pathArray.reduce((prevObj, key) => prevObj && prevObj[key], obj);\n  }\n\n  assign(values: PlainObject) {\n    let obj = this.assertObject(true);\n    Object.assign(obj, values);\n  }\n  //#endregion\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Options.html":{"url":"interfaces/Options.html","title":"interface - Options","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Options\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        ieee754Compatible\n                                \n                                \n                                            Optional\n                                        metadata\n                                \n                                \n                                            Optional\n                                        streaming\n                                \n                                \n                                            Optional\n                                        stringAsEnum\n                                \n                                \n                                            Optional\n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ieee754Compatible\n                                    \n                                \n                                \n                                    \n                                        ieee754Compatible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        metadata\n                                    \n                                \n                                \n                                    \n                                        metadata:         ODataMetadataType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataMetadataType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streaming\n                                    \n                                \n                                \n                                    \n                                        streaming:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stringAsEnum\n                                    \n                                \n                                \n                                    \n                                        stringAsEnum:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         ODataVersion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersion\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OptionsHelper.html":{"url":"interfaces/OptionsHelper.html","title":"interface - OptionsHelper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OptionsHelper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        helper\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        helper\n                                    \n                                \n                                \n                                    \n                                        helper:         ODataVersionHelper\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ODataVersionHelper\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parser.html":{"url":"interfaces/Parser.html","title":"interface - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    deserialize\n                                \n                                \n                                    serialize\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deserialize\n                        \n                        \n                    \n                \n            \n            \n                \ndeserialize(value: any, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            serialize\n                        \n                        \n                    \n                \n            \n            \n                \nserialize(value: T, options: OptionsHelper)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                OptionsHelper\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseOptions.html":{"url":"interfaces/ResponseOptions.html","title":"interface - ResponseOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Options\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        cacheability\n                                \n                                \n                                            Optional\n                                        maxAge\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cacheability\n                                    \n                                \n                                \n                                    \n                                        cacheability:         CacheCacheability\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CacheCacheability\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SegmentHandler.html":{"url":"classes/SegmentHandler.html","title":"class - SegmentHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SegmentHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                option\n                            \n                            \n                                setPath\n                            \n                            \n                                setType\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    type\n                                \n                                \n                                    path\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segment: ODataSegment)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:123\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                  \n                                                        \n                                                                        ODataSegment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlainObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:123\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(type: SegmentOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:149\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SegmentOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:128\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:132\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n\n                \n                    \n                        getpath()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:140\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, Dates } from '../utils';\n\nimport { OptionHandler } from './query-options';\nimport { PATH_SEPARATOR } from '../constants';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport enum SegmentOptionNames {\n  key = 'key',\n  parameters = 'parameters'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type?: string;\n  options: PlainObject;\n}\n\nfunction pathSegmentsBuilder(segment: ODataSegment): string {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      let parameters = segment.options[SegmentOptionNames.parameters];\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.options[SegmentOptionNames.key];\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = (segments || []).map(({name, path, type, options}) => ({name, path, type, options: options || {}}));\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => t !== undefined) as string[];\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => {\n      let json = { name: segment.name, path: segment.path, type: segment.type };\n      let options = Dates.isoStringToDate(JSON.parse(JSON.stringify(segment.options)));\n      if (!Types.isEmpty(options))\n        json.options = options;\n      return json;\n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(name: string, path?: string) {\n    // Backward search\n    return [...this.segments].reverse().find(s =>\n      s.name === name &&\n      (path === undefined || s.path === path));\n  }\n\n  last() {\n    return (this.segments.length > 0) ?\n       new SegmentHandler(this.segments[this.segments.length - 1]) : null;\n  }\n\n  segment(name: string, path?: string) {\n    let segment = this.find(name, path);\n    if (!segment && path !== undefined) {\n      segment = { name, path, options: {} } as ODataSegment;\n      this.segments.push(segment);\n    }\n    if (segment === undefined)\n      throw new Error(`No segment with name: ${name}`)\n    return new SegmentHandler(segment);\n  }\n\n  has(name: string, path?: string) {\n    return !!this.find(name, path);\n  }\n\n  remove(name: string, path?: string) {\n    let segment = this.find(name, path);\n    this.segments = this.segments.filter(s => s !== segment);\n  }\n}\n\nexport class SegmentHandler {\n  options: PlainObject\n  constructor(private segment: ODataSegment) {\n    this.options = this.segment.options;\n  }\n\n  get name() {\n    return this.segment.name;\n  }\n\n  get type() {\n    return this.segment.type || null;\n  }\n\n  setType(value: string) {\n    this.segment.type = value;\n  }\n\n  get path() {\n    return this.segment.path;\n  }\n\n  setPath(value: string) {\n    this.segment.path = value;\n  }\n\n  // Option Handler\n  option(type: SegmentOptionNames, opts?: T) {\n    if (opts !== undefined)\n      this.options[type] = opts;\n    return new OptionHandler(this.options, type as any);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoragePayload.html":{"url":"interfaces/StoragePayload.html","title":"interface - StoragePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StoragePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/cache/storage.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        body\n                                \n                                \n                                        headers\n                                \n                                \n                                        status\n                                \n                                \n                                        statusText\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusText\n                                    \n                                \n                                \n                                    \n                                        statusText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ODataRequest, ODataResponse } from '../resources';\nimport { ODataCache, ODataCacheEntry } from './cache';\n\ninterface StoragePayload {\n    body: any | null;\n    headers: {[name: string]: string | string[]};\n    status: number;\n    statusText: string;\n    url: string | null;\n}\n\nexport class ODataInStorageCache extends ODataCache {\n  constructor(init: {timeout?: number, name: string, storage?: Storage}) {\n    super(init);\n    const name = init.name;\n    const storage = init.storage || sessionStorage;\n    this.entries = new Map>(JSON.parse(storage.getItem(name) || \"[]\"));\n    window.addEventListener(\"beforeunload\", ((backend, key, responses) => function() {\n      backend.setItem(key, JSON.stringify(Array.from(responses.entries())))\n    })(storage, name, this.entries));\n  }\n\n  putResponse(req: ODataRequest, res: ODataResponse) {\n    this.put(req.urlWithParams, res.toJSON(), res.options.maxAge);\n  }\n\n  getResponse(req: ODataRequest): ODataResponse | undefined {\n    const data = this.get(req.urlWithParams);\n\n    return data !== undefined ? ODataResponse.fromJSON(req, data) : undefined;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeField.html":{"url":"interfaces/StructuredTypeField.html","title":"interface - StructuredTypeField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StructuredTypeField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        annotations\n                                \n                                \n                                            Optional\n                                        collection\n                                \n                                \n                                            Optional\n                                        default\n                                \n                                \n                                            Optional\n                                        field\n                                \n                                \n                                            Optional\n                                        key\n                                \n                                \n                                            Optional\n                                        maxLength\n                                \n                                \n                                            Optional\n                                        navigation\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        precision\n                                \n                                \n                                            Optional\n                                        ref\n                                \n                                \n                                            Optional\n                                        scale\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        annotations\n                                    \n                                \n                                \n                                    \n                                        annotations:         Annotation[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Annotation[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collection\n                                    \n                                \n                                \n                                    \n                                        collection:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                    \n                                \n                                \n                                    \n                                        key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxLength\n                                    \n                                \n                                \n                                    \n                                        maxLength:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        navigation\n                                    \n                                \n                                \n                                    \n                                        navigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precision\n                                    \n                                \n                                \n                                    \n                                        precision:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ref\n                                    \n                                \n                                \n                                    \n                                        ref:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StructuredTypeFieldOptions.html":{"url":"interfaces/StructuredTypeFieldOptions.html","title":"interface - StructuredTypeFieldOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StructuredTypeFieldOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n            \n                Extends\n            \n            \n                        OptionsHelper\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         StructuredTypeField\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StructuredTypeField\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\nexport type ODataContext = {\n  metadata?: string;\n  singleton?: string;\n  entitySet?: string;\n  property?: string;\n  entity?: string;\n}\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions;\n\nexport interface Annotation {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport interface StructuredTypeField {\n  type: string;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  precision?: number;\n  annotations?: Annotation[];\n  scale?: number;\n  ref?: string;\n}\n\nexport interface EnumTypeField {\n  value: number;\n  annotations?: Annotation[];\n}\n\nexport interface ODataVersionHelper {\n  VALUE: string;\n  ODATA_ANNOTATION_PREFIX: string;\n  ODATA_FUNCTION_PREFIX: string;\n  ODATA_ID: string;\n  ODATA_COUNT: string;\n  ODATA_ETAG: string;\n  ODATA_CONTEXT: string;\n  ODATA_MEDIA_ETAG: string;\n  entity(value: {[name: string]: any}, context: ODataContext): any;\n  entities(value: {[name: string]: any}, context: ODataContext): any;\n  property(value: {[name: string]: any}, context: ODataContext): any;\n  annotations(value: {[name: string]: any}): {[name: string]: any};\n  attributes(value: {[name: string]: any}): {[name: string]: any};\n  id(value: {[name: string]: any}, id?: string): string;\n  etag(value: {[name: string]: any}, etag?: string): string;\n  context(value: {[name: string]: any}): ODataContext;\n  functions(value: {[name: string]: any}): {[name: string]: any};\n  properties(value: {[name: string]: any}): {[name: string]: any};\n  mediaEtag(value: {[name: string]: any}): string;\n  metadataEtag(value: {[name: string]: any}): string;\n  type(value: {[name: string]: any}): string;\n  nextLink(value: {[name: string]: any}): string;\n  readLink(value: {[name: string]: any}): string;\n  mediaReadLink(value: {[name: string]: any}): string;\n  editLink(value: {[name: string]: any}): string;\n  mediaEditLink(value: {[name: string]: any}): string;\n  mediaContentType(value: {[name: string]: any}): string;\n  deltaLink(value: {[name: string]: any}): string;\n  count(value: {[name: string]: any}): number;\n  countParam(): {[name: string]: string};\n}\n\n/* Api Options\n  version:\n  metadata:\n  params:\n  headers:\n  stringAsEnum:\n  ieee754Compatible:\n  fetchPolicy:\n    note: from Apollo https://medium.com/@galen.corey/understanding-apollo-fetch-policies-705b5ad71980\n    cache-first:\n      1 You query for some data. Client checks the cache for the data.\n        If all of the data is present in the cache, skip directly to step 4.\n      2 If the cache is missing some of the data you asked for,\n        Client will make a network request to your API.\n      3 The API responds with the data, Client uses it to update the cache.\n      4 The requested data is returned.\n    cache-and-network:\n      1 You query for some data. Client checks the cache for the data.\n      2 If the data is in the cache, return that cached data.\n      3 Regardless of whether any data was found in step two,\n        pass the query along to the API to get the most up-to-date data.\n      4 Update the cache with any new data from the API.\n      5 Return the updated API data.\n    network-only:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds with your data and the cache is updated.\n      3 The data is returned.\n    no-cache:\n      1 Client makes a network request for your data without checking the cache.\n      2 The server responds and the data is returned without updating the cache.\n    cache-only:\n      1 Client checks the cache for queried data.\n      2 If all the data is present in the cache, it is returned (otherwise, an error is thrown).\n*/\nexport type ODataVersion = '2.0' | '3.0' | '4.0';\nexport type FetchPolicy = 'cache-first' | 'cache-and-network' | 'network-only' | 'no-cache' | 'cache-only';\nexport type ODataMetadataType = 'minimal' | 'full' | 'none';\nexport type CacheCacheability = 'public' | 'private' | 'no-cache' | 'no-store';\n\nexport interface Options {\n  version?: ODataVersion;\n  metadata?: ODataMetadataType;\n  stringAsEnum?: boolean;\n  ieee754Compatible?: boolean;\n  streaming?: boolean;\n}\n\nexport interface OptionsHelper extends Options {\n  helper: ODataVersionHelper;\n}\n\nexport interface ApiOptions extends Options {\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean;\n  fetchPolicy?: FetchPolicy;\n}\n\nexport interface ResponseOptions extends Options {\n  cacheability?: CacheCacheability;\n  maxAge?: number;\n}\n\nexport interface StructuredTypeFieldOptions extends OptionsHelper {\n  field: StructuredTypeField\n}\n\nexport interface Parser {\n  deserialize(value: any, options: OptionsHelper): T;\n  serialize(value: T, options: OptionsHelper): any;\n}\n\nexport interface Cache {\n  put(key: string, payload: T): void;\n  get(key: string): T | undefined;\n}\n\n//#region Configs\nexport type ApiConfig = {\n  serviceRootUrl: string;\n  name?: string;\n  version?: ODataVersion;\n  default?: boolean;\n  creation?: Date;\n  cache?: Cache;\n  errorHandler?: (error: any, caught: Observable) => Observable;\n  options?: ApiOptions;\n  parsers?: {[type: string]: Parser};\n  schemas?: SchemaConfig[];\n}\nexport type AnnotationConfig = {\n  type: string;\n  string?: string;\n  bool?: boolean;\n  int?: number;\n  permissions?: string[];\n  properties?: string[];\n}\nexport type SchemaConfig = {\n  namespace: string;\n  alias?: string;\n  annotations?: AnnotationConfig[];\n  enums?: EnumTypeConfig[];\n  entities?: StructuredTypeConfig[];\n  callables?: CallableConfig[];\n  containers?: EntityContainerConfig[]\n}\n\nexport type EntityContainerConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n  entitySets?: EntitySetConfig[];\n}\n\nexport type EnumTypeConfig = {\n  name: string;\n  flags?: boolean;\n  annotations?: AnnotationConfig[];\n  members: {[name: string]: number} | {[value: number]: string};\n  fields: { [member: string]: EnumTypeField };\n}\n\nexport type StructuredTypeConfig = {\n  name: string;\n  base?: string;\n  open?: boolean;\n  model?: { new(...params: any[]): any };\n  collection?: { new(...params: any[]): any };\n  annotations?: AnnotationConfig[];\n  fields: { [P in keyof T]?: StructuredTypeField };\n}\n\nexport type Parameter = {\n  type: string;\n  nullable?: boolean;\n  collection?: boolean;\n}\n\nexport type CallableConfig = {\n  name: string;\n  path?: string;\n  bound?: boolean;\n  composable?: boolean;\n  parameters?: { [name: string]: Parameter };\n  return?: string;\n}\nexport type EntitySetConfig = {\n  name: string;\n  annotations?: AnnotationConfig[];\n}\n//#endregion\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.1\n        \n            @angular/common : ~11.0.1\n        \n            @angular/compiler : ~11.0.1\n        \n            @angular/core : ~11.0.1\n        \n            @angular/forms : ~11.0.1\n        \n            @angular/platform-browser : ~11.0.1\n        \n            @angular/platform-browser-dynamic : ~11.0.1\n        \n            @angular/router : ~11.0.1\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FieldType   (projects/.../metadata.ts)\n                        \n                        \n                            PathSegmentNames   (projects/.../path-segments.ts)\n                        \n                        \n                            QueryOptionNames   (projects/.../query-options.ts)\n                        \n                        \n                            SegmentOptionNames   (projects/.../path-segments.ts)\n                        \n                        \n                            StandardAggregateMethods   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/responses/metadata.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldType\n                    \n                \n                        \n                            \n                                 ATTRIBUTE\n                            \n                        \n                        \n                            \n                                 TAG\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n            \n                \n                    \n                        \n                        PathSegmentNames\n                    \n                \n                        \n                            \n                                 batch\n                            \n                        \n                        \n                            \n                                Value : batch\n                            \n                        \n                        \n                            \n                                 metadata\n                            \n                        \n                        \n                            \n                                Value : metadata\n                            \n                        \n                        \n                            \n                                 entitySet\n                            \n                        \n                        \n                            \n                                Value : entitySet\n                            \n                        \n                        \n                            \n                                 singleton\n                            \n                        \n                        \n                            \n                                Value : singleton\n                            \n                        \n                        \n                            \n                                 type\n                            \n                        \n                        \n                            \n                                Value : type\n                            \n                        \n                        \n                            \n                                 property\n                            \n                        \n                        \n                            \n                                Value : property\n                            \n                        \n                        \n                            \n                                 navigationProperty\n                            \n                        \n                        \n                            \n                                Value : navigationProperty\n                            \n                        \n                        \n                            \n                                 reference\n                            \n                        \n                        \n                            \n                                Value : reference\n                            \n                        \n                        \n                            \n                                 value\n                            \n                        \n                        \n                            \n                                Value : value\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 function\n                            \n                        \n                        \n                            \n                                Value : function\n                            \n                        \n                        \n                            \n                                 action\n                            \n                        \n                        \n                            \n                                Value : action\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SegmentOptionNames\n                    \n                \n                        \n                            \n                                 key\n                            \n                        \n                        \n                            \n                                Value : key\n                            \n                        \n                        \n                            \n                                 parameters\n                            \n                        \n                        \n                            \n                                Value : parameters\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/query-options.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryOptionNames\n                    \n                \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 filter\n                            \n                        \n                        \n                            \n                                Value : filter\n                            \n                        \n                        \n                            \n                                 search\n                            \n                        \n                        \n                            \n                                Value : search\n                            \n                        \n                        \n                            \n                                 transform\n                            \n                        \n                        \n                            \n                                Value : transform\n                            \n                        \n                        \n                            \n                                 orderBy\n                            \n                        \n                        \n                            \n                                Value : orderBy\n                            \n                        \n                        \n                            \n                                 top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 skip\n                            \n                        \n                        \n                            \n                                Value : skip\n                            \n                        \n                        \n                            \n                                 skiptoken\n                            \n                        \n                        \n                            \n                                Value : skiptoken\n                            \n                        \n                        \n                            \n                                 expand\n                            \n                        \n                        \n                            \n                                Value : expand\n                            \n                        \n                        \n                            \n                                 format\n                            \n                        \n                        \n                            \n                                Value : format\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n            \n                \n                    \n                        \n                        StandardAggregateMethods\n                    \n                \n                        \n                            \n                                 sum\n                            \n                        \n                        \n                            \n                                Value : sum\n                            \n                        \n                        \n                            \n                                 min\n                            \n                        \n                        \n                            \n                                Value : min\n                            \n                        \n                        \n                            \n                                 max\n                            \n                        \n                        \n                            \n                                Value : max\n                            \n                        \n                        \n                            \n                                 average\n                            \n                        \n                        \n                            \n                                Value : average\n                            \n                        \n                        \n                            \n                                 countdistinct\n                            \n                        \n                        \n                            \n                                Value : countdistinct\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            addBody   (projects/.../client.ts)\n                        \n                        \n                            buildAggregate   (projects/.../builder.ts)\n                        \n                        \n                            buildExpand   (projects/.../builder.ts)\n                        \n                        \n                            buildFilter   (projects/.../builder.ts)\n                        \n                        \n                            buildGroupBy   (projects/.../builder.ts)\n                        \n                        \n                            buildOrderBy   (projects/.../builder.ts)\n                        \n                        \n                            buildTransforms   (projects/.../builder.ts)\n                        \n                        \n                            buildUrl   (projects/.../builder.ts)\n                        \n                        \n                            createSettings   (projects/.../module.ts)\n                        \n                        \n                            escapeIllegalChars   (projects/.../builder.ts)\n                        \n                        \n                            getBoundaryDelimiter   (projects/.../batch.ts)\n                        \n                        \n                            getBoundaryEnd   (projects/.../batch.ts)\n                        \n                        \n                            getHeaderValue   (projects/.../batch.ts)\n                        \n                        \n                            getStringCollectionClause   (projects/.../builder.ts)\n                        \n                        \n                            handleValue   (projects/.../builder.ts)\n                        \n                        \n                            now   (projects/.../batch.ts)\n                        \n                        \n                            parseNot   (projects/.../builder.ts)\n                        \n                        \n                            pathSegmentsBuilder   (projects/.../path-segments.ts)\n                        \n                        \n                            renderPrimitiveValue   (projects/.../builder.ts)\n                        \n                        \n                            uniqid   (projects/.../batch.ts)\n                        \n                        \n                            Unnamed function   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/client.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            addBody\n                        \n                        \n                    \n                \n            \n            \n                \naddBody(options, body)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            buildAggregate\n                        \n                        \n                    \n                \n            \n            \n                \nbuildAggregate(aggregate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aggregate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildExpand\n                        \n                        \n                    \n                \n            \n            \n                \nbuildExpand(expands)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expands\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFilter\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFilter(filters, aliases, propPrefix: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propPrefix\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildGroupBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildGroupBy(groupBy)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildOrderBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildOrderBy(orderBy, prefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTransforms\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTransforms(transforms)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transforms\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildUrl\n                        \n                        \n                    \n                \n            \n            \n                \nbuildUrl(path, params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapeIllegalChars\n                        \n                        \n                    \n                \n            \n            \n                \nescapeIllegalChars(string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getStringCollectionClause\n                        \n                        \n                    \n                \n            \n            \n                \ngetStringCollectionClause(lambdaParameter, value: any, collectionOperator, propName)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lambdaParameter\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    collectionOperator\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propName\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleValue\n                        \n                        \n                    \n                \n            \n            \n                \nhandleValue(value, aliases?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseNot\n                        \n                        \n                    \n                \n            \n            \n                \nparseNot(builtFilters)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builtFilters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            renderPrimitiveValue\n                        \n                        \n                    \n                \n            \n            \n                \nrenderPrimitiveValue(key, val: any, aliases)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSettings\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSettings(configs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/batch.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryDelimiter(contentType)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBoundaryEnd\n                        \n                        \n                    \n                \n            \n            \n                \ngetBoundaryEnd(boundaryDelimiter)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    boundaryDelimiter\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeaderValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeaderValue(header)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            now\n                        \n                        \n                    \n                \n            \n            \n                \nnow()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uniqid\n                        \n                        \n                    \n                \n            \n            \n                \nuniqid(prefix?, suffix?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prefix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    suffix\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            pathSegmentsBuilder\n                        \n                        \n                    \n                \n            \n            \n                \npathSegmentsBuilder(segment)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    segment\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular OData\n\n\nA fluent API for querying, creating, updating and deleting OData resources in Angular.\nOData service for Angular.\nPlease check also my other related project, OData Angular Generator\nDemo:\nFull examples of the library:\n\nAngularODataEntity\n\nTable of contents\n\nInstallation\nUsage\nGenerator\nOData Version\nQuery Builder\nDocumentation\n\nInstallation\nInstall from npm:\nnpm i angular-odataUsage\n1) Add module to your project\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot({\n      serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n    })\n    ...\n  ]\n})\nexport class AppModule {}2) Inject and use the ODataServiceFactory\nimport { Component } from '@angular/core';\nimport { ODataClient, ODATA_ETAG } from 'angular-odata';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TripPin';\n  constructor(private factory: ODataServiceFactory) {\n    this.queries();\n  }\n\n  queries() {\n    // Use OData Service Factory\n    let airportsService = this.factory.entity(\"Airports\");\n    let peopleService = this.factory.entity(\"People\");\n\n    let airports = airportsService.entities();\n\n    // Fetch all airports\n    airports\n    .all()\n    .subscribe(aports => console.log(\"All: \", aports));\n\n    // Fetch airports with count\n    airports\n    .get({withCount: true})\n    .subscribe(({entities, meta}) => console.log(\"Airports: \", entities, \"Annotations: \", meta));\n\n    // Fetch airport with key\n    airports\n    .entity(\"CYYZ\").get()\n    .pipe(switchMap(() => airports.entity(\"CYYZ\").get({fetchPolicy: 'cache-first'}))) // From Cache!\n    .subscribe(({entity, meta}) => console.log(\"Airport: \", entity, \"Annotations: \", meta));\n\n    // Filter airports (inmutable resource)\n    airports\n    .filter({Location: {City: {CountryRegion: \"United States\"}}})\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports of United States: \", entities, \"Annotations: \", meta));\n\n    // Add filter (mutable resource)\n    airports.query.filter().push({Location: {City: {Region: \"California\"}}});\n    airports\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports in California: \", entities, \"Annotations: \", meta));\n\n    // Resource to JSON\n    const json = airports.toJSON();\n    console.log(json);\n    // JSON to Resource\n    const query = this.odata.fromJSON(json);\n    console.log(query);\n\n    // Remove filter (mutable resource)\n    airports.query.filter().clear();\n    airports\n    .get()\n    .subscribe(({entities, meta}) => console.log(\"Airports: \", entities, \"Annotations: \", meta));\n\n    let people = peopleService.entities();\n\n    // Expand (inmutable resource)\n    people.expand({\n      Friends: {\n        expand: { Friends: { select: ['AddressInfo']}}\n      },\n      Trips: { select: ['Name', 'Tags'] },\n    })\n    .get({withCount: true})\n    .subscribe(({entities, meta}) => console.log(\"People with Friends and Trips: \", entities, \"Annotations: \", meta));\n\n    this.odata.batch(\"TripPin\").post(batch => {\n      airports.get().subscribe(console.log);\n      airport.get().subscribe(console.log);\n      people.get({withCount: true}).subscribe(console.log);\n    }).subscribe();\n  }\n}Generator\nIf you use OData Angular Generator, import the config and the module from generated source.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, TripPinModule } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig),\n    TripPinModule\n  ]\n  ...\n})\nexport class AppModule {}OData Version\nThe library works mainly with OData Version 4, however, it incorporates basic support for versions 3 and 2.\nQuery Builder\nFor a deep query customizations the library use odata-query as a builder.\n\nOData v4 query builder\n\nDocumentation\nThe api documentation is generated using compodoc and can be viewed here: https://diegomvh.github.io/angular-odata/docs/\nLibrary documentation can be viewed on the wiki here: https://github.com/diegomvh/angular-odata/wiki\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 Diego van Haaster\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ODataModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    81 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (projects/.../builder.ts)\n                        \n                        \n                            Alias   (projects/.../builder.ts)\n                        \n                        \n                            AnnotationConfig   (projects/.../types.ts)\n                        \n                        \n                            ApiConfig   (projects/.../types.ts)\n                        \n                        \n                            Binary   (projects/.../builder.ts)\n                        \n                        \n                            CacheCacheability   (projects/.../types.ts)\n                        \n                        \n                            CallableConfig   (projects/.../types.ts)\n                        \n                        \n                            Duration   (projects/.../builder.ts)\n                        \n                        \n                            Duration   (projects/.../edm.ts)\n                        \n                        \n                            EntityContainerConfig   (projects/.../types.ts)\n                        \n                        \n                            EntityKey   (projects/.../types.ts)\n                        \n                        \n                            EntitySetConfig   (projects/.../types.ts)\n                        \n                        \n                            EnumTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            Expand   (projects/.../builder.ts)\n                        \n                        \n                            ExpandObject   (projects/.../builder.ts)\n                        \n                        \n                            ExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ExpandType   (projects/.../builder.ts)\n                        \n                        \n                            FetchPolicy   (projects/.../types.ts)\n                        \n                        \n                            Filter   (projects/.../builder.ts)\n                        \n                        \n                            FilterType   (projects/.../builder.ts)\n                        \n                        \n                            GroupBy   (projects/.../builder.ts)\n                        \n                        \n                            Guid   (projects/.../builder.ts)\n                        \n                        \n                            HttpEntitiesOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpEntityOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpOptions   (projects/.../options.ts)\n                        \n                        \n                            HttpPropertyOptions   (projects/.../options.ts)\n                        \n                        \n                            Json   (projects/.../builder.ts)\n                        \n                        \n                            JsonSchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaExpand   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaExpandOptions   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaOrder   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaSelect   (projects/.../types.ts)\n                        \n                        \n                            NestedExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ODataContext   (projects/.../types.ts)\n                        \n                        \n                            ODataEntities   (projects/.../types.ts)\n                        \n                        \n                            ODataEntity   (projects/.../types.ts)\n                        \n                        \n                            ODataMetadataType   (projects/.../types.ts)\n                        \n                        \n                            ODataProperty   (projects/.../types.ts)\n                        \n                        \n                            ODataSegment   (projects/.../path-segments.ts)\n                        \n                        \n                            ODataVersion   (projects/.../types.ts)\n                        \n                        \n                            OrderBy   (projects/.../builder.ts)\n                        \n                        \n                            OrderByObject   (projects/.../builder.ts)\n                        \n                        \n                            OrderByType   (projects/.../builder.ts)\n                        \n                        \n                            Parameter   (projects/.../types.ts)\n                        \n                        \n                            PlainObject   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptions   (projects/.../builder.ts)\n                        \n                        \n                            Raw   (projects/.../builder.ts)\n                        \n                        \n                            SchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            Select   (projects/.../builder.ts)\n                        \n                        \n                            SelectType   (projects/.../builder.ts)\n                        \n                        \n                            StructuredTypeConfig   (projects/.../types.ts)\n                        \n                        \n                            Transform   (projects/.../builder.ts)\n                        \n                        \n                            Unpacked   (projects/.../builder.ts)\n                        \n                        \n                            Value   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Alias\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Binary\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Expand\n                \n            \n            \n                \n                        ExpandType | ExpandType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandObject\n                \n            \n            \n                \n                             | NestedExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandType\n                \n            \n            \n                \n                        string | ExpandObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                        FilterType | FilterType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FilterType\n                \n            \n            \n                \n                            string | PlainObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupBy\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Guid\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Json\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NestedExpandOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderBy\n                \n            \n            \n                \n                        OrderByType | OrderByType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByObject\n                \n            \n            \n                \n                         |  | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByType\n                \n            \n            \n                \n                        string | OrderByObject\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PlainObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Raw\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Select\n                \n            \n            \n                \n                        SelectType | SelectType[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SelectType\n                \n            \n            \n                \n                        string | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Transform\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Unpacked\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Value\n                \n            \n            \n                \n                        string | Date | number | boolean | Raw | Guid | Duration | Binary | Json | Alias\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    AnnotationConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CacheCacheability\n                \n            \n            \n                \n                        \"public\" | \"private\" | \"no-cache\" | \"no-store\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CallableConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityContainerConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityKey\n                \n            \n            \n                \n                         | string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntitySetConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FetchPolicy\n                \n            \n            \n                \n                        \"cache-first\" | \"cache-and-network\" | \"network-only\" | \"no-cache\" | \"cache-only\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaConfig\n                \n            \n            \n                \n                            JsonSchemaExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaOrder\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaSelect\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataContext\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataMetadataType\n                \n            \n            \n                \n                        \"minimal\" | \"full\" | \"none\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataVersion\n                \n            \n            \n                \n                        \"2.0\" | \"3.0\" | \"4.0\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Parameter\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SchemaConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    StructuredTypeConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/parsers/edm.ts\n    \n    \n        \n            \n                \n                    \n                    Duration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/types/options.ts\n    \n    \n        \n            \n                \n                    \n                    HttpEntitiesOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpEntityOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpPropertyOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/responses/types.ts\n    \n    \n        \n            \n                \n                    \n                    ODataEntities\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataEntity\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ODataProperty\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n    \n        \n            \n                \n                    \n                    ODataSegment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
