var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/BatchRequest.html",[0,0.347,1,3.367]],["body/classes/BatchRequest.html",[0,0.397,1,5.044,2,0.158,3,0.091,4,0.078,5,0.091,6,0.124,7,2.618,8,0.053,9,0.192,10,3.087,11,5.095,12,5.277,13,4.573,14,5.277,15,0.797,16,5.005,17,6.709,18,0.15,19,3.271,20,0.987,21,4.447,22,0.253,23,3.021,24,6.192,25,5.361,26,0.207,27,4.447,28,0.096,29,0.016,30,0.096,31,0.118,32,0.42,33,0.152,34,2.15,35,0.996,36,4.447,37,3.021,38,3.021,39,4.447,40,3.021,41,3.021,42,3.021,43,4.447,44,3.021,45,0.644,46,0.84,47,2.618,48,5.277,49,2.618,50,2.081,51,1.348,52,3.059,53,1.864,54,1.027,55,2.352,56,3.763,57,2.154,58,1.414,59,4.424,60,3.171,61,2.058,62,1.996,63,2.154,64,3.486,65,4.831,66,3.854,67,5.935,68,3.854,69,3.854,70,3.463,71,3.463,72,4.573,73,3.854,74,3.854,75,3.854,76,3.463,77,2.352,78,2.352,79,3.021,80,3.846,81,2.618,82,2.618,83,1.414,84,0.115,85,1.565,86,2.618,87,2.618,88,1.996,89,2.618,90,2.618,91,5.277,92,6.773,93,3.021,94,3.021,95,3.021,96,3.021,97,3.021,98,1.431,99,2.903,100,1.112,101,4.447,102,3.021,103,3.021,104,4.447,105,0.57,106,2.318,107,3.854,108,3.021,109,2.618,110,4.447,111,3.021,112,3.021,113,0.42,114,3.021,115,3.021,116,5.277,117,6.204,118,3.021,119,6.884,120,2.47,121,4.447,122,0.92,123,3.021,124,1.219,125,3.021,126,3.021,127,3.021,128,3.021,129,3.021,130,3.021,131,2.886,132,3.021,133,3.021,134,3.021,135,3.021,136,2.618,137,1.414,138,3.021,139,3.021,140,3.021,141,3.021,142,3.021,143,1.652,144,3.021,145,3.021,146,3.021,147,3.021,148,3.021,149,3.021,150,3.021,151,3.021,152,5.821,153,5.376,154,5.376,155,3.021,156,5.821,157,5.821,158,6.884,159,3.021,160,3.021,161,3.021,162,3.021,163,3.021,164,3.021,165,3.021,166,3.021,167,3.021,168,1.129,169,0.006,170,0.008,171,0.006]],["title/classes/CsdlAction.html",[0,0.347,172,2.012]],["body/classes/CsdlAction.html",[0,0.655,2,0.232,3,0.134,4,0.115,5,0.134,6,0.132,8,0.078,9,0.251,15,0.897,18,0.198,22,0.425,26,0.22,28,0.162,29,0.016,30,0.166,31,0.133,32,0.958,33,0.175,84,0.189,113,1.02,169,0.008,170,0.011,171,0.008,172,3.015,173,1.53,174,2.186,175,2.745,176,4.249,177,4.249,178,3.605,179,1.203,180,4.01,181,1.066,182,4.01,183,4.448,184,4.448,185,4.448,186,4.448,187,4.448,188,4.448,189,2.304,190,2.578,191,2.304,192,2.745,193,2.863,194,2.433,195,2.304,196,1.41,197,1.704,198,1.704,199,2.086,200,2.086,201,2.086]],["title/classes/CsdlActionImport.html",[0,0.347,195,2.012]],["body/classes/CsdlActionImport.html",[0,0.664,2,0.244,3,0.14,4,0.121,5,0.14,6,0.128,8,0.082,9,0.259,15,0.897,18,0.172,22,0.43,26,0.211,28,0.144,29,0.016,30,0.168,31,0.131,32,0.65,33,0.177,84,0.192,113,1.034,169,0.009,170,0.011,171,0.009,172,2.42,173,1.486,174,2.124,175,2.883,176,3.484,177,3.484,178,2.956,179,1.264,180,3.634,181,1.034,182,3.634,189,2.42,190,2.708,191,2.42,192,2.883,193,3.653,194,2.556,195,3.113,196,2.301,197,1.759,198,1.759,199,2.154,200,2.154,201,2.154,202,4.672,203,4.672,204,4.672,205,4.672]],["title/classes/CsdlAnnotable.html",[0,0.347,206,1.91]],["body/classes/CsdlAnnotable.html",[0,0.656,2,0.277,3,0.16,4,0.137,5,0.16,6,0.124,8,0.094,9,0.281,15,0.884,18,0.182,22,0.418,26,0.196,28,0.115,29,0.016,30,0.141,31,0.124,32,0.739,33,0.173,84,0.19,105,1.002,113,0.981,169,0.01,170,0.012,171,0.01,173,1.443,181,0.739,197,1.555,198,1.555,199,1.903,200,1.903,201,1.903,206,3.465,207,3.788,208,3.905,209,5.312,210,3.591,211,5.312,212,5.312,213,3.509,214,3.079,215,2.905,216,3.563,217,2.751,218,3.509,219,3.079,220,3.509,221,2.612,222,3.509]],["title/classes/CsdlAnnotation.html",[0,0.347,210,1.818]],["body/classes/CsdlAnnotation.html",[0,0.652,2,0.272,3,0.156,4,0.134,5,0.156,6,0.128,8,0.092,9,0.277,15,0.886,18,0.18,22,0.415,26,0.21,28,0.113,29,0.016,30,0.14,31,0.128,32,0.724,33,0.176,84,0.189,105,0.982,113,0.972,169,0.01,170,0.012,171,0.01,173,1.494,181,0.724,197,1.523,198,1.523,199,1.864,200,1.864,201,1.864,206,3.163,207,3.71,208,3.331,210,3.414,213,3.437,214,3.016,215,2.846,216,4.176,217,2.695,218,4.819,219,3.016,220,3.437,221,2.559,222,3.437,223,5.203,224,5.203,225,5.203,226,5.203]],["title/classes/CsdlAnnotations.html",[0,0.347,214,2.252]],["body/classes/CsdlAnnotations.html",[0,0.646,2,0.265,3,0.152,4,0.131,5,0.152,6,0.127,8,0.089,9,0.273,15,0.887,18,0.192,22,0.411,26,0.217,28,0.11,29,0.016,30,0.137,31,0.131,32,0.706,33,0.175,84,0.187,105,1.195,113,0.961,169,0.01,170,0.012,171,0.01,173,1.48,181,0.706,197,1.484,198,1.484,199,1.817,200,1.817,201,1.817,206,3.555,207,3.616,208,3.929,210,3.551,213,3.35,214,3.67,215,3.954,216,4.15,217,2.626,218,3.35,219,2.939,220,3.35,221,2.494,222,3.35,227,5.071,228,5.071,229,5.071,230,5.071,231,2.161,232,3.616]],["title/classes/CsdlComplexType.html",[0,0.347,233,2.125]],["body/classes/CsdlComplexType.html",[0,0.64,2,0.234,3,0.135,4,0.116,5,0.135,6,0.103,8,0.079,9,0.336,15,0.882,18,0.202,22,0.418,26,0.225,28,0.097,29,0.016,30,0.165,31,0.132,32,0.997,33,0.172,46,0.513,84,0.185,100,1.12,105,1.229,169,0.009,170,0.011,171,0.009,173,1.198,179,1.212,181,1.098,231,3.13,233,3.199,234,3.39,235,2.597,236,4.777,237,3.591,238,4.734,239,5.069,240,4.734,241,3.339,242,3.339,243,4.48,244,3.882,245,3.882,246,3.882,247,3.882,248,3.882,249,3.882,250,1.909,251,2.097,252,1.076,253,2.876,254,2.45,255,3.39,256,2.764,257,2.96,258,3.39,259,1.605]],["title/classes/CsdlEntityContainer.html",[0,0.347,260,2.77]],["body/classes/CsdlEntityContainer.html",[0,0.438,2,0.256,3,0.147,4,0.127,5,0.147,6,0.136,8,0.086,9,0.267,15,0.881,18,0.204,22,0.353,26,0.23,28,0.106,29,0.015,30,0.16,31,0.135,32,1.025,33,0.168,46,0.779,84,0.127,169,0.009,170,0.012,171,0.009,173,1.583,174,1.436,179,1.327,191,3.816,195,3.816,196,1.556,250,2.897,260,4.422,261,3.651,262,4.908,263,7.368,264,7.368,265,7.368,266,7.368,267,7.368,268,5.253,269,5.253,270,4.908,271,4.908,272,4.908,273,4.908,274,4.908,275,4.908,276,4.908,277,2.542,278,3.242]],["title/classes/CsdlEntitySet.html",[0,0.347,268,2.77]],["body/classes/CsdlEntitySet.html",[0,0.475,2,0.278,3,0.16,4,0.137,5,0.16,6,0.135,8,0.094,9,0.281,15,0.874,18,0.195,22,0.371,26,0.227,28,0.115,29,0.015,30,0.164,31,0.133,32,0.907,33,0.17,46,0.609,84,0.137,169,0.01,170,0.012,171,0.01,173,1.572,179,1.439,181,1.023,194,4.125,250,2.267,252,1.278,261,3.593,268,4.65,279,5.319,280,6.536,281,6.536,282,4.983,283,5.319,284,5.319,285,5.319,286,5.319,287,5.319,288,2.489,289,4.142]],["title/classes/CsdlEntityType.html",[0,0.347,254,2.125]],["body/classes/CsdlEntityType.html",[0,0.631,2,0.224,3,0.129,4,0.111,5,0.129,6,0.12,8,0.076,9,0.334,15,0.884,18,0.205,22,0.413,26,0.229,28,0.093,29,0.016,30,0.163,31,0.134,32,1.03,33,0.171,46,0.491,84,0.182,100,1.765,105,1.203,169,0.008,170,0.011,171,0.008,173,1.39,179,1.16,181,1.106,231,3.092,233,2.345,234,3.934,235,2.485,236,4.74,237,3.56,238,4.694,239,5.026,240,4.694,241,3.303,242,3.303,244,3.716,245,3.716,246,3.716,247,3.716,248,3.716,249,3.716,250,1.827,251,2.007,252,1.03,253,2.795,254,3.108,255,4.093,256,4.357,257,2.833,258,3.294,259,1.536,290,4.288,291,4.288,292,4.288]],["title/classes/CsdlEnumMember.html",[0,0.347,293,2.77]],["body/classes/CsdlEnumMember.html",[0,0.597,2,0.289,3,0.166,4,0.143,5,0.166,6,0.131,8,0.098,9,0.288,15,0.871,18,0.185,22,0.408,26,0.216,28,0.12,29,0.015,30,0.168,31,0.126,32,0.77,33,0.168,35,1.44,84,0.173,85,3.859,113,1.037,169,0.011,170,0.013,171,0.011,173,1.526,179,1.497,181,0.77,235,3.209,293,5.117,294,4.798,295,5.536,296,5.536,297,3.657,298,2.359,299,4.311,300,4.311]],["title/classes/CsdlEnumType.html",[0,0.347,297,2.567]],["body/classes/CsdlEnumType.html",[0,0.579,2,0.275,3,0.158,4,0.136,5,0.158,6,0.135,8,0.093,9,0.279,15,0.878,18,0.194,22,0.399,26,0.226,28,0.114,29,0.015,30,0.166,31,0.132,32,0.902,33,0.171,35,0.994,84,0.168,85,3.966,113,0.733,169,0.01,170,0.012,171,0.01,173,1.568,179,1.425,181,1.02,235,3.053,293,5.364,297,4.282,298,3.205,299,5.857,300,5.857,301,5.268,302,4.565,303,5.268,304,4.565,305,4.565]],["title/classes/CsdlFunction.html",[0,0.347,189,2.012]],["body/classes/CsdlFunction.html",[0,0.651,2,0.228,3,0.131,4,0.113,5,0.131,6,0.133,8,0.077,9,0.248,15,0.897,18,0.197,22,0.423,26,0.223,28,0.161,29,0.016,30,0.166,31,0.134,32,0.951,33,0.175,84,0.188,113,1.015,169,0.008,170,0.011,171,0.008,172,2.261,173,1.546,174,2.209,175,2.694,176,4.228,177,4.228,178,3.587,179,1.181,180,3.989,181,1.088,182,3.989,189,2.979,190,4.117,191,2.261,192,2.694,193,2.828,194,2.388,195,2.261,196,1.384,197,1.683,198,1.683,199,2.061,200,2.061,201,2.061,306,4.367,307,4.367,308,4.367,309,4.367,310,4.367,311,4.367,312,4.367]],["title/classes/CsdlFunctionImport.html",[0,0.347,191,2.012]],["body/classes/CsdlFunctionImport.html",[0,0.659,2,0.238,3,0.137,4,0.118,5,0.137,6,0.13,8,0.08,9,0.255,15,0.897,18,0.186,22,0.427,26,0.217,28,0.143,29,0.016,30,0.167,31,0.132,32,0.824,33,0.177,84,0.191,113,1.028,169,0.009,170,0.011,171,0.009,172,2.365,173,1.512,174,2.161,175,2.817,176,3.432,177,3.432,178,2.912,179,1.235,180,3.595,181,1.072,182,3.595,189,2.365,190,2.647,191,3.067,192,4.446,193,3.631,194,3.941,195,2.365,196,1.447,197,1.733,198,1.733,199,2.122,200,2.122,201,2.122,313,4.566,314,4.566,315,4.566,316,4.566,317,4.566]],["title/classes/CsdlInclude.html",[0,0.347,318,2.567]],["body/classes/CsdlInclude.html",[0,0.632,2,0.28,3,0.161,4,0.138,5,0.161,6,0.13,8,0.094,9,0.282,15,0.874,18,0.183,22,0.419,26,0.213,28,0.116,29,0.016,30,0.116,31,0.125,32,0.745,33,0.174,46,0.614,84,0.183,105,1.011,169,0.01,170,0.012,171,0.01,173,1.509,206,3.22,208,2.774,210,3.065,216,2.93,217,2.774,250,2.283,259,2.708,318,4.673,319,4.171,320,2.64,321,4.642,322,5.357,323,5.357,324,5.357,325,3.305,326,3.539,327,3.82,328,4.171,329,4.171,330,4.326,331,3.82,332,3.82]],["title/classes/CsdlIncludeAnnotations.html",[0,0.347,330,2.567]],["body/classes/CsdlIncludeAnnotations.html",[0,0.625,2,0.273,3,0.157,4,0.135,5,0.157,6,0.132,8,0.092,9,0.278,15,0.878,18,0.194,22,0.415,26,0.22,28,0.113,29,0.016,30,0.113,31,0.129,32,0.897,33,0.176,46,0.599,84,0.181,105,0.986,169,0.01,170,0.012,171,0.01,173,1.537,206,3.171,208,2.706,210,3.018,216,4.104,217,2.706,250,2.226,259,1.872,318,4.26,319,4.068,320,1.872,325,3.223,326,3.451,327,3.725,328,4.068,329,4.068,330,4.621,331,5.209,332,5.351,333,5.224,334,5.224,335,5.224,336,5.224,337,5.224]],["title/classes/CsdlKey.html",[0,0.347,255,2.252]],["body/classes/CsdlKey.html",[0,0.662,2,0.262,3,0.151,4,0.13,5,0.151,6,0.121,8,0.088,9,0.331,15,0.871,18,0.13,22,0.43,26,0.189,28,0.109,29,0.016,30,0.161,31,0.111,33,0.168,46,0.575,84,0.192,100,1.254,105,1.187,169,0.01,170,0.012,171,0.01,173,1.407,181,1.069,233,2.744,234,3.982,235,2.908,236,4.238,237,3.471,238,4.576,239,4.9,240,4.576,241,3.213,242,3.213,250,2.138,251,2.348,252,1.206,253,3.093,254,2.744,255,3.982,256,3.096,257,4.757,258,4.299,259,1.798,338,5.018,339,5.018,340,5.018]],["title/classes/CsdlNavigationProperty.html",[0,0.347,242,1.734]],["body/classes/CsdlNavigationProperty.html",[0,0.638,2,0.231,3,0.133,4,0.115,5,0.133,6,0.129,8,0.078,9,0.25,15,0.889,18,0.201,22,0.417,26,0.228,28,0.096,29,0.016,30,0.162,31,0.141,32,0.993,33,0.175,84,0.184,105,1.223,113,0.902,169,0.008,170,0.011,171,0.008,173,1.5,179,1.199,181,1.084,196,1.405,197,2.241,198,1.297,199,1.588,200,1.588,201,1.588,221,2.18,231,2.761,237,2.075,241,1.978,242,2.592,251,3.428,252,1.065,253,2.856,341,2.929,342,4.605,343,4.404,344,4.404,345,4.404,346,4.716,347,4.137,348,4.137,349,4.433,350,4.433,351,4.433,352,4.433,353,4.433,354,3.841,355,3.841,356,3.841,357,2.569,358,2.735]],["title/classes/CsdlNavigationPropertyBinding.html",[0,0.347,282,2.567]],["body/classes/CsdlNavigationPropertyBinding.html",[0,0.509,2,0.298,3,0.171,4,0.147,5,0.171,6,0.133,8,0.1,9,0.293,15,0.849,18,0.147,22,0.387,26,0.218,28,0.124,29,0.015,30,0.124,31,0.128,33,0.172,58,3.522,84,0.147,169,0.011,170,0.013,171,0.011,173,1.541,215,4.206,252,1.808,282,4.493,288,3.522,359,5.702,360,5.702,361,5.702,362,5.702,363,5.702]],["title/classes/CsdlOnDelete.html",[0,0.347,348,2.252]],["body/classes/CsdlOnDelete.html",[0,0.665,2,0.265,3,0.153,4,0.131,5,0.153,6,0.122,8,0.09,9,0.273,15,0.884,18,0.131,22,0.432,26,0.191,28,0.11,29,0.016,30,0.157,31,0.136,33,0.175,84,0.192,105,1.197,113,0.962,169,0.01,170,0.012,171,0.01,173,1.415,181,1.036,196,2.294,197,2.179,198,1.488,199,1.822,200,1.822,201,1.822,221,2.5,237,2.38,241,2.269,242,2.269,251,3.234,252,1.222,253,3.118,341,3.359,342,4.264,343,3.137,344,3.137,345,3.137,346,3.359,347,3.676,348,4.006,357,2.947,358,3.137,364,5.085,365,5.085,366,5.085]],["title/classes/CsdlParameter.html",[0,0.347,182,2.125]],["body/classes/CsdlParameter.html",[0,0.648,2,0.223,3,0.128,4,0.11,5,0.128,6,0.134,8,0.075,9,0.244,15,0.897,18,0.2,22,0.421,26,0.226,28,0.138,29,0.016,30,0.165,31,0.139,32,0.982,33,0.176,84,0.187,113,1.101,169,0.008,170,0.011,171,0.008,172,2.213,173,1.557,174,2.225,175,2.637,176,3.287,177,3.287,178,2.788,179,1.156,180,3.48,181,1.058,182,3.707,189,2.213,190,2.477,191,2.213,192,2.637,193,2.788,194,2.337,195,2.213,196,1.355,197,2.122,198,2.122,199,2.598,200,2.598,201,2.598,367,4.273,368,4.273,369,4.273,370,4.273,371,4.273,372,4.273,373,4.273,374,4.273]],["title/classes/CsdlProperty.html",[0,0.347,241,1.734]],["body/classes/CsdlProperty.html",[0,0.629,2,0.222,3,0.128,4,0.11,5,0.128,6,0.132,8,0.075,9,0.243,15,0.89,18,0.204,22,0.411,26,0.23,28,0.092,29,0.016,30,0.16,31,0.141,32,1.028,33,0.176,84,0.182,105,1.197,113,1.083,169,0.008,170,0.011,171,0.008,173,1.536,179,1.148,181,1.076,196,1.346,197,2.222,198,2.06,199,2.522,200,2.522,201,2.522,221,3.461,231,2.702,237,1.987,241,2.519,242,1.894,251,3.51,252,1.02,253,2.776,341,2.804,342,4.556,343,2.619,344,2.619,345,2.619,346,2.804,347,3.272,348,3.272,354,3.679,355,3.679,356,3.679,357,4.079,358,2.619,375,4.245,376,4.245,377,4.245,378,4.245,379,4.245,380,4.245,381,4.245]],["title/classes/CsdlPropertyRef.html",[0,0.347,258,2.252]],["body/classes/CsdlPropertyRef.html",[0,0.658,2,0.256,3,0.147,4,0.126,5,0.147,6,0.126,8,0.086,9,0.329,15,0.874,18,0.176,22,0.428,26,0.204,28,0.106,29,0.016,30,0.168,31,0.12,32,0.681,33,0.174,46,0.561,84,0.19,100,1.223,105,1.169,169,0.009,170,0.012,171,0.009,173,1.462,179,1.324,181,1.063,233,2.677,234,4.137,235,2.837,236,4.19,237,3.445,238,4.542,239,4.864,240,4.542,241,3.185,242,3.185,250,2.086,251,2.291,252,1.176,253,3.045,254,2.677,255,3.589,256,3.02,257,3.234,258,3.936,259,2.638,382,4.895,383,4.895,384,4.895]],["title/classes/CsdlReference.html",[0,0.347,326,2.567]],["body/classes/CsdlReference.html",[0,0.617,2,0.265,3,0.153,4,0.131,5,0.153,6,0.131,8,0.09,9,0.273,15,0.88,18,0.199,22,0.411,26,0.224,28,0.11,29,0.016,30,0.11,31,0.131,32,0.962,33,0.17,46,0.583,84,0.179,105,1.197,169,0.01,170,0.012,171,0.01,173,1.525,206,3.558,208,3.856,210,3.484,216,2.781,217,2.633,231,2.167,232,3.626,250,2.167,259,1.822,318,4.919,319,3.959,320,1.822,325,3.137,326,4.189,327,5.159,328,5.798,329,5.798,330,4.919,331,3.626,332,3.626,385,5.085,386,5.085,387,5.085,388,5.085,389,5.085]],["title/classes/CsdlReferentialConstraint.html",[0,0.347,347,2.252]],["body/classes/CsdlReferentialConstraint.html",[0,0.661,2,0.26,3,0.15,4,0.129,5,0.15,6,0.126,8,0.088,9,0.27,15,0.885,18,0.129,22,0.429,26,0.206,28,0.108,29,0.016,30,0.156,31,0.137,33,0.176,84,0.191,105,1.181,113,0.952,169,0.009,170,0.012,171,0.009,173,1.471,181,1.03,196,1.578,197,2.166,198,1.457,199,1.784,200,1.784,201,1.784,221,2.448,237,2.33,241,2.221,242,2.221,251,3.361,252,1.725,253,3.077,341,3.289,342,4.223,343,3.072,344,3.072,345,3.072,346,3.289,347,3.967,348,3.627,357,2.886,358,4.565,390,4.978,391,4.978,392,4.978,393,4.978]],["title/classes/CsdlReturnType.html",[0,0.347,180,2.125]],["body/classes/CsdlReturnType.html",[0,0.651,2,0.227,3,0.131,4,0.112,5,0.131,6,0.133,8,0.077,9,0.247,15,0.897,18,0.201,22,0.423,26,0.223,28,0.139,29,0.016,30,0.158,31,0.138,32,0.987,33,0.175,84,0.188,113,1.103,169,0.008,170,0.011,171,0.008,172,2.254,173,1.544,174,2.207,175,2.685,176,3.326,177,3.326,178,2.822,180,3.734,181,1.062,182,3.512,189,2.254,190,2.522,191,2.254,192,2.685,193,2.822,194,2.38,195,2.254,196,1.379,197,2.133,198,2.133,199,2.611,200,2.611,201,2.611,394,4.352,395,4.352,396,4.352,397,4.352,398,4.352,399,4.352,400,4.352,401,4.352]],["title/classes/CsdlSchema.html",[0,0.347,402,3.025]],["body/classes/CsdlSchema.html",[0,0.368,2,0.215,3,0.124,4,0.107,5,0.124,6,0.137,8,0.073,9,0.239,15,0.89,18,0.208,22,0.315,26,0.234,28,0.09,29,0.015,30,0.09,31,0.139,32,1.071,33,0.162,46,0.822,84,0.107,85,2.136,105,1.045,169,0.008,170,0.011,171,0.008,172,3.61,173,1.597,174,1.207,189,3.61,196,1.308,206,3.286,208,3.61,210,3.262,214,4.04,217,2.136,219,4.04,231,1.758,232,2.941,233,3.812,234,2.391,250,3.058,254,3.812,259,2.498,260,4.97,261,1.931,297,4.605,320,2.395,321,3.575,325,2.545,402,4.312,403,4.125,404,6.041,405,6.971,406,6.971,407,6.041,408,6.971,409,6.971,410,4.04,411,6.971,412,6.971,413,4.97,414,4.125,415,4.125,416,4.125,417,4.125,418,4.125,419,4.125,420,4.125,421,4.125,422,4.125,423,4.125,424,4.125,425,4.125,426,3.575,427,2.029]],["title/classes/CsdlSingleton.html",[0,0.347,269,2.77]],["body/classes/CsdlSingleton.html",[0,0.494,2,0.289,3,0.166,4,0.143,5,0.166,6,0.134,8,0.097,9,0.288,15,0.866,18,0.185,22,0.38,26,0.224,28,0.12,29,0.015,30,0.165,31,0.14,32,0.769,33,0.172,46,0.633,84,0.143,169,0.011,170,0.013,171,0.011,173,1.562,179,1.495,250,2.356,252,1.328,269,4.76,282,5.037,288,2.587,289,4.305,428,5.528,429,7.624,430,5.528,431,5.528,432,5.528,433,5.528]],["title/classes/CsdlStructuralProperty.html",[0,0.347,342,2.397]],["body/classes/CsdlStructuralProperty.html",[0,0.656,2,0.254,3,0.146,4,0.126,5,0.146,6,0.129,8,0.086,9,0.266,15,0.886,18,0.175,22,0.427,26,0.214,28,0.105,29,0.016,30,0.165,31,0.14,32,0.676,33,0.176,84,0.19,105,1.163,113,0.942,169,0.009,170,0.012,171,0.009,173,1.504,179,1.314,181,1.074,196,1.54,197,2.279,198,1.422,199,1.741,200,1.741,201,1.741,221,2.389,237,2.273,241,2.167,242,2.167,251,3.437,252,1.167,253,3.03,341,3.209,342,4.391,343,2.997,344,2.997,345,2.997,346,3.209,347,3.571,348,3.571,357,2.816,358,2.997,434,4.857,435,4.857,436,4.857,437,4.857]],["title/classes/CsdlStructuredType.html",[0,0.347,236,2.397]],["body/classes/CsdlStructuredType.html",[0,0.639,2,0.233,3,0.134,4,0.115,5,0.134,6,0.134,8,0.079,9,0.336,15,0.882,18,0.201,22,0.417,26,0.225,28,0.097,29,0.016,30,0.164,31,0.132,32,0.995,33,0.172,46,0.511,84,0.185,100,1.114,105,1.1,169,0.008,170,0.011,171,0.008,173,1.553,179,1.206,181,1.097,233,2.439,234,4.394,235,2.584,236,4.252,237,3.587,238,4.73,239,5.064,240,4.73,241,3.335,242,3.335,250,1.9,251,2.087,252,1.071,253,2.867,254,2.439,255,3.38,256,2.751,257,2.946,258,3.38,259,1.598,294,3.864,302,3.864,304,3.864,305,3.864,438,4.459,439,4.459,440,4.459]],["title/classes/CsdlTerm.html",[0,0.347,219,2.252]],["body/classes/CsdlTerm.html",[0,0.61,2,0.228,3,0.131,4,0.113,5,0.131,6,0.138,8,0.077,9,0.248,15,0.892,18,0.206,22,0.389,26,0.233,28,0.095,29,0.016,30,0.154,31,0.14,32,1.05,33,0.177,84,0.177,105,0.823,113,1.088,169,0.008,170,0.011,171,0.008,173,1.601,179,1.18,181,0.951,197,2.078,198,2.078,199,2.544,200,2.544,201,2.544,206,2.826,207,3.11,208,2.976,210,3.008,213,2.882,214,2.528,215,2.386,216,3.143,217,2.259,218,2.882,219,3.331,220,4.691,221,3.492,222,4.691,441,4.362,442,4.362,443,4.362,444,4.362,445,4.362,446,4.362,447,4.362,448,4.362,449,4.362,450,4.362,451,4.362]],["title/classes/CsdlTypeDefinition.html",[0,0.347,413,2.77]],["body/classes/CsdlTypeDefinition.html",[0,0.423,2,0.247,3,0.142,4,0.122,5,0.142,6,0.137,8,0.083,9,0.261,15,0.886,18,0.205,22,0.345,26,0.233,28,0.103,29,0.015,30,0.158,31,0.142,32,1.037,33,0.172,46,0.542,84,0.122,105,1.143,113,1.101,169,0.009,170,0.012,171,0.009,173,1.587,179,1.279,181,0.981,198,2.132,199,2.611,200,2.611,201,2.611,206,3.466,208,3.773,210,3.41,217,2.45,231,2.016,232,3.373,250,2.016,325,2.919,357,4.223,413,4.32,452,4.731,453,7.286,454,4.731,455,4.731,456,4.731,457,4.731,458,4.731,459,4.731,460,4.731,461,4.731]],["title/classes/Field.html",[0,0.347,462,1.515]],["body/classes/Field.html",[0,0.37,2,0.143,3,0.083,4,0.071,5,0.083,6,0.098,8,0.088,9,0.179,10,3.488,11,5.843,15,0.728,18,0.071,22,0.156,26,0.15,28,0.06,29,0.016,30,0.136,31,0.115,33,0.145,35,0.519,46,0.833,54,0.635,55,2.14,58,1.286,84,0.071,85,2.146,99,3.044,100,0.687,105,0.519,106,3.059,124,1.778,169,0.005,170,0.008,171,0.005,172,1.423,174,1.46,176,1.593,177,1.593,178,1.351,179,0.743,180,1.503,182,1.503,189,1.423,190,1.593,191,1.423,193,2.038,194,1.503,195,1.423,196,1.582,197,0.804,198,0.804,199,0.985,200,0.985,201,0.985,210,1.286,213,1.816,214,1.593,215,1.503,216,1.503,218,2.738,219,1.593,220,1.816,221,1.351,222,1.816,233,1.503,234,1.593,237,1.286,238,1.696,240,1.696,241,1.226,242,1.226,251,1.286,252,1.335,254,1.503,255,1.593,256,1.696,258,1.593,259,0.985,260,1.96,261,1.939,268,1.96,269,1.96,277,1.423,278,2.738,280,3.591,281,2.381,282,1.816,288,1.286,289,2.14,293,1.96,297,1.816,299,2.14,300,2.14,318,1.816,320,0.985,325,2.557,326,2.738,327,1.96,330,1.816,331,1.96,332,1.96,343,1.696,344,1.696,345,1.696,347,1.593,348,1.593,357,1.593,358,1.696,402,3.227,407,2.381,413,1.96,426,2.381,427,1.351,462,1.946,463,2.381,464,6.05,465,2.748,466,4.144,467,7.186,468,1.766,469,1.96,470,2.381,471,3.591,472,2.748,473,2.381,474,2.748,475,2.748,476,2.748,477,2.748,478,2.748,479,2.748,480,2.748,481,2.748,482,2.748,483,2.748,484,2.748,485,2.748,486,1.286,487,2.748,488,2.748,489,2.748,490,2.748,491,2.748,492,2.748,493,2.748,494,2.748,495,2.748,496,2.748,497,2.748,498,2.748,499,2.748,500,2.748,501,1.816,502,2.748,503,2.748,504,2.748,505,2.748,506,2.748,507,2.748,508,2.748,509,2.748,510,2.748,511,2.748,512,2.748,513,2.748,514,2.748,515,2.748,516,2.748,517,2.748,518,2.748,519,2.748,520,3.591,521,2.748,522,5.43,523,2.748,524,2.748,525,2.748,526,2.748,527,2.748,528,2.748,529,2.748,530,2.748,531,2.748,532,2.748,533,2.748,534,2.748,535,2.748,536,2.748,537,2.748,538,2.748,539,2.748,540,2.748,541,2.748,542,2.748,543,2.748,544,2.748,545,2.748,546,2.748,547,2.748,548,2.748,549,2.748,550,2.748,551,2.748,552,2.748,553,2.748,554,2.748,555,2.748,556,2.748,557,2.748,558,2.748,559,2.748,560,2.748,561,2.748,562,2.748,563,2.381,564,1.423,565,2.748,566,2.748,567,1.171,568,4.144,569,4.323,570,2.748,571,2.748,572,2.748,573,2.748,574,2.748,575,2.748,576,5.555,577,4.144,578,2.748,579,2.748,580,2.748,581,2.748,582,2.748,583,7.268,584,2.748,585,4.144,586,2.748,587,4.144,588,2.748,589,1.593,590,2.748,591,2.748,592,2.748,593,2.748,594,2.748,595,2.748,596,2.748,597,2.748,598,2.748,599,2.748,600,2.748,601,2.748,602,2.748,603,2.748,604,3.591,605,2.732,606,2.748,607,1.593,608,3.296,609,2.557,610,2.748,611,2.381,612,2.748,613,2.748,614,4.989,615,4.144,616,4.144,617,2.748,618,2.748,619,4.989,620,2.748,621,2.381,622,2.748,623,2.748,624,2.748,625,2.748,626,2.748,627,2.748,628,2.748,629,1.171]],["title/classes/ODataAnnotations.html",[0,0.347,630,2.125]],["body/classes/ODataAnnotations.html",[0,0.544,2,0.174,3,0.1,4,0.086,5,0.1,6,0.132,8,0.084,9,0.278,10,2.859,16,2.198,18,0.157,20,1.059,22,0.189,26,0.222,28,0.132,29,0.016,30,0.156,31,0.134,33,0.175,35,1.052,45,1.299,46,0.381,54,0.768,84,0.157,98,1.714,100,1.192,105,1.052,106,2.69,113,0.848,120,2.233,124,1.633,169,0.006,170,0.009,171,0.006,174,1.396,252,1.146,277,2.888,410,3.232,629,1.418,630,3.937,631,2.373,632,3.976,633,3.976,634,3.976,635,3.399,636,3.152,637,2.471,638,4.024,639,3.328,640,1.944,641,3.328,642,3.328,643,3.328,644,3.328,645,3.328,646,4.598,647,3.328,648,2.198,649,2.943,650,3.328,651,3.402,652,3.328,653,3.328,654,3.328,655,3.328,656,3.328,657,3.328,658,3.328,659,2.943,660,3.152,661,3.152,662,3.684,663,3.152,664,3.152,665,3.152,666,3.152,667,3.152,668,3.152,669,3.152,670,3.152,671,3.684,672,3.152,673,2.198,674,2.198,675,1.82,676,2.373,677,4.343,678,5.481,679,2.373,680,2.373,681,2.198,682,2.373,683,2.373,684,2.373,685,2.373,686,2.198,687,2.373,688,3.976,689,3.402,690,3.402,691,2.373,692,2.129,693,1.485,694,2.373,695,3.402,696,3.976,697,2.373,698,2.373,699,2.198,700,2.233,701,1.82,702,2.373,703,2.373,704,2.373,705,2.373,706,2.373,707,3.152,708,2.373,709,2.373,710,3.402,711,2.765,712,2.373,713,2.053,714,2.373,715,1.929,716,2.373,717,2.373,718,2.373,719,2.373,720,2.373,721,3.402,722,3.402,723,2.373,724,2.373,725,2.373,726,2.373,727,2.373,728,2.373,729,2.373,730,2.373,731,2.373,732,2.765,733,2.373,734,1.636,735,2.373,736,2.373,737,2.373,738,2.373,739,2.373,740,1.82,741,4.433,742,3.976,743,2.373,744,3.402,745,1.82,746,2.373,747,1.82,748,2.373,749,2.373,750,2.373]],["title/classes/ODataBaseService.html",[0,0.347,751,2.77]],["body/classes/ODataBaseService.html",[0,0.437,2,0.255,3,0.147,4,0.126,5,0.147,6,0.136,8,0.086,9,0.267,10,3.322,15,0.848,18,0.16,20,1.373,22,0.278,26,0.229,28,0.134,29,0.016,30,0.134,31,0.137,32,0.68,33,0.163,34,2.765,35,1.281,45,1.447,46,0.778,52,4.135,53,4.188,54,1.129,58,3.176,84,0.126,98,1.447,100,1.222,169,0.009,170,0.012,171,0.009,261,3.444,648,3.23,675,2.674,751,4.411,752,4.889,753,3.183,754,3.183,755,3.486,756,6.187,757,4.889,758,4.889,759,4.889,760,4.889,761,4.84,762,5.285,763,4.713,764,4.889,765,4.484,766,4.087,767,4.236,768,4.818,769,4.818,770,4.889,771,4.889,772,2.674,773,2.532,774,4.889]],["title/classes/ODataBatch.html",[0,0.347,78,3.025]],["body/classes/ODataBatch.html",[0,0.288,2,0.168,3,0.097,4,0.083,5,0.097,6,0.136,8,0.123,9,0.201,10,3.333,11,5.512,13,4.747,18,0.172,20,1.035,22,0.183,26,0.23,28,0.144,29,0.016,30,0.144,31,0.135,33,0.175,34,2.705,35,1.253,45,1.46,46,0.534,54,0.744,55,2.51,65,4.265,67,4.265,70,4.265,71,4.265,76,4.265,78,4.674,82,5.201,83,1.508,84,0.083,92,4.747,98,1.46,99,3.559,106,2.949,113,0.975,122,1.668,124,1.077,136,2.793,153,2.793,168,1.742,169,0.006,170,0.009,171,0.006,609,4.692,629,1.373,713,2.877,775,3.223,776,7.822,777,5.478,778,4.662,779,4.662,780,4.662,781,4.662,782,4.662,783,6.002,784,6.002,785,4.662,786,4.662,787,3.223,788,5.201,789,3.223,790,3.223,791,4.04,792,3.223,793,3.223,794,4.04,795,3.223,796,4.04,797,3.223,798,4.662,799,7.01,800,5.478,801,3.223,802,4.662,803,4.662,804,3.223,805,4.662,806,4.662,807,3.223,808,4.662,809,4.662,810,3.223,811,6.002,812,4.662,813,3.223,814,2.793,815,3.223,816,3.223,817,3.223,818,4.662,819,3.223,820,3.223,821,3.223,822,4.662,823,3.223,824,4.662,825,3.223,826,3.223,827,3.223,828,3.223,829,5.478,830,3.223,831,5.478,832,5.478,833,3.223,834,4.662,835,3.223,836,3.223,837,6.002,838,3.223,839,3.223,840,5.201,841,3.223,842,3.223,843,3.223,844,3.223,845,3.223,846,2.51,847,3.223,848,4.662,849,3.223,850,3.223,851,4.662,852,3.223,853,3.223,854,3.223,855,3.223,856,3.223,857,3.223,858,3.223,859,3.223,860,3.223,861,3.223,862,3.223]],["title/classes/ODataCollection.html",[0,0.347,863,1.734]],["body/classes/ODataCollection.html",[0,0.228,2,0.133,3,0.077,4,0.066,5,0.077,6,0.135,8,0.045,9,0.169,15,0.519,18,0.169,19,2.994,20,0.87,22,0.145,25,5.425,26,0.229,28,0.142,29,0.016,30,0.142,31,0.126,32,0.744,33,0.142,34,1.04,35,1.149,45,1.507,46,0.661,50,3.26,51,1.139,61,1.528,62,1.686,63,1.82,77,5.504,80,3.15,84,0.066,98,1.679,106,1.782,109,2.212,113,0.91,120,1.834,122,1.452,124,1.511,169,0.005,170,0.007,171,0.005,174,0.747,178,2.63,181,0.545,196,0.809,215,2.925,259,0.915,486,1.834,605,3.118,607,2.271,609,4.544,629,1.088,630,3.468,635,2.63,637,2.029,640,1.943,649,1.575,732,2.271,734,2.837,740,2.143,745,2.143,747,2.143,754,1.748,761,4.665,765,3.533,766,1.686,768,1.988,769,1.988,863,2.386,864,2.553,865,2.588,866,4.768,867,4.132,868,4.768,869,4.132,870,4.768,871,2.469,872,3.051,873,3.051,874,4.635,875,3.395,876,3.15,877,5.348,878,4.165,879,4.768,880,4.132,881,4.132,882,3.918,883,2.553,884,3.533,885,2.553,886,5.504,887,2.553,888,2.553,889,2.553,890,3.918,891,2.553,892,2.128,893,2.553,894,3.395,895,2.553,896,2.553,897,2.553,898,3.395,899,2.553,900,3.918,901,2.553,902,3.918,903,2.553,904,3.918,905,4.937,906,2.553,907,3.918,908,2.553,909,2.553,910,2.553,911,2.553,912,2.553,913,2.553,914,2.553,915,2.553,916,2.212,917,2.553,918,2.212,919,2.553,920,3.918,921,4.742,922,3.713,923,3.051,924,2.764,925,2.608,926,2.608,927,2.942,928,3.15,929,1.139,930,2.212,931,2.212,932,4.768,933,3.918,934,3.918,935,3.918,936,3.918,937,2.212,938,4.768,939,2.212,940,4.193,941,2.212,942,2.553,943,2.212,944,6.429,945,3.395,946,3.395,947,5,948,2.212,949,4.132,950,2.553,951,2.553,952,2.553,953,2.553,954,3.395,955,3.918,956,4.768,957,3.918,958,5.769,959,3.918,960,3.918,961,3.918,962,3.918,963,3.918,964,2.553,965,2.553,966,2.553,967,3.395,968,2.553,969,2.553,970,2.553,971,2.553,972,2.553,973,3.918,974,2.553,975,2.553,976,2.553,977,2.553,978,3.918,979,6.429,980,2.212,981,3.395,982,3.395,983,3.395,984,3.395,985,2.553,986,3.918,987,2.553,988,3.918,989,2.553,990,3.918,991,2.553,992,2.553,993,2.553,994,2.143,995,3.918,996,2.553,997,3.918,998,2.553,999,2.553,1000,2.553,1001,2.212,1002,3.395,1003,2.212,1004,2.212,1005,2.212,1006,2.553,1007,2.553,1008,2.553,1009,2.553,1010,2.553,1011,2.553,1012,2.212,1013,2.212,1014,2.553,1015,2.553,1016,1.575,1017,2.553,1018,2.553,1019,2.553,1020,2.553,1021,2.212,1022,2.212,1023,2.553,1024,2.553,1025,1.575,1026,2.212]],["title/classes/ODataConfig.html",[0,0.347,1027,2.125]],["body/classes/ODataConfig.html",[0,0.521,2,0.12,3,0.069,4,0.059,5,0.069,6,0.134,8,0.041,9,0.156,15,0.848,18,0.197,20,0.802,22,0.131,26,0.228,28,0.16,29,0.016,30,0.168,31,0.141,33,0.176,35,0.434,45,1.386,46,0.699,50,1.076,51,1.026,54,0.834,61,0.897,83,1.076,84,0.151,98,1.509,106,1.668,113,0.503,122,0.7,124,1.501,131,2.441,137,2.366,143,2.441,168,0.859,169,0.004,170,0.007,171,0.004,181,0.944,298,0.98,320,2.264,427,2.194,462,0.897,468,3.016,486,2.088,564,2.311,567,2.486,589,2.094,605,1.131,640,1.472,700,2.366,753,2.82,754,1.026,772,1.976,863,2.452,871,1.191,892,2.256,929,2.452,1027,1.976,1028,1.419,1029,2.586,1030,2.586,1031,2.753,1032,2.766,1033,3.042,1034,3.131,1035,3.613,1036,2.487,1037,3.131,1038,3.613,1039,3.131,1040,3.613,1041,3.131,1042,3.613,1043,3.108,1044,3.613,1045,3.131,1046,3.613,1047,3.001,1048,1.972,1049,3.613,1050,2.094,1051,1.976,1052,2.094,1053,2.3,1054,1.991,1055,2.3,1056,2.3,1057,2.3,1058,2.3,1059,2.3,1060,2.38,1061,2.3,1062,2.3,1063,2.3,1064,2.094,1065,2.3,1066,2.229,1067,2.3,1068,2.3,1069,2.094,1070,2.3,1071,2.703,1072,3.186,1073,2.229,1074,2.3,1075,2.094,1076,2.3,1077,3.186,1078,2.229,1079,2.3,1080,2.094,1081,2.3,1082,2.229,1083,2.3,1084,2.229,1085,2.3,1086,3.042,1087,2.229,1088,2.3,1089,2.094,1090,2.3,1091,3.186,1092,2.229,1093,2.3,1094,2.088,1095,1.612,1096,1.691,1097,1.026,1098,1.612,1099,1.991,1100,1.976,1101,1.258,1102,1.076,1103,1.972,1104,2.094,1105,2.229,1106,1.419,1107,1.419,1108,1.419,1109,1.333,1110,1.333,1111,1.258,1112,1.419,1113,1.419,1114,2.703,1115,2.703,1116,1.419,1117,1.419,1118,1.419,1119,1.419,1120,1.419,1121,1.419,1122,1.419,1123,1.419,1124,1.691,1125,1.419,1126,1.419,1127,1.777,1128,1.419,1129,1.419,1130,1.419,1131,1.419,1132,1.419,1133,1.419,1134,1.419,1135,1.419,1136,1.419,1137,2.931,1138,2.094,1139,1.419,1140,1.333,1141,2.753,1142,1.419,1143,2.229,1144,1.419,1145,1.419,1146,1.419,1147,3.273,1148,2.753,1149,3.391,1150,2.753,1151,2.753,1152,3.12,1153,2.753,1154,1.419,1155,2.753,1156,2.753,1157,1.419,1158,1.419,1159,2.229,1160,1.419,1161,1.419,1162,1.333,1163,1.026,1164,1.333,1165,3.12,1166,1.419,1167,2.229,1168,1.419,1169,2.753,1170,1.419,1171,1.419,1172,1.419,1173,1.419,1174,1.419,1175,1.419,1176,1.419,1177,1.976,1178,1.419,1179,1.419,1180,2.703,1181,2.753,1182,2.753,1183,1.131,1184,1.419,1185,2.487,1186,2.487,1187,2.194,1188,1.419,1189,2.229,1190,2.094,1191,2.753,1192,2.753,1193,1.419,1194,1.131,1195,1.419,1196,1.419,1197,2.229,1198,2.229,1199,2.094,1200,2.155,1201,1.419,1202,1.419,1203,1.333,1204,1.419,1205,1.419,1206,1.419,1207,1.333,1208,2.229,1209,1.419,1210,1.419]],["title/classes/ODataContainer.html",[0,0.347,1207,2.252]],["body/classes/ODataContainer.html",[0,0.562,2,0.145,3,0.084,4,0.072,5,0.084,6,0.115,8,0.049,9,0.18,15,0.773,18,0.144,20,0.928,22,0.158,26,0.189,28,0.109,29,0.016,30,0.16,31,0.138,33,0.175,35,0.525,45,0.593,46,0.748,50,1.301,51,1.241,54,0.965,61,1.084,83,1.301,84,0.163,98,1.569,106,1.039,113,0.582,122,0.847,124,1.587,131,1.521,137,1.956,143,1.521,168,1.039,169,0.005,170,0.008,171,0.005,181,0.956,298,1.185,320,2.509,427,2.946,462,1.084,468,3.135,486,2.804,564,1.44,567,2.682,589,2.423,605,1.367,640,1.703,700,2.615,753,2.998,754,1.241,772,2.287,863,2.673,871,1.44,892,2.493,929,2.673,1027,1.521,1028,1.715,1029,1.612,1030,1.612,1031,1.715,1032,2.287,1033,3.056,1036,2.471,1043,3.095,1047,3.211,1048,1.631,1050,1.612,1051,1.521,1052,1.612,1054,1.865,1060,2.547,1064,1.612,1066,1.715,1069,1.612,1072,2.912,1073,1.715,1075,1.612,1077,2.912,1078,1.715,1080,1.612,1082,1.715,1084,1.715,1086,3.144,1087,1.715,1089,1.612,1091,2.912,1092,1.715,1094,2.351,1095,1.865,1096,1.956,1097,1.241,1098,1.865,1099,2.242,1100,2.287,1101,1.521,1102,1.301,1103,2.179,1104,2.423,1105,2.579,1106,1.715,1107,1.715,1108,1.715,1109,1.612,1110,1.612,1111,1.521,1112,1.715,1113,1.715,1114,2.946,1115,2.946,1116,1.715,1117,1.715,1118,1.715,1119,1.715,1120,1.715,1121,1.715,1122,1.715,1123,1.715,1124,1.956,1125,1.715,1126,1.715,1127,2.056,1128,1.715,1129,1.715,1130,1.715,1131,1.715,1132,1.715,1133,1.715,1134,1.715,1135,1.715,1136,1.715,1137,3.239,1138,2.423,1139,1.715,1140,1.612,1141,3.1,1142,1.715,1143,2.579,1144,1.715,1145,1.715,1146,1.715,1147,3.479,1148,3.1,1149,3.697,1150,3.1,1151,3.1,1152,3.448,1153,3.1,1154,1.715,1155,3.1,1156,3.1,1157,1.715,1158,1.715,1159,2.579,1160,1.715,1161,1.715,1162,1.612,1163,1.241,1164,1.612,1165,3.448,1166,1.715,1167,2.579,1168,1.715,1169,3.1,1170,1.715,1171,1.715,1172,1.715,1173,1.715,1174,1.715,1175,1.715,1176,1.715,1177,3.056,1178,1.715,1179,1.715,1180,3.095,1181,3.1,1182,3.1,1183,1.367,1184,1.715,1185,2.748,1186,2.748,1187,2.471,1188,1.715,1189,2.579,1190,2.423,1191,3.1,1192,3.1,1193,1.715,1194,1.367,1195,1.715,1196,1.715,1197,2.579,1198,2.579,1199,2.423,1200,2.381,1201,1.715,1202,1.715,1203,1.612,1204,1.715,1205,1.715,1206,1.715,1207,2.423,1208,2.579,1209,1.715,1210,1.715,1211,4.181,1212,2.78,1213,2.78,1214,2.78,1215,2.78,1216,1.301]],["title/classes/ODataEntitiesAnnotations.html",[0,0.347,732,2.252]],["body/classes/ODataEntitiesAnnotations.html",[0,0.535,2,0.167,3,0.096,4,0.083,5,0.096,6,0.128,8,0.082,9,0.235,10,2.982,16,2.117,18,0.155,20,1.03,26,0.23,28,0.13,29,0.016,30,0.155,31,0.131,33,0.174,35,0.876,45,1.413,46,0.367,54,0.74,84,0.155,98,1.709,100,1.16,105,1.13,106,2.665,113,0.833,120,2.173,124,1.616,169,0.006,170,0.009,171,0.006,174,1.359,231,2.912,252,1.115,277,2.827,410,1.857,629,1.365,630,4.181,631,2.285,632,3.893,633,3.893,634,3.893,635,3.562,636,3.954,637,2.404,638,3.067,646,4.724,648,3.067,649,2.864,651,3.31,659,2.864,660,3.067,661,3.067,662,3.607,663,3.067,664,3.067,665,3.067,666,3.067,667,3.067,668,3.067,669,3.067,670,3.067,671,3.607,672,3.067,673,2.117,674,2.117,675,1.753,676,2.285,677,4.268,678,5.451,679,2.285,680,2.285,681,2.117,682,2.285,683,2.285,684,2.285,685,2.285,686,2.117,687,2.285,688,3.893,689,3.31,690,3.31,691,2.285,692,2.072,693,1.43,694,2.285,695,3.31,696,3.893,697,2.285,698,2.285,699,2.117,700,2.173,701,1.753,702,2.285,703,2.285,704,2.285,705,2.285,706,2.285,707,3.067,708,2.285,709,2.285,710,3.31,711,2.691,712,2.285,713,1.977,714,2.285,715,1.857,716,2.285,717,2.285,718,2.285,719,2.285,720,2.285,721,4.268,722,3.31,723,2.285,724,2.285,725,2.285,726,2.285,727,2.285,728,2.285,729,2.285,730,2.285,731,2.285,732,3.683,733,2.285,734,2.685,735,2.285,736,3.893,737,2.285,738,3.893,739,2.285,740,2.986,741,4.377,742,3.893,743,2.285,744,3.31,745,2.986,746,2.285,747,2.986,748,2.285,749,2.285,750,2.285,1217,2.495,1218,2.495,1219,2.495,1220,3.204,1221,3.204,1222,2.495,1223,2.495,1224,2.495,1225,2.495,1226,2.777,1227,3.204,1228,3.204,1229,3.204,1230,3.204,1231,3.204,1232,3.204,1233,3.204,1234,3.204,1235,3.204,1236,3.204,1237,3.204,1238,3.204,1239,3.204]],["title/classes/ODataEntityAnnotations.html",[0,0.347,711,2.252]],["body/classes/ODataEntityAnnotations.html",[0,0.531,2,0.165,3,0.095,4,0.082,5,0.095,6,0.131,8,0.081,9,0.233,10,2.97,16,2.085,18,0.154,20,1.019,26,0.233,28,0.129,29,0.016,30,0.154,31,0.133,33,0.174,35,0.867,45,1.405,46,0.362,54,0.729,84,0.154,98,1.707,100,1.148,105,1.122,106,2.655,113,0.827,120,2.149,124,1.61,169,0.006,170,0.009,171,0.006,174,1.344,231,2.898,252,1.103,277,2.803,410,1.83,629,1.345,630,4.172,631,2.251,632,3.859,633,3.859,634,3.859,635,3.55,636,3.927,637,2.378,638,3.034,646,4.699,648,3.034,649,2.833,651,3.274,659,2.833,660,3.034,661,3.034,662,3.576,663,3.034,664,3.034,665,3.034,666,3.034,667,3.034,668,3.034,669,3.034,670,3.034,671,3.576,672,3.034,673,2.085,674,2.085,675,1.726,676,2.251,677,4.238,678,5.439,679,2.251,680,2.251,681,2.085,682,2.251,683,2.251,684,2.251,685,2.251,686,2.085,687,2.251,688,3.859,689,3.274,690,3.274,691,2.251,692,2.049,693,1.408,694,2.251,695,3.274,696,3.859,697,2.251,698,2.251,699,2.085,700,2.149,701,1.726,702,2.251,703,2.251,704,2.251,705,2.251,706,2.251,707,3.034,708,2.251,709,2.251,710,3.274,711,3.661,712,2.251,713,3.34,714,2.251,715,3.137,716,2.251,717,3.859,718,2.251,719,3.859,720,2.251,721,4.238,722,3.274,723,3.859,724,2.251,725,3.859,726,2.251,727,3.859,728,2.251,729,3.859,730,2.251,731,2.251,732,2.662,733,2.251,734,1.552,735,2.251,736,2.251,737,2.251,738,2.251,739,2.251,740,1.726,741,4.354,742,3.859,743,2.251,744,3.274,745,1.726,746,2.251,747,1.726,748,2.251,749,2.251,750,2.251,1217,2.458,1218,2.458,1219,2.458,1222,2.458,1223,2.458,1224,2.458,1225,2.458,1226,2.735,1240,3.156,1241,3.156,1242,2.458,1243,3.156,1244,3.156,1245,3.156,1246,3.156,1247,3.156,1248,3.156,1249,3.156,1250,3.156,1251,3.156,1252,3.156,1253,3.156,1254,3.156,1255,3.156,1256,3.156,1257,3.156,1258,3.156,1259,3.156,1260,3.156]],["title/classes/ODataEntityConfig.html",[0,0.347,1072,2.252]],["body/classes/ODataEntityConfig.html",[0,0.555,2,0.14,3,0.081,4,0.069,5,0.081,6,0.122,8,0.047,9,0.176,15,0.767,18,0.176,20,0.904,22,0.153,26,0.205,28,0.119,29,0.016,30,0.16,31,0.139,33,0.175,34,1.095,35,0.769,45,0.869,46,0.74,50,1.258,51,1.199,54,0.941,61,1.048,83,1.258,84,0.161,98,1.559,106,1.004,113,0.567,122,0.819,124,1.572,131,1.47,137,1.907,143,1.47,168,1.004,169,0.005,170,0.008,171,0.005,181,0.948,298,1.145,320,2.487,427,2.421,462,1.048,468,3.114,486,2.763,564,1.392,567,2.833,589,2.362,605,1.322,640,2.532,700,2.571,753,2.967,754,1.199,772,2.229,863,2.634,871,1.392,892,2.773,929,2.634,1027,1.47,1028,1.658,1029,1.558,1030,1.558,1031,1.658,1032,2.229,1033,3.021,1036,2.421,1043,3.055,1047,3.174,1048,1.59,1050,1.558,1051,1.47,1052,1.558,1054,1.818,1060,2.423,1064,1.558,1066,1.658,1069,1.558,1072,3.184,1073,1.658,1075,1.558,1077,2.853,1078,1.658,1080,1.558,1082,1.658,1084,1.658,1086,3.112,1087,1.658,1089,1.558,1091,2.853,1092,1.658,1094,2.571,1095,2.196,1096,1.907,1097,1.199,1098,2.451,1099,2.196,1100,2.229,1101,1.47,1102,1.258,1103,2.423,1104,2.362,1105,2.515,1106,1.658,1107,1.658,1108,1.658,1109,1.558,1110,1.558,1111,1.47,1112,1.658,1113,1.658,1114,2.903,1115,2.903,1116,1.658,1117,1.658,1118,1.658,1119,1.658,1120,1.658,1121,1.658,1122,1.658,1123,1.658,1124,1.907,1125,1.658,1126,1.658,1127,2.004,1128,1.658,1129,1.658,1130,1.658,1131,1.658,1132,1.658,1133,1.658,1134,1.658,1135,1.658,1136,1.658,1137,3.184,1138,2.362,1139,1.658,1140,1.558,1141,3.037,1142,1.658,1143,2.515,1144,1.658,1145,1.658,1146,1.658,1147,3.444,1148,3.037,1149,3.643,1150,3.037,1151,3.037,1152,3.389,1153,3.037,1154,1.658,1155,3.037,1156,3.037,1157,1.658,1158,1.658,1159,2.515,1160,1.658,1161,1.658,1162,1.558,1163,1.199,1164,1.558,1165,3.389,1166,1.658,1167,2.515,1168,1.658,1169,3.037,1170,1.658,1171,1.658,1172,1.658,1173,1.658,1174,1.658,1175,1.658,1176,1.658,1177,2.229,1178,1.658,1179,1.658,1180,3.055,1181,3.037,1182,3.037,1183,1.322,1184,1.658,1185,2.701,1186,2.701,1187,2.421,1188,1.658,1189,2.515,1190,2.362,1191,3.037,1192,3.037,1193,1.658,1194,1.322,1195,1.658,1196,2.515,1197,3.037,1198,3.037,1199,3.184,1200,2.648,1201,1.658,1202,1.658,1203,1.558,1204,1.658,1205,1.658,1206,1.658,1207,1.558,1208,2.515,1209,1.658,1210,1.658,1216,1.258,1261,4.075,1262,2.688,1263,2.688,1264,2.688,1265,2.688,1266,2.688,1267,2.688,1268,2.688,1269,1.776]],["title/classes/ODataEntityParser.html",[0,0.347,1094,1.818]],["body/classes/ODataEntityParser.html",[0,0.432,2,0.136,3,0.078,4,0.067,5,0.078,6,0.129,8,0.046,9,0.265,18,0.165,20,0.884,22,0.148,26,0.218,28,0.139,29,0.016,30,0.163,31,0.139,33,0.172,34,1.623,35,1.405,45,1.405,46,0.456,54,0.92,84,0.151,98,1.659,99,1.221,100,1.352,105,0.492,113,0.94,120,2.531,122,1.213,124,1.345,168,0.975,169,0.005,170,0.008,171,0.005,179,0.706,181,0.975,197,0.764,198,0.764,252,1.476,288,1.221,298,1.112,320,1.938,462,2.686,468,2.305,567,2.483,607,2.309,629,1.112,640,1.623,692,2.414,693,2.414,701,1.427,753,1.778,773,2.503,865,3.573,940,2.801,994,1.427,1033,2.726,1036,1.959,1043,2.66,1047,1.959,1048,1.017,1054,2.156,1060,1.017,1086,3.159,1094,2.99,1095,2.156,1096,1.864,1097,1.778,1098,2.414,1099,1.778,1102,1.221,1103,1.017,1114,3.142,1115,1.283,1124,1.221,1127,1.959,1163,2.156,1180,2.865,1183,1.283,1185,2.66,1186,1.959,1187,3.32,1194,1.283,1200,2.059,1216,1.221,1270,1.86,1271,3.446,1272,3.857,1273,4.379,1274,3.984,1275,2.179,1276,2.841,1277,3.984,1278,3.984,1279,2.609,1280,2.609,1281,2.609,1282,2.609,1283,2.609,1284,2.609,1285,2.609,1286,2.841,1287,2.609,1288,3.857,1289,2.841,1290,2.609,1291,2.261,1292,2.841,1293,2.609,1294,2.841,1295,3.337,1296,2.609,1297,3.573,1298,2.841,1299,2.841,1300,2.841,1301,2.609,1302,3.337,1303,3.573,1304,3.857,1305,3.857,1306,2.841,1307,2.841,1308,3.573,1309,2.841,1310,2.841,1311,1.427,1312,3.446,1313,1.723,1314,1.86,1315,1.86,1316,3.446,1317,1.86,1318,1.86,1319,3.446,1320,2.841,1321,1.86,1322,1.86,1323,3.446,1324,1.86,1325,1.86,1326,1.86,1327,1.86,1328,1.86,1329,2.643,1330,1.86,1331,1.86,1332,1.86,1333,1.723,1334,1.86,1335,1.86,1336,1.86,1337,1.86,1338,1.86,1339,1.86,1340,1.86,1341,2.632,1342,2.841,1343,1.86,1344,1.86,1345,1.86,1346,1.86,1347,1.86,1348,1.86,1349,1.86,1350,1.86,1351,1.86,1352,2.841,1353,1.86,1354,3.857,1355,1.86,1356,1.86,1357,3.849,1358,1.86,1359,4.154,1360,1.86,1361,1.86,1362,3.337,1363,2.841,1364,3.446,1365,4.46,1366,1.86,1367,2.841,1368,2.841,1369,1.86,1370,1.86,1371,1.86,1372,1.86,1373,1.86,1374,1.86,1375,1.86,1376,1.86,1377,1.86,1378,1.86,1379,1.86,1380,2.841,1381,1.86,1382,1.86,1383,1.86,1384,1.86,1385,2.309,1386,2.841,1387,1.86,1388,1.86,1389,1.723,1390,1.86,1391,1.86,1392,1.86,1393,1.86,1394,1.86,1395,1.86,1396,1.86,1397,1.86,1398,1.86]],["title/injectables/ODataEntityService.html",[1399,2.252,1400,2.77]],["body/injectables/ODataEntityService.html",[0,0.252,3,0.085,4,0.073,5,0.085,6,0.133,8,0.05,9,0.182,10,2.695,15,0.882,18,0.195,19,3.525,20,0.937,22,0.16,26,0.232,28,0.168,29,0.016,30,0.172,31,0.139,32,1.026,33,0.173,34,2.063,35,0.956,45,1.617,46,0.773,50,3.48,51,1.257,52,3.26,53,3.125,54,0.651,58,1.976,63,2.009,80,5.061,83,1.318,84,0.073,98,1.608,100,1.581,105,0.797,169,0.005,170,0.008,171,0.005,174,1.236,178,3.684,196,1.339,231,2.695,252,1.015,261,3.338,404,2.441,501,2.79,675,1.541,711,1.633,715,3.26,732,1.633,751,4.919,753,2.26,754,2.26,755,2.009,761,2.009,762,2.194,763,5.061,765,1.861,766,1.861,772,2.77,773,1.459,921,3.944,922,4.692,923,4.692,1071,2.766,1101,2.309,1399,2.447,1400,3.011,1401,2.009,1402,2.817,1403,3.659,1404,4.222,1405,4.222,1406,3.288,1407,3.659,1408,4.222,1409,4.222,1410,4.222,1411,4.222,1412,3.659,1413,3.659,1414,2.817,1415,4.222,1416,2.817,1417,5.625,1418,4.222,1419,5.303,1420,2.817,1421,4.222,1422,2.817,1423,4.222,1424,2.817,1425,4.222,1426,2.817,1427,4.222,1428,2.817,1429,4.222,1430,2.817,1431,4.222,1432,2.817,1433,4.222,1434,2.817,1435,4.222,1436,2.817,1437,4.222,1438,2.817,1439,4.222,1440,2.817,1441,3.288,1442,4.222,1443,2.817,1444,4.389,1445,4.222,1446,2.817,1447,4.222,1448,2.817,1449,2.441,1450,2.441,1451,2.441,1452,2.441,1453,2.441,1454,2.441,1455,1.633,1456,2.817,1457,2.817,1458,2.441,1459,2.817,1460,2.817,1461,2.817,1462,2.817,1463,2.817,1464,2.817,1465,4.222,1466,2.817,1467,2.817,1468,2.817,1469,5.064,1470,2.817,1471,2.817,1472,2.817,1473,2.441,1474,2.817,1475,2.817,1476,2.817,1477,2.817,1478,4.222,1479,2.817,1480,2.817,1481,2.817]],["title/classes/ODataEnumConfig.html",[0,0.347,1077,2.252]],["body/classes/ODataEnumConfig.html",[0,0.561,2,0.145,3,0.083,4,0.072,5,0.083,6,0.115,8,0.049,9,0.18,15,0.773,18,0.144,20,0.925,22,0.158,26,0.189,28,0.109,29,0.016,30,0.159,31,0.138,33,0.175,35,0.523,45,0.591,46,0.747,50,1.296,51,1.236,54,0.963,61,1.08,83,1.296,84,0.162,98,1.568,106,1.035,113,0.58,122,0.844,124,1.586,131,1.515,137,1.951,143,1.515,168,1.035,169,0.005,170,0.008,171,0.005,181,0.956,298,2.136,320,2.507,427,2.465,462,1.08,468,3.133,486,2.346,564,1.435,567,2.86,589,2.417,605,1.362,640,2.273,700,2.61,753,2.995,754,1.236,772,2.28,863,2.669,871,1.435,892,2.489,929,2.669,1027,1.515,1028,1.709,1029,1.606,1030,1.606,1031,1.709,1032,2.28,1033,3.052,1036,2.465,1043,3.091,1047,3.207,1048,1.626,1050,1.606,1051,1.515,1052,1.606,1054,1.86,1060,2.451,1064,1.606,1066,1.709,1069,1.606,1072,2.906,1073,1.709,1075,1.606,1077,3.233,1078,1.709,1080,1.606,1082,1.709,1084,1.709,1086,3.141,1087,1.709,1089,1.606,1091,2.906,1092,1.709,1094,2.346,1095,1.86,1096,2.346,1097,1.236,1098,1.86,1099,2.669,1100,2.28,1101,1.515,1102,1.296,1103,2.175,1104,2.417,1105,2.572,1106,1.709,1107,1.709,1108,1.709,1109,1.606,1110,1.606,1111,1.515,1112,1.709,1113,1.709,1114,2.942,1115,2.942,1116,1.709,1117,1.709,1118,1.709,1119,1.709,1120,1.709,1121,1.709,1122,1.709,1123,1.709,1124,1.951,1125,1.709,1126,1.709,1127,2.05,1128,1.709,1129,1.709,1130,1.709,1131,1.709,1132,1.709,1133,1.709,1134,1.709,1135,1.709,1136,1.709,1137,3.233,1138,2.417,1139,1.709,1140,1.606,1141,3.093,1142,1.709,1143,2.572,1144,1.709,1145,1.709,1146,1.709,1147,3.476,1148,3.093,1149,3.691,1150,3.093,1151,3.093,1152,3.441,1153,3.093,1154,1.709,1155,3.093,1156,3.093,1157,1.709,1158,1.709,1159,2.572,1160,1.709,1161,1.709,1162,1.606,1163,1.236,1164,1.606,1165,3.441,1166,1.709,1167,2.572,1168,1.709,1169,3.093,1170,1.709,1171,1.709,1172,1.709,1173,1.709,1174,1.709,1175,1.709,1176,1.709,1177,2.28,1178,1.709,1179,1.709,1180,3.091,1181,3.093,1182,3.093,1183,1.362,1184,1.709,1185,2.743,1186,2.743,1187,2.465,1188,1.709,1189,2.572,1190,2.417,1191,3.093,1192,3.093,1193,1.709,1194,1.362,1195,1.709,1196,1.709,1197,2.572,1198,2.572,1199,2.417,1200,2.377,1201,1.709,1202,1.709,1203,1.606,1204,1.709,1205,1.709,1206,1.709,1207,1.606,1208,2.572,1209,1.709,1210,1.709,1216,1.296,1482,4.169,1483,2.77,1484,2.77,1485,2.77,1486,2.77]],["title/classes/ODataEnumParser.html",[0,0.347,1096,1.818]],["body/classes/ODataEnumParser.html",[0,0.442,2,0.141,3,0.081,4,0.07,5,0.081,6,0.124,8,0.048,9,0.255,18,0.176,19,1.208,20,0.909,22,0.154,26,0.209,28,0.128,29,0.016,30,0.16,31,0.139,33,0.17,34,1.669,35,1.431,45,1.176,46,0.469,54,0.946,84,0.153,98,1.666,99,1.267,100,1.378,105,0.511,113,0.949,120,2.58,122,1.248,124,1.368,168,1.012,169,0.005,170,0.008,171,0.005,179,0.732,181,0.997,197,0.792,198,0.792,252,1.497,288,1.267,298,2.107,320,1.975,462,2.712,468,2.349,567,2.523,607,2.375,629,1.154,640,2.246,692,2.46,693,2.46,701,1.481,773,1.402,865,3.642,940,2.865,994,1.481,1033,3.028,1036,2.015,1043,2.711,1047,1.331,1048,1.056,1054,2.206,1060,1.056,1086,3.193,1094,2.771,1095,1.828,1096,2.314,1097,1.828,1098,1.828,1099,2.46,1102,1.267,1103,1.056,1114,3.182,1115,1.331,1124,1.267,1127,2.015,1163,2.206,1180,2.912,1183,1.331,1185,2.711,1186,2.015,1187,3.355,1194,1.331,1200,1.154,1216,1.267,1270,1.93,1271,1.93,1272,1.93,1273,3.525,1275,2.241,1276,2.922,1286,1.93,1288,2.922,1289,1.93,1292,1.93,1294,1.93,1295,2.528,1297,3.266,1298,1.93,1299,1.93,1300,1.93,1302,3.844,1303,3.912,1304,3.931,1305,3.931,1306,2.922,1307,2.922,1308,3.912,1309,2.922,1310,2.922,1311,1.481,1312,3.931,1313,3.266,1314,2.922,1315,1.93,1316,3.525,1317,1.93,1318,1.93,1319,3.525,1320,2.922,1321,1.93,1322,1.93,1323,3.525,1324,1.93,1325,1.93,1326,1.93,1327,1.93,1328,1.93,1329,2.704,1330,1.93,1331,1.93,1332,1.93,1333,1.788,1334,1.93,1335,1.93,1336,1.93,1337,1.93,1338,1.93,1339,1.93,1340,1.93,1341,2.707,1342,2.922,1343,1.93,1344,1.93,1345,1.93,1346,1.93,1347,1.93,1348,1.93,1349,1.93,1350,1.93,1351,1.93,1352,2.922,1353,1.93,1354,3.931,1355,1.93,1356,1.93,1357,3.912,1358,1.93,1359,4.223,1360,1.93,1361,1.93,1362,3.402,1363,2.922,1364,3.525,1365,4.507,1366,1.93,1367,2.922,1368,2.922,1369,1.93,1370,1.93,1371,1.93,1372,1.93,1373,1.93,1374,1.93,1375,1.93,1376,1.93,1377,1.93,1378,1.93,1379,1.93,1380,2.922,1381,1.93,1382,1.93,1383,1.93,1384,1.93,1385,2.375,1386,2.922,1387,1.93,1388,1.93,1389,1.788,1390,1.93,1391,1.93,1392,1.93,1393,1.93,1394,1.93,1395,1.93,1396,1.93,1397,1.93,1398,1.93,1487,4.097,1488,2.707,1489,2.707,1490,2.707,1491,2.707,1492,2.707,1493,2.707,1494,2.707,1495,2.707,1496,2.707]],["title/classes/ODataFieldParser.html",[0,0.347,1095,1.734]],["body/classes/ODataFieldParser.html",[0,0.422,2,0.131,3,0.076,4,0.065,5,0.076,6,0.134,8,0.044,9,0.247,18,0.198,19,1.122,20,0.86,22,0.143,26,0.228,28,0.131,29,0.016,30,0.161,31,0.139,33,0.17,34,2.162,35,1.423,45,1.424,46,0.444,54,0.895,84,0.148,98,1.652,99,1.177,100,1.513,105,0.475,113,0.949,120,2.484,122,1.18,124,1.324,168,0.94,169,0.005,170,0.007,171,0.005,179,1.048,181,1.037,197,1.383,198,1.383,252,1.455,288,2.211,298,1.072,320,1.388,462,2.865,468,2.261,567,2.775,607,2.246,629,1.072,640,1.578,692,2.368,693,2.368,701,1.376,773,1.303,865,3.506,940,2.739,994,2.584,1033,2.682,1036,1.905,1043,2.61,1047,1.237,1048,0.981,1054,2.108,1060,0.981,1086,3.126,1094,2.682,1095,2.108,1096,1.813,1097,1.729,1098,1.729,1099,1.729,1102,1.177,1103,1.843,1114,3.101,1115,1.237,1124,1.177,1127,1.905,1163,2.108,1180,2.818,1183,1.237,1185,2.61,1186,1.905,1187,3.285,1194,1.237,1200,1.072,1216,1.177,1270,1.794,1271,1.794,1272,1.794,1273,3.369,1275,2.119,1276,2.762,1286,1.794,1288,2.762,1289,1.794,1292,1.794,1294,1.794,1295,2.39,1297,3.121,1298,1.794,1299,1.794,1300,1.794,1302,3.735,1303,3.786,1304,3.784,1305,3.784,1306,2.762,1307,2.762,1308,3.786,1309,2.762,1310,2.762,1311,1.376,1312,3.784,1313,1.662,1314,1.794,1315,1.794,1316,3.369,1317,1.794,1318,1.794,1319,3.369,1320,2.762,1321,1.794,1322,1.794,1323,3.369,1324,1.794,1325,1.794,1326,1.794,1327,1.794,1328,1.794,1329,2.584,1330,1.794,1331,1.794,1332,1.794,1333,1.662,1334,2.762,1335,1.794,1336,1.794,1337,1.794,1338,1.794,1339,1.794,1340,1.794,1341,2.559,1342,2.762,1343,1.794,1344,1.794,1345,1.794,1346,3.784,1347,1.794,1348,3.784,1349,3.784,1350,3.784,1351,1.794,1352,2.762,1353,1.794,1354,3.784,1355,1.794,1356,1.794,1357,3.786,1358,1.794,1359,4.087,1360,1.794,1361,1.794,1362,3.275,1363,2.762,1364,3.369,1365,4.413,1366,1.794,1367,2.762,1368,2.762,1369,1.794,1370,1.794,1371,1.794,1372,1.794,1373,1.794,1374,1.794,1375,1.794,1376,1.794,1377,1.794,1378,1.794,1379,1.794,1380,2.762,1381,1.794,1382,1.794,1383,1.794,1384,1.794,1385,2.246,1386,2.762,1387,1.794,1388,1.794,1389,1.662,1390,1.794,1391,1.794,1392,1.794,1393,1.794,1394,1.794,1395,1.794,1396,1.794,1397,1.794,1398,1.794,1497,3.874,1498,3.874,1499,2.516,1500,2.516,1501,2.516,1502,2.516,1503,2.516,1504,2.516,1505,2.516,1506,2.516,1507,2.516,1508,2.516,1509,2.516,1510,2.516,1511,2.516,1512,2.516,1513,2.516,1514,2.516,1515,2.516,1516,2.516,1517,2.516]],["title/classes/ODataModel.html",[0,0.347,929,1.734]],["body/classes/ODataModel.html",[0,0.195,2,0.114,3,0.066,4,0.056,5,0.066,6,0.131,8,0.038,9,0.149,18,0.173,19,3.121,20,0.769,22,0.124,25,5.206,26,0.221,28,0.152,29,0.016,30,0.148,31,0.131,32,0.832,33,0.13,35,1.407,45,1.472,46,0.711,50,3.183,51,0.974,54,0.504,61,1.352,62,1.442,63,1.556,77,4.656,80,4.721,84,0.056,88,1.442,98,1.597,100,1.495,120,2.798,124,1.65,168,0.815,169,0.004,170,0.007,171,0.004,174,0.639,178,2.415,196,0.692,215,2.686,259,0.782,261,3.183,277,1.795,288,1.021,462,2.09,486,1.622,520,1.891,605,3.479,607,2.009,609,4.664,630,3.271,635,2.415,637,1.795,640,1.757,649,1.346,692,2.391,693,2.545,711,2.499,715,3.106,765,4.416,766,1.442,768,1.699,769,1.699,773,1.795,840,3.004,863,2.391,867,3.737,869,3.737,871,1.13,872,2.699,873,3.358,875,3.004,880,3.737,881,3.737,892,2.545,894,3.004,898,3.004,905,5.1,916,1.891,918,1.891,921,3.358,922,3.358,923,2.699,924,2.499,925,2.358,926,2.358,929,2.769,931,1.891,937,3.737,939,1.891,940,4.142,941,1.891,943,1.891,944,6.386,945,3.004,946,3.004,947,6.061,948,1.891,949,3.004,954,5.182,979,4.943,980,1.891,981,3.737,982,3.737,983,1.891,984,1.891,994,1.194,1001,1.891,1002,5.182,1003,1.891,1004,1.891,1005,1.891,1012,1.891,1013,1.891,1021,1.891,1022,1.891,1025,1.346,1026,1.891,1071,3.345,1095,2.769,1097,0.974,1103,1.352,1111,1.896,1200,0.93,1203,1.265,1291,3.004,1333,1.442,1357,3.951,1365,1.442,1385,3.466,1389,2.29,1406,3.358,1407,4.256,1412,3.737,1413,4.256,1419,3.075,1441,2.699,1444,3.004,1518,2.182,1519,4.312,1520,4.312,1521,3.466,1522,3.466,1523,4.911,1524,3.466,1525,2.182,1526,2.182,1527,2.182,1528,2.182,1529,2.182,1530,2.182,1531,2.182,1532,3.466,1533,3.466,1534,2.182,1535,3.466,1536,2.182,1537,2.182,1538,3.466,1539,2.182,1540,3.466,1541,2.182,1542,3.466,1543,2.182,1544,3.466,1545,2.182,1546,2.182,1547,4.911,1548,2.182,1549,2.182,1550,2.182,1551,3.466,1552,2.182,1553,2.182,1554,2.182,1555,2.182,1556,3.466,1557,2.182,1558,1.891,1559,1.891,1560,4.911,1561,2.182,1562,3.466,1563,3.466,1564,2.182,1565,2.182,1566,2.182,1567,4.312,1568,2.182,1569,2.182,1570,2.182,1571,4.312,1572,2.182,1573,4.911,1574,2.182,1575,1.699,1576,2.182,1577,2.182,1578,3.466,1579,5.297,1580,2.182,1581,3.466,1582,2.182,1583,2.182,1584,2.182,1585,2.182,1586,2.182,1587,3.466,1588,2.182,1589,2.182,1590,2.182,1591,3.466,1592,2.182,1593,2.182,1594,2.182,1595,2.182,1596,2.182,1597,2.182,1598,2.182,1599,2.182,1600,2.182,1601,2.182,1602,5.704,1603,5.704,1604,3.466,1605,4.312,1606,3.466,1607,2.182,1608,2.182,1609,3.466,1610,2.182,1611,2.182,1612,2.182,1613,2.182,1614,2.182,1615,2.182,1616,2.182,1617,2.182,1618,2.182,1619,2.182,1620,2.182,1621,2.182,1622,2.182,1623,2.182,1624,2.182,1625,2.182,1626,2.182,1627,2.182,1628,2.182,1629,2.182,1630,2.182,1631,4.312,1632,2.182,1633,2.182,1634,2.182,1635,3.466,1636,2.182,1637,2.182,1638,3.466]],["title/injectables/ODataModelService.html",[1399,2.252,1639,3.025]],["body/injectables/ODataModelService.html",[0,0.378,3,0.127,4,0.109,5,0.127,6,0.13,8,0.075,9,0.243,10,3.081,15,0.875,18,0.191,20,1.251,22,0.241,26,0.234,28,0.16,29,0.016,30,0.16,31,0.137,32,0.882,33,0.137,34,2.581,35,1.432,45,1.598,46,0.806,52,3.915,53,3.909,54,0.978,58,2.638,84,0.109,98,1.44,100,1.059,105,1.196,169,0.008,170,0.011,171,0.008,231,3.081,261,3.454,675,2.317,751,5.412,753,2.827,754,2.827,755,3.02,761,3.02,762,3.298,763,3.724,765,2.798,773,2.193,863,2.827,872,5.631,878,5.259,886,5.747,892,2.515,929,2.515,940,3.267,1103,2.198,1399,3.267,1401,3.02,1419,5.156,1449,3.67,1450,3.67,1451,3.67,1452,3.67,1453,3.67,1454,3.67,1455,2.455,1458,3.67,1639,4.389,1640,4.235,1641,4.235,1642,7.231,1643,4.235,1644,6.496,1645,4.235,1646,4.235,1647,5.637,1648,4.235,1649,5.637,1650,4.235,1651,4.235,1652,4.235,1653,4.235,1654,4.235]],["title/modules/ODataModule.html",[1655,3.025,1656,2.77]],["body/modules/ODataModule.html",[0,0.482,3,0.162,4,0.139,5,0.162,6,0.116,10,2.803,15,0.587,18,0.139,20,1.197,26,0.162,28,0.117,29,0.016,30,0.117,31,0.095,45,1.15,46,0.882,52,4.281,53,3.329,54,1.246,83,2.525,84,0.17,98,1.402,124,1.246,169,0.01,170,0.012,171,0.01,174,1.579,1048,2.954,1455,3.127,1656,5.059,1657,4.201,1658,4.675,1659,6.149,1660,5.267,1661,5.395,1662,5.395,1663,5.395,1664,5.122,1665,7.095,1666,6.577,1667,6.149,1668,4.69,1669,5.395,1670,5.395,1671,6.149,1672,4.675,1673,5.395,1674,4.675,1675,5.395,1676,5.7,1677,5.395,1678,4.675,1679,4.675,1680,5.395]],["title/interfaces/ODataParser.html",[1086,1.818,1311,2.125]],["body/interfaces/ODataParser.html",[0,0.461,3,0.087,4,0.075,5,0.087,6,0.091,8,0.051,9,0.223,18,0.112,19,1.298,20,0.96,26,0.13,28,0.094,29,0.016,30,0.154,31,0.135,32,0.405,33,0.17,34,1.186,35,1.421,45,0.922,46,0.496,54,0.999,84,0.158,98,1.678,99,1.362,100,1.429,105,0.816,113,0.968,120,2.675,122,1.317,124,1.411,169,0.006,170,0.008,171,0.006,179,0.787,181,0.985,197,0.852,198,0.852,252,1.538,288,1.362,298,1.24,320,1.55,462,2.762,468,2.436,567,2.728,629,1.24,640,1.762,692,2.55,693,2.55,701,1.592,773,1.507,865,3.411,940,2.993,994,1.592,1033,2.859,1036,2.127,1043,2.811,1047,1.431,1048,1.135,1054,2.304,1060,1.135,1086,3.256,1094,2.859,1095,1.93,1096,2.024,1097,1.93,1098,1.93,1099,1.93,1102,1.362,1103,1.135,1114,3.26,1115,1.431,1124,1.362,1127,2.127,1163,2.304,1180,3.004,1183,1.431,1185,2.811,1186,2.127,1187,3.422,1194,1.431,1200,1.24,1216,1.362,1270,2.075,1271,2.075,1272,2.075,1273,3.681,1276,3.084,1286,2.075,1288,3.084,1289,2.075,1292,2.075,1294,2.075,1295,2.669,1297,3.411,1298,2.075,1299,2.075,1300,2.075,1302,3.95,1303,3.776,1304,4.076,1305,4.076,1306,3.084,1307,3.084,1308,3.776,1309,3.084,1310,3.084,1311,1.592,1312,4.076,1313,1.923,1314,2.075,1315,2.075,1316,3.681,1317,2.075,1318,2.075,1319,3.681,1320,3.084,1321,2.075,1322,2.075,1323,3.681,1324,2.075,1325,2.075,1326,2.075,1327,2.075,1328,2.075,1329,2.824,1330,2.075,1331,2.075,1332,2.075,1333,1.923,1334,2.075,1335,2.075,1336,2.075,1337,2.075,1338,2.075,1339,2.075,1340,2.075,1341,2.858,1342,3.084,1343,2.075,1344,2.075,1345,2.075,1346,2.075,1347,2.075,1348,2.075,1349,2.075,1350,2.075,1351,2.075,1352,3.084,1353,2.075,1354,4.076,1355,2.075,1356,2.075,1357,4.036,1358,2.075,1359,4.356,1360,2.075,1361,2.075,1362,3.527,1363,3.084,1364,3.681,1365,4.597,1366,2.075,1367,3.084,1368,3.084,1369,2.075,1370,2.075,1371,2.075,1372,2.075,1373,2.075,1374,2.075,1375,2.075,1376,2.075,1377,2.075,1378,2.075,1379,2.075,1380,3.084,1381,2.075,1382,2.075,1383,2.075,1384,2.075,1385,2.507,1386,3.084,1387,2.075,1388,2.075,1389,1.923,1390,2.075,1391,2.075,1392,2.075,1393,2.075,1394,2.075,1395,2.075,1396,2.075,1397,2.075,1398,2.075,1681,2.266,1682,2.91,1683,2.91]],["title/classes/ODataPathSegments.html",[0,0.347,56,2.77]],["body/classes/ODataPathSegments.html",[0,0.411,2,0.165,3,0.095,4,0.082,5,0.095,6,0.132,8,0.056,9,0.198,18,0.163,19,3.173,20,1.021,22,0.18,26,0.222,28,0.157,29,0.016,30,0.165,31,0.134,32,0.88,33,0.175,34,1.289,35,1.245,45,1.54,46,0.756,54,1.523,56,3.865,57,2.256,58,3.705,59,4.508,61,1.794,64,3.039,84,0.154,85,2.382,98,1.636,99,1.481,100,1.701,122,0.964,124,1.374,168,1.182,169,0.006,170,0.009,171,0.006,174,1.346,181,0.44,193,2.262,196,1.458,252,1.105,259,1.942,278,3.039,469,3.28,501,3.039,608,3.039,609,3.344,629,2.811,635,2.926,734,2.262,876,3.039,1016,1.952,1025,2.838,1071,1.556,1138,2.666,1147,1.639,1269,3.039,1275,3.255,1329,2.516,1684,5.325,1685,2.256,1686,5.157,1687,6.259,1688,4.243,1689,3.987,1690,5.537,1691,4.6,1692,3.164,1693,3.987,1694,3.164,1695,3.28,1696,3.164,1697,3.164,1698,4.923,1699,3.164,1700,3.987,1701,3.164,1702,3.987,1703,3.164,1704,3.164,1705,3.164,1706,3.164,1707,4.508,1708,2.464,1709,3.039,1710,3.581,1711,1.952,1712,2.256,1713,2.256,1714,2.09,1715,2.464,1716,3.582,1717,2.742,1718,2.742,1719,3.987,1720,2.742,1721,2.742,1722,2.742,1723,3.987,1724,5.157,1725,2.742,1726,2.742,1727,5.478,1728,5.478,1729,2.742,1730,4.697,1731,2.742,1732,2.742,1733,4.697,1734,2.742,1735,2.742,1736,2.742,1737,2.742,1738,2.742,1739,2.742,1740,2.742,1741,2.742,1742,2.742,1743,2.742,1744,2.742,1745,2.742,1746,2.742,1747,2.742,1748,2.742,1749,2.742,1750,2.742,1751,3.987,1752,2.742,1753,2.742,1754,2.742,1755,4.697,1756,2.742,1757,2.742,1758,2.742,1759,2.742,1760,2.09,1761,2.256,1762,2.742,1763,2.742,1764,3.987,1765,2.742,1766,3.987,1767,2.742,1768,2.256,1769,2.256,1770,2.742,1771,2.256,1772,2.742,1773,2.256,1774,1.952]],["title/classes/ODataQueryOptions.html",[0,0.347,60,2.77]],["body/classes/ODataQueryOptions.html",[0,0.415,2,0.167,3,0.096,4,0.083,5,0.096,6,0.132,8,0.056,9,0.2,18,0.181,19,3.183,20,1.031,22,0.182,26,0.223,28,0.148,29,0.016,30,0.159,31,0.123,32,0.646,33,0.155,35,1.413,45,1.545,46,0.728,54,1.073,60,3.895,61,2.336,62,2.119,84,0.141,85,1.661,88,3.069,98,1.63,100,1.161,106,2.041,113,0.446,122,1.663,124,1.073,137,3.199,168,2.041,169,0.006,170,0.009,171,0.006,181,0.446,259,2.375,635,2.945,692,2.073,693,2.073,740,2.541,745,2.541,747,2.541,876,3.069,884,2.119,924,3.166,925,2.541,926,2.541,927,2.866,928,3.069,1016,2.866,1025,3.37,1060,1.812,1071,3.442,1269,3.956,1275,3.476,1362,3.695,1385,1.859,1575,2.497,1579,3.617,1688,4.27,1695,3.895,1707,3.312,1709,3.069,1710,4.848,1711,1.979,1712,2.287,1713,2.287,1714,3.069,1760,2.119,1761,3.895,1768,3.895,1769,2.287,1771,2.287,1773,2.287,1774,1.979,1775,5.83,1776,2.287,1777,5.743,1778,4.645,1779,4.025,1780,4.645,1781,3.207,1782,3.207,1783,3.207,1784,5.917,1785,3.207,1786,3.207,1787,3.207,1788,4.025,1789,4.025,1790,3.207,1791,3.207,1792,3.207,1793,3.207,1794,3.207,1795,3.207,1796,2.497,1797,2.779,1798,3.617,1799,4.725,1800,2.779,1801,2.779,1802,2.779,1803,2.779,1804,2.779,1805,2.779,1806,2.779,1807,2.779,1808,2.779,1809,2.779,1810,2.497,1811,2.779,1812,2.779,1813,2.779,1814,2.779,1815,2.779,1816,2.779,1817,2.779,1818,2.779,1819,2.779,1820,2.779,1821,2.779,1822,2.779,1823,2.779,1824,2.779,1825,2.779,1826,2.779,1827,2.779,1828,2.779,1829,2.779,1830,2.779,1831,2.779,1832,2.779,1833,2.779,1834,2.779,1835,2.779,1836,6.359,1837,2.497,1838,2.779,1839,5.189,1840,2.779,1841,2.779,1842,2.779,1843,2.779,1844,2.779,1845,2.497,1846,2.779,1847,4.025,1848,4.025,1849,2.779,1850,2.779,1851,2.779,1852,2.779,1853,2.779,1854,2.779,1855,2.779,1856,2.779,1857,2.779,1858,2.779,1859,2.779,1860,4.025,1861,2.779,1862,2.779,1863,2.779,1864,2.779,1865,2.779,1866,2.779,1867,2.779,1868,2.779]],["title/classes/ODataSchema.html",[0,0.347,1162,2.252]],["body/classes/ODataSchema.html",[0,0.561,2,0.144,3,0.083,4,0.071,5,0.083,6,0.118,8,0.049,9,0.179,15,0.772,18,0.173,20,0.923,22,0.157,26,0.196,28,0.109,29,0.016,30,0.156,31,0.137,33,0.175,35,0.521,45,0.589,46,0.746,50,1.293,51,1.232,54,0.961,61,1.077,83,1.293,84,0.162,98,1.567,106,1.032,113,0.579,122,0.841,124,1.584,131,1.511,137,1.947,143,1.511,168,1.032,169,0.005,170,0.008,171,0.005,181,0.955,298,1.177,320,2.505,427,2.461,462,1.077,468,3.182,486,2.342,564,1.43,567,2.675,589,2.411,605,1.358,637,2.154,640,1.695,700,2.606,753,2.992,754,2.233,772,2.275,863,2.666,871,1.43,892,2.485,929,2.666,1027,1.511,1028,1.704,1029,1.601,1030,1.601,1031,1.704,1032,2.275,1033,3.049,1036,2.461,1043,3.087,1047,3.204,1048,1.623,1050,1.601,1051,1.511,1052,1.601,1054,1.856,1060,2.676,1064,1.601,1066,1.704,1069,1.601,1072,2.901,1073,1.704,1075,1.601,1077,2.901,1078,1.704,1080,1.601,1082,1.704,1084,1.704,1086,3.138,1087,1.704,1089,1.601,1091,2.901,1092,1.704,1094,2.342,1095,1.856,1096,1.947,1097,1.232,1098,1.856,1099,2.233,1100,2.275,1101,1.511,1102,1.293,1103,2.172,1104,2.411,1105,2.567,1106,1.704,1107,1.704,1108,1.704,1109,1.601,1110,1.601,1111,1.511,1112,1.704,1113,1.704,1114,2.938,1115,2.938,1116,1.704,1117,1.704,1118,1.704,1119,1.704,1120,1.704,1121,1.704,1122,1.704,1123,1.704,1124,1.947,1125,1.704,1126,1.704,1127,2.046,1128,1.704,1129,1.704,1130,1.704,1131,1.704,1132,1.704,1133,1.704,1134,1.704,1135,1.704,1136,1.704,1137,3.228,1138,2.411,1139,1.704,1140,1.601,1141,3.088,1142,1.704,1143,2.567,1144,1.704,1145,1.704,1146,1.704,1147,3.473,1148,3.088,1149,3.686,1150,3.088,1151,3.088,1152,3.436,1153,3.088,1154,1.704,1155,3.088,1156,3.088,1157,1.704,1158,1.704,1159,2.567,1160,1.704,1161,1.704,1162,2.411,1163,2.233,1164,2.901,1165,3.436,1166,1.704,1167,2.567,1168,1.704,1169,3.088,1170,1.704,1171,1.704,1172,1.704,1173,1.704,1174,1.704,1175,1.704,1176,1.704,1177,3.046,1178,1.704,1179,1.704,1180,3.087,1181,3.088,1182,3.088,1183,1.358,1184,1.704,1185,2.739,1186,2.739,1187,2.461,1188,1.704,1189,2.567,1190,2.411,1191,3.088,1192,3.088,1193,1.704,1194,1.358,1195,1.704,1196,1.704,1197,2.567,1198,2.567,1199,2.411,1200,2.373,1201,1.704,1202,1.704,1203,1.601,1204,1.704,1205,1.704,1206,1.704,1207,1.601,1208,2.567,1209,1.704,1210,1.704,1216,1.293,1869,4.16,1870,2.762,1871,2.762,1872,2.762,1873,2.762,1874,2.762,1875,2.762]],["title/classes/ODataServiceConfig.html",[0,0.347,1091,2.252]],["body/classes/ODataServiceConfig.html",[0,0.564,2,0.146,3,0.084,4,0.072,5,0.084,6,0.111,8,0.049,9,0.181,15,0.775,18,0.109,20,0.933,22,0.159,26,0.181,28,0.109,29,0.016,30,0.16,31,0.137,33,0.175,35,0.529,45,0.597,46,0.75,50,1.311,51,1.25,54,0.971,61,1.092,83,1.311,84,0.163,98,1.571,106,1.047,113,0.585,122,0.853,124,1.59,131,1.532,137,1.967,143,1.532,168,1.047,169,0.005,170,0.008,171,0.005,181,0.958,298,1.193,320,2.514,427,2.482,462,1.092,468,3.139,486,2.813,564,1.45,567,2.689,589,2.437,605,1.377,640,1.713,700,2.625,753,3.005,754,1.25,772,2.299,863,2.682,871,1.45,892,2.503,929,2.682,1027,1.532,1028,1.728,1029,1.623,1030,1.623,1031,1.728,1032,2.299,1033,3.063,1036,2.482,1043,3.104,1047,3.219,1048,1.64,1050,1.623,1051,1.532,1052,1.623,1054,1.876,1060,2.462,1064,1.623,1066,1.728,1069,1.623,1072,2.925,1073,1.728,1075,1.623,1077,2.925,1078,1.728,1080,1.623,1082,1.728,1084,1.728,1086,3.151,1087,1.728,1089,1.623,1091,3.251,1092,1.728,1094,2.362,1095,1.876,1096,1.967,1097,1.25,1098,1.876,1099,2.252,1100,3.067,1101,1.532,1102,1.311,1103,2.187,1104,2.437,1105,2.594,1106,1.728,1107,1.728,1108,1.728,1109,1.623,1110,1.623,1111,1.532,1112,1.728,1113,1.728,1114,2.955,1115,2.955,1116,1.728,1117,1.728,1118,1.728,1119,1.728,1120,1.728,1121,1.728,1122,1.728,1123,1.728,1124,1.967,1125,1.728,1126,1.728,1127,2.067,1128,1.728,1129,1.728,1130,1.728,1131,1.728,1132,1.728,1133,1.728,1134,1.728,1135,1.728,1136,1.728,1137,3.251,1138,2.437,1139,1.728,1140,1.623,1141,3.114,1142,1.728,1143,2.594,1144,1.728,1145,1.728,1146,1.728,1147,3.487,1148,3.114,1149,3.708,1150,3.114,1151,3.114,1152,3.46,1153,3.114,1154,1.728,1155,3.114,1156,3.114,1157,1.728,1158,1.728,1159,2.594,1160,1.728,1161,1.728,1162,1.623,1163,1.25,1164,1.623,1165,3.46,1166,1.728,1167,2.594,1168,1.728,1169,3.114,1170,1.728,1171,1.728,1172,1.728,1173,1.728,1174,1.728,1175,1.728,1176,1.728,1177,2.299,1178,1.728,1179,1.728,1180,3.104,1181,3.114,1182,3.114,1183,1.377,1184,1.728,1185,2.758,1186,2.758,1187,2.482,1188,1.728,1189,2.594,1190,2.437,1191,3.114,1192,3.114,1193,1.728,1194,1.377,1195,1.728,1196,1.728,1197,2.594,1198,2.594,1199,2.437,1200,2.39,1201,1.728,1202,1.728,1203,1.623,1204,1.728,1205,1.728,1206,1.728,1207,1.623,1208,2.594,1209,1.728,1210,1.728,1216,1.311,1876,4.204,1877,2.801,1878,2.801,1879,2.801]],["title/injectables/ODataServiceFactory.html",[1399,2.252,1660,2.77]],["body/injectables/ODataServiceFactory.html",[0,0.615,3,0.152,4,0.13,5,0.152,6,0.127,8,0.089,10,3.074,18,0.178,20,1.4,22,0.287,26,0.207,28,0.161,29,0.016,30,0.149,31,0.141,32,0.878,33,0.173,45,1.345,46,0.851,52,4.182,53,4.248,58,3.546,84,0.13,98,1.345,105,1.299,124,1.457,169,0.01,170,0.012,171,0.01,261,3.222,675,2.759,755,3.597,863,2.251,878,3.928,886,3.928,892,2.251,929,2.251,1071,3.103,1399,3.657,1400,5.145,1401,3.597,1455,2.924,1639,5.618,1644,5.468,1660,4.499,1880,5.044,1881,6.31,1882,6.886,1883,5.044,1884,6.31,1885,5.044,1886,5.044,1887,5.044,1888,6.31,1889,5.044]],["title/classes/ODataSettings.html",[0,0.347,1668,2.77]],["body/classes/ODataSettings.html",[0,0.335,2,0.196,3,0.113,4,0.097,5,0.113,6,0.133,8,0.066,9,0.224,15,0.871,18,0.196,20,1.152,22,0.213,26,0.225,28,0.164,29,0.016,30,0.17,31,0.135,32,0.522,33,0.174,35,1.273,45,1.487,46,0.773,54,1.375,84,0.097,98,1.597,122,2.22,124,1.199,169,0.007,170,0.01,171,0.007,605,3.43,753,3.302,863,2.316,884,4.455,892,1.674,929,2.316,967,5.843,1027,2.052,1034,4.498,1037,4.498,1039,4.498,1041,4.498,1045,4.498,1048,2.63,1060,2.024,1064,3.009,1069,3.009,1071,2.552,1075,3.009,1080,3.009,1089,3.009,1102,1.755,1103,1.463,1140,2.174,1147,2.688,1473,3.25,1664,5.251,1668,3.701,1788,3.25,1845,5.251,1890,3.751,1891,5.19,1892,5.19,1893,3.751,1894,5.19,1895,3.751,1896,5.19,1897,3.751,1898,5.19,1899,3.751,1900,3.751,1901,3.751,1902,5.19,1903,3.751,1904,3.751,1905,3.751,1906,3.751,1907,3.751,1908,3.751,1909,3.751,1910,5.952,1911,3.751,1912,3.751,1913,6.975,1914,6.975,1915,3.751,1916,3.751,1917,3.751,1918,5.19,1919,5.19,1920,3.751,1921,3.751,1922,3.751,1923,3.751,1924,3.751,1925,6.743,1926,3.751,1927,6.743,1928,6.743,1929,6.743,1930,6.743,1931,3.751,1932,3.751,1933,3.751,1934,3.751]],["title/classes/ODataValueAnnotations.html",[0,0.347,707,2.567]],["body/classes/ODataValueAnnotations.html",[0,0.542,2,0.173,3,0.099,4,0.085,5,0.099,6,0.107,8,0.084,9,0.24,10,3.007,16,2.183,18,0.157,20,1.053,26,0.219,28,0.132,29,0.016,30,0.156,31,0.134,33,0.175,35,0.896,45,1.428,46,0.379,54,0.763,84,0.157,98,1.713,100,1.186,105,1.146,106,2.685,113,0.845,120,2.221,124,1.63,169,0.006,170,0.009,171,0.006,174,1.389,231,2.939,252,1.141,277,2.877,410,1.915,629,1.408,630,4.2,631,2.356,632,3.961,633,3.961,634,3.961,635,3.586,636,4.011,637,2.458,638,3.136,646,4.774,648,3.136,649,2.929,651,3.385,659,2.929,660,3.136,661,3.136,662,3.67,663,3.136,664,3.136,665,3.136,666,3.136,667,3.136,668,3.136,669,3.136,670,3.136,671,3.67,672,3.136,673,2.183,674,2.183,675,1.807,676,2.356,677,4.329,678,5.476,679,2.356,680,2.356,681,2.183,682,2.356,683,2.356,684,2.356,685,2.356,686,2.183,687,2.356,688,3.961,689,3.385,690,3.385,691,2.356,692,2.118,693,1.474,694,2.356,695,3.385,696,3.961,697,2.356,698,2.356,699,2.183,700,2.221,701,1.807,702,2.356,703,2.356,704,2.356,705,2.356,706,2.356,707,4.248,708,2.356,709,2.356,710,3.385,711,2.751,712,2.356,713,2.039,714,2.356,715,1.915,716,2.356,717,2.356,718,2.356,719,2.356,720,2.356,721,3.385,722,3.385,723,2.356,724,2.356,725,2.356,726,2.356,727,2.356,728,2.356,729,2.356,730,2.356,731,2.356,732,2.751,733,2.356,734,1.625,735,2.356,736,2.356,737,2.356,738,2.356,739,2.356,740,1.807,741,4.423,742,3.961,743,2.356,744,3.385,745,1.807,746,2.356,747,1.807,748,2.356,749,2.356,750,2.356,1217,2.573,1218,2.573,1219,2.573,1222,2.573,1223,2.573,1224,2.573,1225,2.573,1242,2.573,1935,3.304,1936,3.304,1937,3.304]],["title/classes/OptionHandler.html",[0,0.347,1714,2.567]],["body/classes/OptionHandler.html",[0,0.404,2,0.161,3,0.093,4,0.08,5,0.093,6,0.134,8,0.08,18,0.183,19,2.92,20,1.004,22,0.176,26,0.227,28,0.153,29,0.016,30,0.166,31,0.125,33,0.163,35,1.451,45,1.586,46,0.718,54,1.045,60,2.205,61,2.296,62,2.043,84,0.138,85,1.601,88,2.989,98,1.621,100,1.131,106,2.526,113,0.744,122,1.629,124,1.045,137,2.755,168,2.445,169,0.006,170,0.009,171,0.006,181,0.43,259,1.917,277,2.343,635,1.521,637,2.343,692,2.019,693,2.019,740,2.474,745,2.474,747,2.474,876,2.989,884,2.989,924,3.101,925,2.474,926,2.474,927,2.791,928,2.989,1016,2.791,1025,2.791,1060,2.086,1071,3.622,1269,2.989,1275,3.426,1362,3.632,1385,1.792,1403,3.92,1575,2.408,1579,3.523,1688,2.205,1695,3.814,1707,3.226,1709,2.989,1710,4.866,1711,1.908,1712,2.205,1713,2.205,1714,2.989,1760,2.043,1761,3.814,1768,2.205,1769,2.205,1771,2.205,1773,2.205,1774,1.908,1775,5.921,1776,2.205,1777,5.67,1779,2.68,1784,5.505,1789,2.68,1796,2.408,1797,2.68,1798,3.523,1799,4.666,1800,2.68,1801,2.68,1802,2.68,1803,2.68,1804,2.68,1805,2.68,1806,2.68,1807,2.68,1808,2.68,1809,2.68,1810,2.408,1811,2.68,1812,2.68,1813,2.68,1814,2.68,1815,2.68,1816,2.68,1817,2.68,1818,2.68,1819,2.68,1820,2.68,1821,2.68,1822,2.68,1823,2.68,1824,2.68,1825,2.68,1826,2.68,1827,2.68,1828,2.68,1829,2.68,1830,2.68,1831,2.68,1832,2.68,1833,3.92,1834,4.635,1835,2.68,1836,6.31,1837,2.408,1838,5.101,1839,5.101,1840,2.68,1841,3.92,1842,2.68,1843,3.92,1844,2.68,1845,2.408,1846,2.68,1847,3.92,1848,3.92,1849,3.92,1850,2.68,1851,2.68,1852,5.101,1853,2.68,1854,2.68,1855,2.68,1856,2.68,1857,2.68,1858,2.68,1859,3.92,1860,3.92,1861,3.92,1862,2.68,1863,3.92,1864,2.68,1865,2.68,1866,2.68,1867,3.92,1868,2.68,1938,4.524,1939,4.524,1940,3.092,1941,3.092,1942,3.092,1943,3.092,1944,3.092,1945,3.092,1946,3.092,1947,3.092,1948,3.092,1949,3.092,1950,3.092,1951,3.092,1952,3.092,1953,3.092,1954,3.092,1955,2.68,1956,3.092]],["title/interfaces/Parser.html",[567,1.655,1311,2.125]],["body/interfaces/Parser.html",[3,0.087,4,0.075,5,0.087,6,0.091,8,0.1,9,0.222,11,2.066,18,0.111,20,0.957,26,0.13,28,0.094,29,0.016,30,0.148,31,0.138,33,0.17,34,1.18,35,1.335,45,0.919,46,0.59,50,2.017,51,1.293,59,2.066,61,1.13,64,2.848,65,2.256,66,2.51,67,2.256,68,2.51,69,3.736,70,2.256,71,2.256,72,2.51,73,2.51,74,2.51,75,2.51,76,2.256,81,3.736,83,1.356,84,0.211,98,0.618,99,3.794,100,1.524,113,0.794,122,1.737,124,0.669,131,2.358,137,1.356,143,1.584,169,0.008,170,0.008,171,0.008,181,0.921,197,0.848,198,0.848,252,1.237,261,3.31,288,2.017,298,1.234,320,1.038,427,1.424,462,2.008,468,1.837,486,2.991,522,2.51,563,2.51,564,1.5,567,2.43,569,2.51,604,2.51,607,2.499,608,2.848,621,2.51,630,1.584,638,1.914,659,1.787,660,1.914,661,1.914,662,1.914,663,1.914,664,1.914,665,1.914,666,1.914,667,1.914,668,1.914,669,1.914,670,1.914,671,1.914,672,1.914,673,1.914,674,1.914,681,1.914,692,2.297,693,2.297,699,2.848,700,1.356,713,3.519,715,2.499,734,2.532,741,1.914,754,2.545,763,1.914,773,1.5,788,4.942,791,2.51,794,2.51,796,2.51,814,2.51,874,2.51,884,2.848,892,1.293,925,1.584,926,1.584,994,2.816,1029,1.679,1030,1.679,1032,1.584,1033,1.356,1048,1.13,1050,1.679,1051,1.584,1052,1.679,1054,1.293,1060,2.711,1071,3.143,1097,1.293,1098,1.293,1099,1.293,1100,1.584,1101,2.358,1103,2.493,1104,2.984,1109,1.679,1163,1.293,1164,1.679,1177,1.584,1190,2.499,1200,1.234,1216,1.356,1275,2.358,1295,2.66,1302,2.66,1303,2.848,1308,2.848,1311,1.584,1313,1.914,1329,1.584,1341,2.848,1419,4.067,1441,4.009,1455,1.679,1671,2.51,1681,2.256,1711,2.66,1715,2.256,1796,2.256,1810,3.357,1837,2.256,1957,2.51,1958,2.897,1959,2.897,1960,2.897,1961,5.149,1962,2.897,1963,4.311,1964,5.149,1965,2.51,1966,4.311,1967,2.897,1968,4.311,1969,4.311,1970,6.95,1971,4.311,1972,2.897,1973,2.897,1974,2.897,1975,5.149,1976,4.311,1977,4.311,1978,6.801,1979,5.149,1980,4.311,1981,4.311,1982,4.311,1983,2.897,1984,2.897,1985,2.897,1986,4.311,1987,2.897,1988,2.897,1989,2.897,1990,2.51,1991,2.897,1992,4.311,1993,2.897,1994,4.311,1995,2.897,1996,2.897,1997,4.311,1998,2.897,1999,2.897,2000,2.51,2001,6.097,2002,2.897,2003,2.51,2004,4.311,2005,4.311,2006,4.311,2007,2.897,2008,4.311,2009,2.897,2010,2.897,2011,2.897,2012,2.897,2013,2.897,2014,2.897,2015,2.897,2016,2.897,2017,2.897,2018,2.897,2019,2.897,2020,2.897,2021,2.897,2022,4.311,2023,4.311,2024,4.311,2025,2.897,2026,2.897,2027,2.897,2028,2.897,2029,2.897,2030,3.736,2031,3.736,2032,3.736,2033,2.897,2034,2.897,2035,2.897]],["title/classes/SegmentHandler.html",[0,0.347,1698,3.025]],["body/classes/SegmentHandler.html",[0,0.422,2,0.171,3,0.099,4,0.085,5,0.099,6,0.128,8,0.058,9,0.204,18,0.178,19,3.29,20,1.048,22,0.187,26,0.216,28,0.16,29,0.016,30,0.164,31,0.137,32,0.657,33,0.172,34,1.337,35,1.374,45,1.291,46,0.765,54,1.278,56,2.34,57,2.34,58,3.609,59,3.368,61,1.842,64,3.12,84,0.156,85,2.446,98,1.644,99,1.536,100,1.72,122,0.999,124,1.398,168,1.765,169,0.006,170,0.009,171,0.006,174,1.382,193,2.323,196,1.497,252,1.135,259,2.393,278,3.12,469,3.368,501,3.12,608,3.12,609,2.025,629,2.846,635,1.614,637,2.446,734,2.323,1016,2.025,1025,3.414,1071,2.976,1147,1.7,1242,2.555,1269,3.998,1275,1.795,1329,2.583,1684,5.193,1685,2.34,1686,2.844,1687,6.217,1688,2.34,1689,2.844,1690,5.485,1693,2.844,1695,2.34,1698,4.713,1700,2.844,1702,2.844,1707,4.573,1708,2.555,1709,3.12,1710,3.998,1711,2.025,1712,2.34,1713,2.34,1714,2.168,1715,2.555,1716,4.713,1717,2.844,1718,2.844,1719,4.093,1720,2.844,1721,2.844,1722,2.844,1723,4.093,1724,5.245,1725,2.844,1726,2.844,1727,5.558,1728,5.558,1729,2.844,1730,4.795,1731,2.844,1732,2.844,1733,4.795,1734,2.844,1735,2.844,1736,2.844,1737,2.844,1738,2.844,1739,2.844,1740,2.844,1741,2.844,1742,2.844,1743,2.844,1744,2.844,1745,2.844,1746,2.844,1747,2.844,1748,2.844,1749,2.844,1750,2.844,1751,4.093,1752,2.844,1753,2.844,1754,2.844,1755,4.795,1756,2.844,1757,2.844,1758,2.844,1759,2.844,1760,2.168,1761,2.34,1762,2.844,1763,2.844,1764,4.093,1765,4.093,1766,4.093,1767,4.093,1768,3.946,1769,2.34,1770,4.093,1771,2.34,1772,2.844,1773,2.34,1774,2.025,1955,2.844,2036,4.723,2037,4.723,2038,3.282,2039,4.723,2040,3.282,2041,3.282,2042,3.282,2043,3.282,2044,3.282,2045,3.282,2046,3.282,2047,3.282]],["title/dependencies.html",[2048,3.237,2049,4.053]],["body/dependencies.html",[29,0.016,51,2.694,169,0.011,170,0.013,171,0.011,1455,3.499,2049,5.232,2050,6.037,2051,8.026,2052,6.037,2053,6.037,2054,6.037,2055,7.033,2056,7.033,2057,6.037,2058,6.037,2059,6.037,2060,6.037,2061,6.037,2062,6.037,2063,6.037]],["title/miscellaneous/enumerations.html",[2064,1.997,2065,4.053]],["body/miscellaneous/enumerations.html",[6,0.131,7,4.354,8,0.089,19,2.242,24,5.454,28,0.137,29,0.016,31,0.111,35,1.557,57,4.488,64,4.158,86,4.354,87,4.354,88,3.319,89,4.354,90,4.354,100,1.573,169,0.01,170,0.012,171,0.01,174,1.842,193,3.095,196,1.995,252,1.512,278,4.158,463,4.354,464,5.454,469,4.488,470,4.354,471,4.354,501,4.158,608,4.158,734,3.095,740,3.443,745,3.443,747,3.443,924,3.648,925,3.443,926,3.443,927,3.884,928,4.158,1016,3.884,1684,3.583,1685,4.901,1716,4.901,1775,3.912,1776,4.488,1784,4.901,1798,4.901,1799,4.488,2064,3.1,2065,4.354,2066,5.024,2067,5.454,2068,5.024,2069,5.024,2070,6.294,2071,3.912,2072,3.912,2073,6.294,2074,6.294,2075,6.294,2076,6.294,2077,6.294]],["title/miscellaneous/functions.html",[410,2.711,2064,1.997]],["body/miscellaneous/functions.html",[6,0.113,8,0.091,18,0.207,28,0.174,29,0.016,30,0.174,32,0.717,33,0.165,35,0.973,45,1.624,58,2.412,137,2.993,169,0.01,170,0.012,171,0.01,174,1.872,410,2.987,927,3.18,1658,4.466,1664,4.013,1672,4.466,1679,5.541,1774,4.486,2064,3.18,2071,6.201,2072,4.013,2078,6.395,2079,6.395,2080,6.395,2081,6.395,2082,6.395,2083,6.395,2084,6.395,2085,5.154,2086,6.395,2087,6.395,2088,6.395,2089,6.953,2090,5.154,2091,4.466,2092,5.154,2093,5.154,2094,5.154,2095,6.395,2096,5.154,2097,5.154,2098,4.466,2099,5.154,2100,6.395,2101,5.154,2102,5.154,2103,5.154,2104,5.154,2105,5.154,2106,5.154,2107,5.154,2108,5.154]],["title/index.html",[8,0.057,2109,3.237,2110,3.237]],["body/index.html",[0,0.591,4,0.111,10,2.191,29,0.016,30,0.112,31,0.126,33,0.158,46,0.905,47,2.505,49,2.505,52,2.495,54,0.667,58,1.353,61,2.005,84,0.185,98,0.616,99,2.014,100,1.076,105,0.545,113,0.599,122,1.566,124,0.667,154,2.505,169,0.005,170,0.008,171,0.005,174,1.26,197,1.667,261,2.406,277,1.497,288,2.406,320,1.036,473,2.505,486,2.988,564,2.229,611,2.505,636,4.024,659,1.783,686,1.909,734,1.421,753,1.29,754,1.92,766,1.909,767,2.505,846,2.251,871,2.663,873,4.004,876,2.843,905,5.657,924,2.98,925,3.116,926,2.354,994,1.581,1032,2.812,1048,2.005,1051,1.581,1103,2.222,1110,1.675,1111,3.331,1124,2.666,1137,1.675,1163,1.29,1177,2.812,1199,4.098,1200,1.232,1216,1.353,1297,2.843,1311,1.581,1399,2.495,1400,3.069,1406,2.251,1455,3.834,1655,4.004,1656,4.343,1659,3.729,1660,3.069,1667,5.89,1668,3.666,1674,4.937,1676,2.505,1678,2.505,1709,2.843,1711,4.671,1760,2.843,1799,3.069,1965,5.534,1990,2.505,2000,2.505,2003,2.505,2111,7.41,2112,2.89,2113,4.304,2114,2.89,2115,2.89,2116,2.89,2117,2.89,2118,5.142,2119,5.142,2120,2.89,2121,4.304,2122,2.89,2123,2.89,2124,4.304,2125,4.304,2126,2.89,2127,5.697,2128,2.89,2129,4.304,2130,2.89,2131,2.89,2132,2.89,2133,5.142,2134,5.697,2135,2.89,2136,4.304,2137,4.304,2138,5.697,2139,4.304,2140,4.304,2141,4.304,2142,4.304,2143,4.304,2144,4.304,2145,4.304,2146,4.304,2147,5.697,2148,2.89,2149,2.89,2150,2.89,2151,2.89,2152,6.386,2153,2.89,2154,2.89,2155,2.89,2156,2.89,2157,2.89,2158,2.89,2159,6.091,2160,2.89,2161,5.697,2162,5.697,2163,2.89,2164,2.89,2165,2.89,2166,2.89,2167,2.89,2168,2.89,2169,2.89,2170,4.304,2171,2.89,2172,4.304,2173,4.304,2174,5.142,2175,2.89,2176,4.304,2177,2.89,2178,5.142,2179,2.89,2180,2.89,2181,6.386,2182,5.142,2183,6.091,2184,2.89,2185,2.89,2186,2.89,2187,2.89,2188,2.89,2189,4.304,2190,2.89,2191,5.142,2192,2.89,2193,2.89,2194,4.304,2195,2.89,2196,4.304,2197,2.89,2198,6.091,2199,2.89,2200,4.304,2201,2.89,2202,6.386,2203,5.142,2204,4.304,2205,4.304,2206,4.304,2207,4.304,2208,4.304,2209,5.142,2210,2.89,2211,2.89,2212,4.304,2213,2.89,2214,2.89,2215,2.89,2216,4.304,2217,2.89,2218,4.304,2219,2.89,2220,4.304,2221,2.89,2222,2.89,2223,4.304,2224,2.89,2225,5.142,2226,2.89,2227,2.89,2228,2.89,2229,2.505,2230,4.304,2231,2.89,2232,2.89,2233,2.89,2234,2.89,2235,2.89,2236,2.89,2237,2.89,2238,2.89,2239,2.89,2240,2.89,2241,2.89,2242,2.89,2243,2.89,2244,2.89,2245,2.89,2246,4.304,2247,2.89,2248,2.89,2249,2.89,2250,2.89,2251,2.89,2252,2.89,2253,2.89,2254,2.89,2255,2.89,2256,2.89]],["title/modules.html",[1657,4.141]],["body/modules.html",[29,0.014,169,0.012,170,0.014,171,0.012,1656,4.55,1657,4.969,2257,6.381]],["title/overview.html",[2258,4.608]],["body/overview.html",[2,0.33,29,0.014,122,1.924,169,0.012,170,0.014,171,0.012,846,4.92,1401,4.505,1655,4.92,1681,4.92,2229,5.475,2258,5.475,2259,6.318]],["title/miscellaneous/typealiases.html",[2064,1.997,2260,4.677]],["body/miscellaneous/typealiases.html",[6,0.124,8,0.083,29,0.016,31,0.143,33,0.164,35,1.138,80,3.983,107,5.772,113,0.839,169,0.009,170,0.011,171,0.009,181,0.653,259,2.387,427,2.965,462,2.352,468,2.569,640,3.301,763,3.983,924,3.495,925,3.298,926,3.298,927,3.72,928,3.983,930,5.225,1048,2.352,1054,2.095,1060,2.951,1098,2.691,1099,2.691,1100,3.298,1295,3.72,1302,4.11,1329,3.643,1558,5.225,1559,5.225,1684,3.348,1685,4.3,1690,4.695,1708,5.187,1710,4.4,1774,2.897,1776,5.183,1957,4.069,2030,5.225,2031,5.225,2032,5.225,2064,2.897,2067,4.069,2071,6.282,2072,3.656,2091,5.225,2098,5.225,2261,7.938,2262,6.03,2263,7.028,2264,6.661,2265,6.661,2266,6.03,2267,6.661,2268,4.696]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":629,"title":{},"body":{"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueAnnotations.html":{},"classes/SegmentHandler.html":{}}}],["0.10.2",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":122,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{},"overview.html":{}}}],["1).split",{"_index":683,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["1.10.0",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":846,"title":{},"body":{"classes/ODataBatch.html":{},"index.html":{},"overview.html":{}}}],["3",{"_index":686,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"index.html":{}}}],["4",{"_index":2229,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.0",{"_index":621,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["404",{"_index":1477,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["5",{"_index":2231,"title":{},"body":{"index.html":{}}}],["6.5.4",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":2259,"title":{},"body":{"overview.html":{}}}],["9.1.9",{"_index":2051,"title":{},"body":{"dependencies.html":{}}}],["9a",{"_index":1727,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["_annotations",{"_index":867,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_context",{"_index":632,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["_entity",{"_index":1519,"title":{},"body":{"classes/ODataModel.html":{}}}],["_functions",{"_index":633,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["_models",{"_index":868,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_parse",{"_index":1361,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_parse(obj",{"_index":1369,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_parse(objs",{"_index":1370,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_properties",{"_index":634,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["_query",{"_index":881,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_relations",{"_index":1520,"title":{},"body":{"classes/ODataModel.html":{}}}],["_resource",{"_index":869,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_segments",{"_index":880,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["_state",{"_index":870,"title":{},"body":{"classes/ODataCollection.html":{}}}],["_tojson",{"_index":1372,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_tojson(obj",{"_index":1374,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["_tojson(objs",{"_index":1375,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["abstract",{"_index":237,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["acc",{"_index":700,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["acc[name",{"_index":701,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataValueAnnotations.html":{}}}],["accept",{"_index":69,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{}}}],["acceptmetadata",{"_index":1029,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["accessors",{"_index":637,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["action",{"_index":196,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["action(key",{"_index":1415,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["action(name",{"_index":1004,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["action.ts",{"_index":175,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["action.ts:1",{"_index":306,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:12",{"_index":183,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:14",{"_index":186,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:15",{"_index":188,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:16",{"_index":185,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:17",{"_index":184,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:18",{"_index":187,"title":{},"body":{"classes/CsdlAction.html":{}}}],["action.ts:22",{"_index":313,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:24",{"_index":317,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:25",{"_index":315,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:26",{"_index":314,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:27",{"_index":316,"title":{},"body":{"classes/CsdlFunctionImport.html":{}}}],["action.ts:3",{"_index":310,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:31",{"_index":202,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:33",{"_index":205,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:34",{"_index":203,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:35",{"_index":204,"title":{},"body":{"classes/CsdlActionImport.html":{}}}],["action.ts:39",{"_index":367,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:4",{"_index":312,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:41",{"_index":369,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:42",{"_index":374,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:43",{"_index":370,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:44",{"_index":368,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:45",{"_index":371,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:46",{"_index":372,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:47",{"_index":373,"title":{},"body":{"classes/CsdlParameter.html":{}}}],["action.ts:5",{"_index":308,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:51",{"_index":395,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:53",{"_index":401,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:54",{"_index":397,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:55",{"_index":396,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:56",{"_index":398,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:57",{"_index":399,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:58",{"_index":400,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["action.ts:6",{"_index":307,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:7",{"_index":309,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["action.ts:8",{"_index":311,"title":{},"body":{"classes/CsdlFunction.html":{}}}],["actionimport",{"_index":516,"title":{},"body":{"classes/Field.html":{}}}],["actionimports",{"_index":263,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["actions",{"_index":404,"title":{},"body":{"classes/CsdlSchema.html":{},"injectables/ODataEntityService.html":{}}}],["add",{"_index":871,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["add(method",{"_index":127,"title":{},"body":{"classes/BatchRequest.html":{}}}],["add(model",{"_index":890,"title":{},"body":{"classes/ODataCollection.html":{}}}],["addition",{"_index":2002,"title":{},"body":{"interfaces/Parser.html":{}}}],["additionalitems",{"_index":1345,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["addressinfo",{"_index":2182,"title":{},"body":{"index.html":{}}}],["advanced",{"_index":2189,"title":{},"body":{"index.html":{}}}],["aggregate",{"_index":2091,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["airport",{"_index":2163,"title":{},"body":{"index.html":{}}}],["airport.get",{"_index":2165,"title":{},"body":{"index.html":{}}}],["airports",{"_index":2154,"title":{},"body":{"index.html":{}}}],["airports.all",{"_index":2156,"title":{},"body":{"index.html":{}}}],["airports.entity(\"cyyz",{"_index":2164,"title":{},"body":{"index.html":{}}}],["airports.filter().clear",{"_index":2177,"title":{},"body":{"index.html":{}}}],["airports.filter().push({location",{"_index":2175,"title":{},"body":{"index.html":{}}}],["airports.filter({location",{"_index":2169,"title":{},"body":{"index.html":{}}}],["airports.get",{"_index":2174,"title":{},"body":{"index.html":{}}}],["airports.get({withcount",{"_index":2160,"title":{},"body":{"index.html":{}}}],["airportsservice",{"_index":2150,"title":{},"body":{"index.html":{}}}],["airportsservice.entities",{"_index":2155,"title":{},"body":{"index.html":{}}}],["alias",{"_index":259,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["alias(name",{"_index":1025,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["aliases",{"_index":1774,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["all(options",{"_index":1466,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["angular",{"_index":2111,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2050,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2052,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":83,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"modules/ODataModule.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["angular/compiler",{"_index":2053,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1455,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Parser.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":2054,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":2055,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2058,"title":{},"body":{"dependencies.html":{}}}],["angularodataentity",{"_index":2125,"title":{},"body":{"index.html":{}}}],["angularodatamodel",{"_index":2126,"title":{},"body":{"index.html":{}}}],["annotation",{"_index":325,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["annotation.ts",{"_index":207,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{}}}],["annotation.ts:1",{"_index":211,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:15",{"_index":224,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:17",{"_index":226,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:18",{"_index":225,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["annotation.ts:2",{"_index":212,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["annotation.ts:22",{"_index":441,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:24",{"_index":446,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:25",{"_index":451,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:26",{"_index":443,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:27",{"_index":444,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:28",{"_index":442,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:29",{"_index":447,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:30",{"_index":445,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:31",{"_index":448,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:32",{"_index":449,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:33",{"_index":450,"title":{},"body":{"classes/CsdlTerm.html":{}}}],["annotation.ts:5",{"_index":228,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:7",{"_index":230,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotation.ts:9",{"_index":229,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["annotationlist",{"_index":208,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["annotations",{"_index":486,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["annotationslist",{"_index":405,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["annots",{"_index":905,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["annots.count",{"_index":962,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.skip",{"_index":957,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.skiptoken",{"_index":960,"title":{},"body":{"classes/ODataCollection.html":{}}}],["annots.top",{"_index":955,"title":{},"body":{"classes/ODataCollection.html":{}}}],["api",{"_index":2113,"title":{},"body":{"index.html":{}}}],["apis",{"_index":1914,"title":{},"body":{"classes/ODataSettings.html":{}}}],["aport",{"_index":2168,"title":{},"body":{"index.html":{}}}],["aports",{"_index":2159,"title":{},"body":{"index.html":{}}}],["app",{"_index":2140,"title":{},"body":{"index.html":{}}}],["app.component.css",{"_index":2145,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":2143,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":2146,"title":{},"body":{"index.html":{}}}],["application/http",{"_index":2011,"title":{},"body":{"interfaces/Parser.html":{}}}],["application/json",{"_index":2010,"title":{},"body":{"interfaces/Parser.html":{}}}],["application_http",{"_index":74,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{}}}],["application_json",{"_index":66,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{}}}],["appliesto",{"_index":222,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["appmodule",{"_index":2134,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":2007,"title":{},"body":{"interfaces/Parser.html":{}}}],["arr",{"_index":1854,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.find(v",{"_index":1856,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["arr.push(obj",{"_index":1858,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["array",{"_index":1060,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["array.isarray(objs",{"_index":1367,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["array.isarray(value",{"_index":1304,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["assertarray",{"_index":1838,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assertobject",{"_index":1852,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["assign",{"_index":1403,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/OptionHandler.html":{}}}],["assign(entity",{"_index":1418,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["assign(values",{"_index":1867,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["at(index",{"_index":1849,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["attach",{"_index":872,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{}}}],["attach(resource",{"_index":894,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["attach(value",{"_index":1642,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["attr",{"_index":616,"title":{},"body":{"classes/Field.html":{}}}],["attr.nodevalue",{"_index":620,"title":{},"body":{"classes/Field.html":{}}}],["attribute",{"_index":470,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["attribute_abstract",{"_index":557,"title":{},"body":{"classes/Field.html":{}}}],["attribute_action",{"_index":554,"title":{},"body":{"classes/Field.html":{}}}],["attribute_alias",{"_index":524,"title":{},"body":{"classes/Field.html":{}}}],["attribute_applies_to",{"_index":562,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_term",{"_index":561,"title":{},"body":{"classes/Field.html":{}}}],["attribute_base_type",{"_index":532,"title":{},"body":{"classes/Field.html":{}}}],["attribute_contains_target",{"_index":546,"title":{},"body":{"classes/Field.html":{}}}],["attribute_default_value",{"_index":541,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set",{"_index":555,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_set_path",{"_index":548,"title":{},"body":{"classes/Field.html":{}}}],["attribute_entity_type",{"_index":550,"title":{},"body":{"classes/Field.html":{}}}],["attribute_extends",{"_index":560,"title":{},"body":{"classes/Field.html":{}}}],["attribute_function",{"_index":553,"title":{},"body":{"classes/Field.html":{}}}],["attribute_has_stream",{"_index":545,"title":{},"body":{"classes/Field.html":{}}}],["attribute_include_in_service_document",{"_index":556,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_bound",{"_index":547,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_composable",{"_index":549,"title":{},"body":{"classes/Field.html":{}}}],["attribute_is_flags",{"_index":559,"title":{},"body":{"classes/Field.html":{}}}],["attribute_max_length",{"_index":536,"title":{},"body":{"classes/Field.html":{}}}],["attribute_name",{"_index":530,"title":{},"body":{"classes/Field.html":{}}}],["attribute_namespace",{"_index":525,"title":{},"body":{"classes/Field.html":{}}}],["attribute_nullable",{"_index":535,"title":{},"body":{"classes/Field.html":{}}}],["attribute_open_type",{"_index":533,"title":{},"body":{"classes/Field.html":{}}}],["attribute_partner",{"_index":542,"title":{},"body":{"classes/Field.html":{}}}],["attribute_path",{"_index":551,"title":{},"body":{"classes/Field.html":{}}}],["attribute_precision",{"_index":537,"title":{},"body":{"classes/Field.html":{}}}],["attribute_property",{"_index":543,"title":{},"body":{"classes/Field.html":{}}}],["attribute_qualifier",{"_index":527,"title":{},"body":{"classes/Field.html":{}}}],["attribute_referenced_property",{"_index":544,"title":{},"body":{"classes/Field.html":{}}}],["attribute_scale",{"_index":538,"title":{},"body":{"classes/Field.html":{}}}],["attribute_srid",{"_index":540,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target",{"_index":552,"title":{},"body":{"classes/Field.html":{}}}],["attribute_target_namespace",{"_index":528,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term",{"_index":529,"title":{},"body":{"classes/Field.html":{}}}],["attribute_term_namespace",{"_index":526,"title":{},"body":{"classes/Field.html":{}}}],["attribute_type",{"_index":534,"title":{},"body":{"classes/Field.html":{}}}],["attribute_underlying_type",{"_index":558,"title":{},"body":{"classes/Field.html":{}}}],["attribute_unicode",{"_index":539,"title":{},"body":{"classes/Field.html":{}}}],["attribute_uri",{"_index":523,"title":{},"body":{"classes/Field.html":{}}}],["attribute_value",{"_index":531,"title":{},"body":{"classes/Field.html":{}}}],["attribute_version",{"_index":521,"title":{},"body":{"classes/Field.html":{}}}],["attributes",{"_index":520,"title":{},"body":{"classes/Field.html":{},"classes/ODataModel.html":{}}}],["attributes.getnameditem('version",{"_index":617,"title":{},"body":{"classes/Field.html":{}}}],["attrs",{"_index":1291,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataModel.html":{}}}],["average",{"_index":2076,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backward",{"_index":1748,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["base",{"_index":773,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["baseterm",{"_index":220,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["basetype",{"_index":238,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["batch",{"_index":64,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["batch_",{"_index":36,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batch_prefix",{"_index":12,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchbody",{"_index":826,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbody.split(odatabatch.newline",{"_index":828,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbodyline",{"_index":837,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbodylines",{"_index":802,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbodylines[index",{"_index":853,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchbodylines[index].split",{"_index":855,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchboundary",{"_index":110,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchpartendindex",{"_index":800,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchpartstartindex",{"_index":799,"title":{},"body":{"classes/ODataBatch.html":{}}}],["batchrequest",{"_index":1,"title":{"classes/BatchRequest.html":{}},"body":{"classes/BatchRequest.html":{}}}],["batchrequest(method",{"_index":129,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchrequest.batch_prefix",{"_index":118,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchrequest.boundary_prefix_suffix",{"_index":158,"title":{},"body":{"classes/BatchRequest.html":{}}}],["batchrequest.changeset_prefix",{"_index":159,"title":{},"body":{"classes/BatchRequest.html":{}}}],["between",{"_index":1989,"title":{},"body":{"interfaces/Parser.html":{}}}],["binary",{"_index":107,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/typealiases.html":{}}}],["binding",{"_index":289,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["binding.ts",{"_index":359,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:1",{"_index":361,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:3",{"_index":362,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["binding.ts:4",{"_index":363,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["body",{"_index":91,"title":{},"body":{"classes/BatchRequest.html":{}}}],["boolean",{"_index":181,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["boundary",{"_index":153,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["boundary.split('=')[1",{"_index":849,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundary_prefix_suffix",{"_index":13,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["boundarydelimiter",{"_index":811,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundarydelimiter.length",{"_index":850,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundarydelimiterbatch",{"_index":822,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundarydelimitercs",{"_index":831,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundaryend",{"_index":851,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundaryendbatch",{"_index":824,"title":{},"body":{"classes/ODataBatch.html":{}}}],["boundaryendcs",{"_index":832,"title":{},"body":{"classes/ODataBatch.html":{}}}],["break",{"_index":1205,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["browse",{"_index":2257,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2056,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":767,"title":{},"body":{"classes/ODataBaseService.html":{},"index.html":{}}}],["buildaggregate",{"_index":2078,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildaggregate(aggregate",{"_index":2090,"title":{},"body":{"miscellaneous/functions.html":{}}}],["builder",{"_index":1709,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["buildexpand",{"_index":2079,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildexpand(expands",{"_index":2092,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter",{"_index":2080,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildfilter(filters",{"_index":2094,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby",{"_index":2081,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildgroupby(groupby",{"_index":2097,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby",{"_index":2082,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildorderby(orderby",{"_index":2099,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildquery",{"_index":1707,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["buildquery(options",{"_index":1813,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["buildtransforms",{"_index":2083,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildtransforms(transforms",{"_index":2101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl",{"_index":2084,"title":{},"body":{"miscellaneous/functions.html":{}}}],["buildurl(path",{"_index":2103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["built",{"_index":2250,"title":{},"body":{"index.html":{}}}],["builtfilters",{"_index":2107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["c",{"_index":1644,"title":{},"body":{"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}}}],["c.name",{"_index":1921,"title":{},"body":{"classes/ODataSettings.html":{}}}],["c.schemas.some(s",{"_index":1922,"title":{},"body":{"classes/ODataSettings.html":{}}}],["california",{"_index":2176,"title":{},"body":{"index.html":{}}}],["call",{"_index":1001,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["case",{"_index":1720,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["catch",{"_index":603,"title":{},"body":{"classes/Field.html":{}}}],["catcherror",{"_index":1457,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["changes",{"_index":1974,"title":{},"body":{"interfaces/Parser.html":{}}}],["changeset",{"_index":152,"title":{},"body":{"classes/BatchRequest.html":{}}}],["changeset_",{"_index":39,"title":{},"body":{"classes/BatchRequest.html":{}}}],["changeset_prefix",{"_index":14,"title":{},"body":{"classes/BatchRequest.html":{}}}],["changesetboundary",{"_index":111,"title":{},"body":{"classes/BatchRequest.html":{}}}],["changesetid",{"_index":112,"title":{},"body":{"classes/BatchRequest.html":{}}}],["check",{"_index":611,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["checkversion(document",{"_index":610,"title":{},"body":{"classes/Field.html":{}}}],["children",{"_index":626,"title":{},"body":{"classes/Field.html":{}}}],["choose",{"_index":2244,"title":{},"body":{"index.html":{}}}],["chunks",{"_index":1735,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["chunks.join(path_separator",{"_index":1737,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["city",{"_index":2170,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"overview.html":{}}}],["clear",{"_index":1777,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["client",{"_index":53,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{}}}],["clone",{"_index":635,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["close",{"_index":155,"title":{},"body":{"classes/BatchRequest.html":{}}}],["collection",{"_index":1103,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["collection(models",{"_index":1647,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["collectionaction",{"_index":1404,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["collectionaction(name",{"_index":1421,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["collectionforname",{"_index":1034,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["collectionforname(name",{"_index":1064,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["collectionfortype",{"_index":1035,"title":{},"body":{"classes/ODataConfig.html":{}}}],["collectionfortype(type",{"_index":1066,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["collectionfunction",{"_index":1405,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["collectionfunction(name",{"_index":1423,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["complexes",{"_index":1582,"title":{},"body":{"classes/ODataModel.html":{}}}],["complextype",{"_index":494,"title":{},"body":{"classes/Field.html":{}}}],["complextypes",{"_index":406,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["compliant",{"_index":2254,"title":{},"body":{"index.html":{}}}],["component",{"_index":2138,"title":{},"body":{"index.html":{}}}],["concurrency",{"_index":2208,"title":{},"body":{"index.html":{}}}],["config",{"_index":753,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"index.html":{}}}],["config(name",{"_index":1896,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.acceptmetadata",{"_index":1126,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.annotations",{"_index":1192,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.base",{"_index":1353,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["config.collection",{"_index":1151,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.collectionforname(name)).filter(e",{"_index":1934,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.configure",{"_index":1917,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.configure(settings",{"_index":1182,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.containers",{"_index":1174,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.creation",{"_index":1130,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.entities",{"_index":1171,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.entityconfigforname(name)).filter(e",{"_index":1931,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.enumconfigforname(name)).filter(e",{"_index":1926,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.enums",{"_index":1168,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.expand",{"_index":1380,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["config.headers",{"_index":1119,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.members",{"_index":1184,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.model",{"_index":1150,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.modelforname(name)).filter(e",{"_index":1933,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.name",{"_index":1115,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.namespace",{"_index":1166,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.params",{"_index":1117,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.parser",{"_index":1161,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.schemas",{"_index":1131,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.select",{"_index":1381,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["config.select).indexof(f.name",{"_index":1382,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["config.serviceconfigforname(name)).filter(e",{"_index":1932,"title":{},"body":{"classes/ODataSettings.html":{}}}],["config.servicerooturl",{"_index":1106,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.servicerooturl}$metadata",{"_index":1121,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.services",{"_index":1209,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.stringasenum",{"_index":1128,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["config.withcredentials",{"_index":1123,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["configfortype",{"_index":1891,"title":{},"body":{"classes/ODataSettings.html":{}}}],["configfortype(type",{"_index":1898,"title":{},"body":{"classes/ODataSettings.html":{}}}],["configs",{"_index":1664,"title":{},"body":{"modules/ODataModule.html":{},"classes/ODataSettings.html":{},"miscellaneous/functions.html":{}}}],["configs.map(config",{"_index":1908,"title":{},"body":{"classes/ODataSettings.html":{}}}],["configuration",{"_index":1048,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"interfaces/Parser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["configure",{"_index":1036,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["configure(settings",{"_index":1180,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["console.log(\"airport",{"_index":2167,"title":{},"body":{"index.html":{}}}],["console.log(\"airports",{"_index":2162,"title":{},"body":{"index.html":{}}}],["console.log(\"all",{"_index":2158,"title":{},"body":{"index.html":{}}}],["console.log(\"people",{"_index":2186,"title":{},"body":{"index.html":{}}}],["const",{"_index":99,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataBatch.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["constructor(...configs",{"_index":1906,"title":{},"body":{"classes/ODataSettings.html":{}}}],["constructor(action",{"_index":364,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["constructor(annotationlist",{"_index":209,"title":{},"body":{"classes/CsdlAnnotable.html":{}}}],["constructor(client",{"_index":755,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}}}],["constructor(config",{"_index":1047,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["constructor(configs",{"_index":1893,"title":{},"body":{"classes/ODataSettings.html":{}}}],["constructor(entity",{"_index":1524,"title":{},"body":{"classes/ODataModel.html":{}}}],["constructor(httpresponse",{"_index":785,"title":{},"body":{"classes/ODataBatch.html":{}}}],["constructor(meta",{"_index":1314,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["constructor(method",{"_index":23,"title":{},"body":{"classes/BatchRequest.html":{}}}],["constructor(name",{"_index":179,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["constructor(namespace",{"_index":321,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlSchema.html":{}}}],["constructor(o",{"_index":1940,"title":{},"body":{"classes/OptionHandler.html":{}}}],["constructor(options",{"_index":1779,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["constructor(path",{"_index":360,"title":{},"body":{"classes/CsdlNavigationPropertyBinding.html":{}}}],["constructor(private",{"_index":1760,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["constructor(property",{"_index":390,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["constructor(propertyrefs",{"_index":338,"title":{},"body":{"classes/CsdlKey.html":{}}}],["constructor(protected",{"_index":675,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueAnnotations.html":{}}}],["constructor(public",{"_index":213,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["constructor(segment",{"_index":2038,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["constructor(segments",{"_index":1689,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["constructor(service",{"_index":114,"title":{},"body":{"classes/BatchRequest.html":{}}}],["constructor(target",{"_index":227,"title":{},"body":{"classes/CsdlAnnotations.html":{}}}],["constructor(term",{"_index":223,"title":{},"body":{"classes/CsdlAnnotation.html":{}}}],["constructor(termnamespace",{"_index":333,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["constructor(type",{"_index":394,"title":{},"body":{"classes/CsdlReturnType.html":{}}}],["constructor(uri",{"_index":385,"title":{},"body":{"classes/CsdlReference.html":{}}}],["constructor(value",{"_index":639,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["constructor(values",{"_index":882,"title":{},"body":{"classes/ODataCollection.html":{}}}],["constructor(xml",{"_index":565,"title":{},"body":{"classes/Field.html":{}}}],["contain",{"_index":1109,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["container",{"_index":427,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["container.services",{"_index":1179,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["container.ts",{"_index":262,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:10",{"_index":276,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:11",{"_index":274,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:12",{"_index":271,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:5",{"_index":270,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:7",{"_index":275,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:8",{"_index":273,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["container.ts:9",{"_index":272,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["containers",{"_index":1164,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["containing",{"_index":1993,"title":{},"body":{"interfaces/Parser.html":{}}}],["containstarget",{"_index":343,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["content",{"_index":788,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["content_id",{"_index":76,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["content_transfer_encoding",{"_index":75,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{}}}],["content_type",{"_index":65,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["contentid",{"_index":830,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttype",{"_index":808,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttype.split",{"_index":844,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttype.split(';')[1].trim",{"_index":847,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttypeparts",{"_index":843,"title":{},"body":{"classes/ODataBatch.html":{}}}],["contenttypeparts.length",{"_index":845,"title":{},"body":{"classes/ODataBatch.html":{}}}],["context",{"_index":638,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["corresponding",{"_index":2193,"title":{},"body":{"index.html":{}}}],["count",{"_index":734,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["countdistinct",{"_index":2077,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["countryregion",{"_index":2171,"title":{},"body":{"index.html":{}}}],["create",{"_index":1406,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["create(entity",{"_index":1425,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["create(options",{"_index":1533,"title":{},"body":{"classes/ODataModel.html":{}}}],["created",{"_index":2190,"title":{},"body":{"index.html":{}}}],["createentityservice",{"_index":1881,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["createentityservice(path",{"_index":1884,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["createmodelservice",{"_index":1882,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["createmodelservice(path",{"_index":1886,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["createodataresponse",{"_index":778,"title":{},"body":{"classes/ODataBatch.html":{}}}],["createodataresponse(batchbodylines",{"_index":798,"title":{},"body":{"classes/ODataBatch.html":{}}}],["createsettings",{"_index":1679,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["createsettings(configs",{"_index":1672,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["creating",{"_index":2115,"title":{},"body":{"index.html":{}}}],["creation",{"_index":1030,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["credits",{"_index":2249,"title":{},"body":{"index.html":{}}}],["csdl",{"_index":250,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdl/csdl",{"_index":467,"title":{},"body":{"classes/Field.html":{}}}],["csdlaction",{"_index":172,"title":{"classes/CsdlAction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlactionimport",{"_index":195,"title":{"classes/CsdlActionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlannotable",{"_index":206,"title":{"classes/CsdlAnnotable.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotable:2",{"_index":232,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{}}}],["csdlannotation",{"_index":210,"title":{"classes/CsdlAnnotation.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["csdlannotations",{"_index":214,"title":{"classes/CsdlAnnotations.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdlcomplextype",{"_index":233,"title":{"classes/CsdlComplexType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlentitycontainer",{"_index":260,"title":{"classes/CsdlEntityContainer.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlentityset",{"_index":268,"title":{"classes/CsdlEntitySet.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["csdlentitytype",{"_index":254,"title":{"classes/CsdlEntityType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlenummember",{"_index":293,"title":{"classes/CsdlEnumMember.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["csdlenumtype",{"_index":297,"title":{"classes/CsdlEnumType.html":{}},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunction",{"_index":189,"title":{"classes/CsdlFunction.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlfunctionimport",{"_index":191,"title":{"classes/CsdlFunctionImport.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlinclude",{"_index":318,"title":{"classes/CsdlInclude.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlincludeannotations",{"_index":330,"title":{"classes/CsdlIncludeAnnotations.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlkey",{"_index":255,"title":{"classes/CsdlKey.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationproperty",{"_index":242,"title":{"classes/CsdlNavigationProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlnavigationpropertybinding",{"_index":282,"title":{"classes/CsdlNavigationPropertyBinding.html":{}},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlondelete",{"_index":348,"title":{"classes/CsdlOnDelete.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlparameter",{"_index":182,"title":{"classes/CsdlParameter.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlproperty",{"_index":241,"title":{"classes/CsdlProperty.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlpropertyref",{"_index":258,"title":{"classes/CsdlPropertyRef.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["csdlreference",{"_index":326,"title":{"classes/CsdlReference.html":{}},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["csdlreferentialconstraint",{"_index":347,"title":{"classes/CsdlReferentialConstraint.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["csdlreturntype",{"_index":180,"title":{"classes/CsdlReturnType.html":{}},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["csdlschema",{"_index":402,"title":{"classes/CsdlSchema.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["csdlsingleton",{"_index":269,"title":{"classes/CsdlSingleton.html":{}},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{}}}],["csdlstructuralproperty",{"_index":342,"title":{"classes/CsdlStructuralProperty.html":{}},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["csdlstructuralproperty:3",{"_index":354,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:4",{"_index":356,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuralproperty:5",{"_index":355,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{}}}],["csdlstructuredtype",{"_index":236,"title":{"classes/CsdlStructuredType.html":{}},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["csdlstructuredtype:10",{"_index":244,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:5",{"_index":246,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:6",{"_index":249,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:7",{"_index":247,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:8",{"_index":245,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlstructuredtype:9",{"_index":248,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{}}}],["csdlterm",{"_index":219,"title":{"classes/CsdlTerm.html":{}},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["csdltypedefinition",{"_index":413,"title":{"classes/CsdlTypeDefinition.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["ctor",{"_index":768,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["ctor(this.models",{"_index":971,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ctor(this.toentity",{"_index":1601,"title":{},"body":{"classes/ODataModel.html":{}}}],["ctor.entity",{"_index":771,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["custom",{"_index":1799,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["customizations",{"_index":2248,"title":{},"body":{"index.html":{}}}],["data",{"_index":648,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["dataservices",{"_index":586,"title":{},"body":{"classes/Field.html":{}}}],["date",{"_index":1054,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["date(v",{"_index":1306,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["date(value",{"_index":1307,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["decodeuricomponent(this.value[odata_deltalink",{"_index":739,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_editlink",{"_index":724,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_media_editlink",{"_index":728,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_media_etag",{"_index":718,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_media_readlink",{"_index":726,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_nextlink",{"_index":737,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["decodeuricomponent(this.value[odata_readlink",{"_index":722,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["deep",{"_index":2247,"title":{},"body":{"index.html":{}}}],["default",{"_index":34,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["defaultvalue",{"_index":221,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["definition",{"_index":426,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["definition.ts",{"_index":452,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:10",{"_index":461,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:11",{"_index":459,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:3",{"_index":454,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:5",{"_index":456,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:6",{"_index":460,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:7",{"_index":455,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:8",{"_index":457,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definition.ts:9",{"_index":458,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["definitions",{"_index":2192,"title":{},"body":{"index.html":{}}}],["delete",{"_index":88,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["delete(options",{"_index":1472,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["deleting",{"_index":2117,"title":{},"body":{"index.html":{}}}],["delta",{"_index":1972,"title":{},"body":{"interfaces/Parser.html":{}}}],["deltalink",{"_index":738,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["dependencies",{"_index":2049,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deps",{"_index":1680,"title":{},"body":{"modules/ODataModule.html":{}}}],["describe",{"_index":1987,"title":{},"body":{"interfaces/Parser.html":{}}}],["description",{"_index":1298,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["deserialize",{"_index":1319,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["destroy",{"_index":1407,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["destroy(entity",{"_index":1427,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["destroy(options",{"_index":1535,"title":{},"body":{"classes/ODataModel.html":{}}}],["determined",{"_index":1996,"title":{},"body":{"interfaces/Parser.html":{}}}],["document",{"_index":569,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["document.documentelement.attributes",{"_index":577,"title":{},"body":{"classes/Field.html":{}}}],["document.documentelement.getelementsbytagname(odatametadata.tag_data_services)[0",{"_index":588,"title":{},"body":{"classes/Field.html":{}}}],["domparser",{"_index":568,"title":{},"body":{"classes/Field.html":{}}}],["done",{"_index":975,"title":{},"body":{"classes/ODataCollection.html":{}}}],["down",{"_index":1846,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["dynamic",{"_index":2057,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1927,"title":{},"body":{"classes/ODataSettings.html":{}}}],["e.name",{"_index":1156,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["e.type",{"_index":1143,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["edit",{"_index":1980,"title":{},"body":{"interfaces/Parser.html":{}}}],["edit/update",{"_index":1982,"title":{},"body":{"interfaces/Parser.html":{}}}],["editlink",{"_index":723,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["edmx:dataservices",{"_index":477,"title":{},"body":{"classes/Field.html":{}}}],["edmx:edmx",{"_index":475,"title":{},"body":{"classes/Field.html":{}}}],["edmx:include",{"_index":481,"title":{},"body":{"classes/Field.html":{}}}],["edmx:includeannotations",{"_index":483,"title":{},"body":{"classes/Field.html":{}}}],["edmx:reference",{"_index":479,"title":{},"body":{"classes/Field.html":{}}}],["element",{"_index":587,"title":{},"body":{"classes/Field.html":{}}}],["emails",{"_index":2206,"title":{},"body":{"index.html":{}}}],["empty",{"_index":920,"title":{},"body":{"classes/ODataCollection.html":{}}}],["encoding",{"_index":2016,"title":{},"body":{"interfaces/Parser.html":{}}}],["endregion",{"_index":1152,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["entities",{"_index":754,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["entity",{"_index":261,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["entity(key",{"_index":762,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["entity[value.field.name",{"_index":1617,"title":{},"body":{"classes/ODataModel.html":{}}}],["entityattributes",{"_index":2025,"title":{},"body":{"interfaces/Parser.html":{}}}],["entityconfig",{"_index":1098,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["entityconfig;2",{"_index":2215,"title":{},"body":{"index.html":{}}}],["entityconfigforname",{"_index":1037,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["entityconfigforname(name",{"_index":1069,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["entityconfigfortype",{"_index":1038,"title":{},"body":{"classes/ODataConfig.html":{}}}],["entityconfigfortype(type",{"_index":1073,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["entitycontainer",{"_index":407,"title":{},"body":{"classes/CsdlSchema.html":{},"classes/Field.html":{}}}],["entitykey",{"_index":763,"title":{},"body":{"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["entityset",{"_index":193,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["entitysetpath",{"_index":176,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["entitysets",{"_index":264,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["entitytype",{"_index":280,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["entitytypes",{"_index":408,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["entries",{"_index":1573,"title":{},"body":{"classes/ODataModel.html":{}}}],["enum",{"_index":85,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["enumconfig",{"_index":1099,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["enumconfigforname",{"_index":1039,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["enumconfigforname(name",{"_index":1075,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["enumconfigfortype",{"_index":1040,"title":{},"body":{"classes/ODataConfig.html":{}}}],["enumconfigfortype(type",{"_index":1078,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["enumerations",{"_index":2065,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":1163,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["enums.join",{"_index":1328,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.keys(this.members",{"_index":1331,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.map(e",{"_index":1326,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.toenum(this.members",{"_index":1325,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.toenums(this.members",{"_index":1324,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.toflags(this.members",{"_index":1321,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enums.tovalue(this.members",{"_index":1322,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["enumtype",{"_index":490,"title":{},"body":{"classes/Field.html":{}}}],["enumtypes",{"_index":409,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["error",{"_index":604,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["error(\"multiple",{"_index":1913,"title":{},"body":{"classes/ODataSettings.html":{}}}],["error(\"not",{"_index":983,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["error(\"the",{"_index":1108,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["error('odata",{"_index":614,"title":{},"body":{"classes/Field.html":{}}}],["error('unable",{"_index":606,"title":{},"body":{"classes/Field.html":{}}}],["error(`can't",{"_index":947,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["error.status",{"_index":1476,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["errorhandler",{"_index":2034,"title":{},"body":{"interfaces/Parser.html":{}}}],["escapeillegalchars",{"_index":2086,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escapeillegalchars(string",{"_index":2104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etag",{"_index":715,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["examples",{"_index":2123,"title":{},"body":{"index.html":{}}}],["execute(options",{"_index":130,"title":{},"body":{"classes/BatchRequest.html":{}}}],["expand",{"_index":925,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["expand(expand",{"_index":1021,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["expandoptions",{"_index":2262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["expands",{"_index":2093,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":84,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["extend",{"_index":265,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["extends",{"_index":105,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueAnnotations.html":{},"index.html":{}}}],["extra",{"_index":1112,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["f",{"_index":1357,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{}}}],["f.collection",{"_index":1587,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.configure(settings",{"_index":1378,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.iscomplextype",{"_index":1578,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.isnavigation",{"_index":1577,"title":{},"body":{"classes/ODataModel.html":{}}}],["f.key",{"_index":1392,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.name",{"_index":1365,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{}}}],["f.navigation",{"_index":1379,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.nullable).map(f",{"_index":1387,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.parse(obj[f.name",{"_index":1366,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.resolve(attrs",{"_index":1394,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.tojson(obj[f.name",{"_index":1373,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f.tojsonschema(config[f.name",{"_index":1384,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["f]{12}$/.test(key",{"_index":1731,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{4",{"_index":1730,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["f]{8",{"_index":1729,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["fa",{"_index":1728,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["factory",{"_index":636,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"index.html":{}}}],["factory(data",{"_index":646,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["factory(service",{"_index":123,"title":{},"body":{"classes/BatchRequest.html":{}}}],["false",{"_index":1124,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["fetch",{"_index":873,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["fetch(options",{"_index":898,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["fetchall",{"_index":1408,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchall(options",{"_index":1429,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchcollection",{"_index":1409,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchcollection(options",{"_index":1431,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchone",{"_index":1410,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchone(key",{"_index":1433,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchorcreate",{"_index":1411,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["fetchorcreate(entity",{"_index":1435,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["field",{"_index":462,"title":{"classes/Field.html":{}},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["field(odatametadata.attribute_alias",{"_index":593,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_namespace",{"_index":592,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_uri",{"_index":581,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.attribute_version",{"_index":575,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_action",{"_index":598,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotation",{"_index":585,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_annotations",{"_index":602,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_complex_type",{"_index":595,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_container",{"_index":599,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_entity_type",{"_index":596,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_enum_type",{"_index":594,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_function",{"_index":597,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include",{"_index":582,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_include_annotations",{"_index":584,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_term",{"_index":601,"title":{},"body":{"classes/Field.html":{}}}],["field(odatametadata.tag_type_definition",{"_index":600,"title":{},"body":{"classes/Field.html":{}}}],["field.collection",{"_index":1631,"title":{},"body":{"classes/ODataModel.html":{}}}],["field.name",{"_index":1567,"title":{},"body":{"classes/ODataModel.html":{}}}],["field.navigation",{"_index":1203,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["field.type",{"_index":1389,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{}}}],["fieldnames",{"_index":624,"title":{},"body":{"classes/Field.html":{}}}],["fields",{"_index":1200,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["fields(opts",{"_index":1196,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["fields.find(f",{"_index":1576,"title":{},"body":{"classes/ODataModel.html":{}}}],["fieldtype",{"_index":464,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["fieldtype.attribute",{"_index":576,"title":{},"body":{"classes/Field.html":{}}}],["fieldtype.tag",{"_index":583,"title":{},"body":{"classes/Field.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["filter",{"_index":924,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["filter(([key",{"_index":1595,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter((k",{"_index":1830,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["filter((value",{"_index":1612,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter(f",{"_index":1364,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["filter(field",{"_index":1564,"title":{},"body":{"classes/ODataModel.html":{}}}],["filter(filter",{"_index":1014,"title":{},"body":{"classes/ODataCollection.html":{}}}],["filter(k",{"_index":690,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["filter(key",{"_index":1810,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["filters",{"_index":2096,"title":{},"body":{"miscellaneous/functions.html":{}}}],["find",{"_index":1138,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["find(e",{"_index":1155,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["find(name",{"_index":1693,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["findconfigfortypes",{"_index":1892,"title":{},"body":{"classes/ODataSettings.html":{}}}],["findconfigfortypes(types",{"_index":1902,"title":{},"body":{"classes/ODataSettings.html":{}}}],["first",{"_index":1562,"title":{},"body":{"classes/ODataModel.html":{}}}],["firstname",{"_index":2204,"title":{},"body":{"index.html":{}}}],["flags",{"_index":1313,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["fluent",{"_index":2112,"title":{},"body":{"index.html":{}}}],["following",{"_index":2003,"title":{},"body":{"interfaces/Parser.html":{},"index.html":{}}}],["foreach(config",{"_index":1181,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["foreach(field",{"_index":1565,"title":{},"body":{"classes/ODataModel.html":{}}}],["foreach(schmea",{"_index":1134,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["forkjoin",{"_index":1555,"title":{},"body":{"classes/ODataModel.html":{}}}],["forkjoin(rels).pipe",{"_index":1621,"title":{},"body":{"classes/ODataModel.html":{}}}],["format",{"_index":1798,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["forroot",{"_index":1661,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(...configs",{"_index":1675,"title":{},"body":{"modules/ODataModule.html":{}}}],["forroot(configs",{"_index":1662,"title":{},"body":{"modules/ODataModule.html":{}}}],["found",{"_index":1929,"title":{},"body":{"classes/ODataSettings.html":{}}}],["friends",{"_index":2181,"title":{},"body":{"index.html":{}}}],["fromodataresponse",{"_index":779,"title":{},"body":{"classes/ODataBatch.html":{}}}],["fromodataresponse(odataresponse",{"_index":803,"title":{},"body":{"classes/ODataBatch.html":{}}}],["full",{"_index":1051,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["func",{"_index":1723,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["function",{"_index":174,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueAnnotations.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["function(key",{"_index":1437,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["function(name",{"_index":649,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{}}}],["function(undefined",{"_index":2108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["functionimport",{"_index":514,"title":{},"body":{"classes/Field.html":{}}}],["functionimports",{"_index":266,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["functionname",{"_index":192,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{}}}],["functions",{"_index":410,"title":{"miscellaneous/functions.html":{}},"body":{"classes/CsdlSchema.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"miscellaneous/functions.html":{}}}],["gender",{"_index":2207,"title":{},"body":{"index.html":{}}}],["generate",{"_index":2252,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2245,"title":{},"body":{"index.html":{}}}],["generator",{"_index":2119,"title":{},"body":{"index.html":{}}}],["get(name",{"_index":1861,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["get(options",{"_index":1465,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["get_query",{"_index":918,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["get_segments",{"_index":916,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["getbody",{"_index":147,"title":{},"body":{"classes/BatchRequest.html":{}}}],["getboundarydelimiter",{"_index":780,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getboundarydelimiter(contenttype",{"_index":806,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getboundaryend",{"_index":781,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getboundaryend(boundarydelimiter",{"_index":809,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getcontext",{"_index":653,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["getcount",{"_index":1228,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getdeltalink",{"_index":1232,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["geteditlink",{"_index":1253,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getetag",{"_index":1246,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getfunctions",{"_index":655,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["getheaders",{"_index":21,"title":{},"body":{"classes/BatchRequest.html":{}}}],["getheaders(method",{"_index":43,"title":{},"body":{"classes/BatchRequest.html":{}}}],["getheadervalue",{"_index":782,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getheadervalue(header",{"_index":812,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getid",{"_index":1244,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediacontenttype",{"_index":1259,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediaeditlink",{"_index":1257,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediaetag",{"_index":1248,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmediareadlink",{"_index":1255,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmetadataetag",{"_index":1250,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["getmodels",{"_index":912,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getname",{"_index":1955,"title":{},"body":{"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["getnavigationproperty",{"_index":1521,"title":{},"body":{"classes/ODataModel.html":{}}}],["getnavigationproperty(field",{"_index":1538,"title":{},"body":{"classes/ODataModel.html":{}}}],["getnextlink",{"_index":1230,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getobjects(parentelement",{"_index":623,"title":{},"body":{"classes/Field.html":{}}}],["getodataresponses",{"_index":783,"title":{},"body":{"classes/ODataBatch.html":{}}}],["getpath",{"_index":2046,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["getproperties",{"_index":657,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["getreadlink",{"_index":1226,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{}}}],["getrequests",{"_index":166,"title":{},"body":{"classes/BatchRequest.html":{}}}],["getservices",{"_index":1874,"title":{},"body":{"classes/ODataSchema.html":{}}}],["getskip",{"_index":1236,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getskiptoken",{"_index":1238,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["getstate",{"_index":914,"title":{},"body":{"classes/ODataCollection.html":{}}}],["getting",{"_index":2109,"title":{"index.html":{}},"body":{}}],["gettop",{"_index":1234,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["gettype",{"_index":1242,"title":{},"body":{"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"classes/SegmentHandler.html":{}}}],["groupby",{"_index":2098,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["guid",{"_index":1708,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["guid(key",{"_index":1732,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["handler",{"_index":1769,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["handlevalue",{"_index":2087,"title":{},"body":{"miscellaneous/functions.html":{}}}],["handlevalue(value",{"_index":2105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["has(name",{"_index":1695,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["hash",{"_index":1851,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["hasstream",{"_index":256,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["head",{"_index":89,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["header",{"_index":814,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["header.split(';')[0].trim",{"_index":841,"title":{},"body":{"classes/ODataBatch.html":{}}}],["headers",{"_index":131,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["heuristically",{"_index":1995,"title":{},"body":{"interfaces/Parser.html":{}}}],["htmlcollection",{"_index":627,"title":{},"body":{"classes/Field.html":{}}}],["http",{"_index":81,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{}}}],["http/1.1",{"_index":791,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["http11",{"_index":70,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["httpclientmodule",{"_index":1666,"title":{},"body":{"modules/ODataModule.html":{}}}],["httpentitiesoptions",{"_index":930,"title":{},"body":{"classes/ODataCollection.html":{},"miscellaneous/typealiases.html":{}}}],["httpentityoptions",{"_index":1559,"title":{},"body":{"classes/ODataModel.html":{},"miscellaneous/typealiases.html":{}}}],["httperrorresponse",{"_index":1101,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["httpheaders",{"_index":82,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["httpheaders).getall(key",{"_index":103,"title":{},"body":{"classes/BatchRequest.html":{}}}],["httpheaders).keys",{"_index":102,"title":{},"body":{"classes/BatchRequest.html":{}}}],["httpoptions",{"_index":80,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"miscellaneous/typealiases.html":{}}}],["httpresponse",{"_index":776,"title":{},"body":{"classes/ODataBatch.html":{}}}],["https://services.odata.org/v4/(s(4m0tuxtnhcfctl4gzem3gr10))/trippinservicerw",{"_index":2133,"title":{},"body":{"index.html":{}}}],["httpvalueoptions",{"_index":1558,"title":{},"body":{"classes/ODataModel.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":713,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["if_match_header",{"_index":2009,"title":{},"body":{"interfaces/Parser.html":{}}}],["implements",{"_index":865,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["import",{"_index":46,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["imports",{"_index":1674,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["include_navigation",{"_index":1198,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["include_parents",{"_index":1197,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["includeannotations",{"_index":329,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["includeinservicedocument",{"_index":194,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["includes",{"_index":328,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["inherited",{"_index":231,"title":{},"body":{"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"classes/ODataValueAnnotations.html":{}}}],["inject",{"_index":2137,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":1399,"title":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["injectables",{"_index":1401,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1960,"title":{},"body":{"interfaces/Parser.html":{}}}],["injectiontoken('odata.configuraions",{"_index":2035,"title":{},"body":{"interfaces/Parser.html":{}}}],["install",{"_index":2120,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":940,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{}}}],["interface",{"_index":1311,"title":{"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["interfaces",{"_index":1681,"title":{},"body":{"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"overview.html":{}}}],["isbound",{"_index":177,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["iscomplex",{"_index":1272,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["iscomplextype",{"_index":1350,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["iscomposable",{"_index":190,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{}}}],["isentitytype",{"_index":1349,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["isenumtype",{"_index":1348,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["isflags",{"_index":300,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["isnavigation",{"_index":1346,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["isostringtodate",{"_index":1712,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["isostringtodate(json.parse(json.stringify(segment.options",{"_index":1744,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["isostringtodate(json.parse(json.stringify(this.options",{"_index":1820,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["items",{"_index":1344,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["iterable",{"_index":866,"title":{},"body":{"classes/ODataCollection.html":{}}}],["iteratorresult",{"_index":974,"title":{},"body":{"classes/ODataCollection.html":{}}}],["javascript",{"_index":2256,"title":{},"body":{"index.html":{}}}],["join",{"_index":1819,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["json",{"_index":1329,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["json.options",{"_index":1746,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["json.stringify(body",{"_index":164,"title":{},"body":{"classes/BatchRequest.html":{}}}],["jsonschemaconfig",{"_index":1295,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpand",{"_index":2032,"title":{},"body":{"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaexpandoptions",{"_index":1302,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaorder",{"_index":2031,"title":{},"body":{"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["jsonschemaselect",{"_index":2030,"title":{},"body":{"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["k",{"_index":1579,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["k.indexof(odata_annotation_prefix",{"_index":697,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["k.startswith(odata_function_prefix",{"_index":691,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["keep",{"_index":1778,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["keep(...names",{"_index":1828,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["keep(names",{"_index":1786,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["key",{"_index":100,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["key.indexof(odata_annotation_prefix",{"_index":699,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["key.startswith(\"_",{"_index":1596,"title":{},"body":{"classes/ODataModel.html":{}}}],["key.startswith(odata_function_prefix",{"_index":2023,"title":{},"body":{"interfaces/Parser.html":{}}}],["key.substr(0",{"_index":698,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["key.substr(1",{"_index":694,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["key.substr(key.indexof(odata_annotation_prefix",{"_index":703,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["keyof",{"_index":1961,"title":{},"body":{"interfaces/Parser.html":{}}}],["keys",{"_index":1273,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["key}=${value",{"_index":1818,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["last",{"_index":1686,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["lastname",{"_index":2205,"title":{},"body":{"index.html":{}}}],["library",{"_index":2124,"title":{},"body":{"index.html":{}}}],["link",{"_index":1970,"title":{},"body":{"interfaces/Parser.html":{}}}],["literal",{"_index":640,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["location",{"_index":2196,"title":{},"body":{"index.html":{}}}],["location.entity",{"_index":2197,"title":{},"body":{"index.html":{}}}],["locationconfig",{"_index":2218,"title":{},"body":{"index.html":{}}}],["m",{"_index":886,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}}}],["map",{"_index":62,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["map(([entities",{"_index":985,"title":{},"body":{"classes/ODataCollection.html":{}}}],["map(([entity",{"_index":1604,"title":{},"body":{"classes/ODataModel.html":{}}}],["map(([key",{"_index":1575,"title":{},"body":{"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["map(([name",{"_index":1356,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["map((value",{"_index":1615,"title":{},"body":{"classes/ODataModel.html":{}}}],["map(({name",{"_index":1734,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map(config",{"_index":1169,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["map(container",{"_index":1175,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["map(entities",{"_index":991,"title":{},"body":{"classes/ODataCollection.html":{}}}],["map(f",{"_index":1383,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["map(pathsegmentsbuilder",{"_index":1736,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["map(schema",{"_index":1132,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["match",{"_index":741,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["match(/\\$skip=(\\d",{"_index":746,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["match(/\\$skiptoken=([\\d\\w\\s",{"_index":748,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["match(/\\$top=(\\d",{"_index":743,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["match[1",{"_index":749,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["matching",{"_index":170,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["math.ceil(this._state.records",{"_index":965,"title":{},"body":{"classes/ODataCollection.html":{}}}],["max",{"_index":2075,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["maxlength",{"_index":198,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["media",{"_index":2000,"title":{},"body":{"interfaces/Parser.html":{},"index.html":{}}}],["media.blob().subscribe(console.log",{"_index":2243,"title":{},"body":{"index.html":{}}}],["mediacontenttype",{"_index":729,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["mediaeditlink",{"_index":727,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["mediaetag",{"_index":717,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["mediareadlink",{"_index":725,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["member",{"_index":492,"title":{},"body":{"classes/Field.html":{}}}],["members",{"_index":298,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["meta",{"_index":1488,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["meta.flags",{"_index":1317,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["meta.members",{"_index":1318,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["meta.name",{"_index":1315,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["metadata",{"_index":608,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["metadataetag",{"_index":719,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["metadataurl",{"_index":1031,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["method",{"_index":16,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["methods",{"_index":20,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["microsoft.odata.sampleservice.models.trippin",{"_index":2226,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.location",{"_index":2210,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.people",{"_index":2228,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.person",{"_index":2212,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.persongender",{"_index":2211,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.photo",{"_index":2214,"title":{},"body":{"index.html":{}}}],["microsoft.odata.sampleservice.models.trippin.trip",{"_index":2213,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/location.entity.config",{"_index":2219,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/person.entity.config",{"_index":2222,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/persongender.enum.config",{"_index":2217,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/photo.entity.config",{"_index":2221,"title":{},"body":{"index.html":{}}}],["microsoft/odata/sampleservice/models/trippin/trip.entity.config",{"_index":2224,"title":{},"body":{"index.html":{}}}],["min",{"_index":2074,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":1050,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["miscellaneous",{"_index":2064,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["mo",{"_index":1532,"title":{},"body":{"classes/ODataModel.html":{}}}],["mode",{"_index":2129,"title":{},"body":{"index.html":{}}}],["model",{"_index":892,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"interfaces/Parser.html":{}}}],["model(entity",{"_index":1649,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["model.destroy",{"_index":998,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.save",{"_index":993,"title":{},"body":{"classes/ODataCollection.html":{}}}],["model.target().type",{"_index":1638,"title":{},"body":{"classes/ODataModel.html":{}}}],["model.toentity",{"_index":970,"title":{},"body":{"classes/ODataCollection.html":{}}}],["modelforname",{"_index":1041,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["modelforname(name",{"_index":1080,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["modelfortype",{"_index":1042,"title":{},"body":{"classes/ODataConfig.html":{}}}],["modelfortype(type",{"_index":1082,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["models",{"_index":878,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}}}],["models.length",{"_index":976,"title":{},"body":{"classes/ODataCollection.html":{}}}],["models/settings",{"_index":1669,"title":{},"body":{"modules/ODataModule.html":{}}}],["models[pointer",{"_index":977,"title":{},"body":{"classes/ODataCollection.html":{}}}],["module",{"_index":1655,"title":{"modules/ODataModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":1657,"title":{"modules.html":{}},"body":{"modules/ODataModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":1665,"title":{},"body":{"modules/ODataModule.html":{}}}],["more",{"_index":1928,"title":{},"body":{"classes/ODataSettings.html":{}}}],["multipart/mixed",{"_index":794,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["multipart/mixed;boundary",{"_index":2014,"title":{},"body":{"interfaces/Parser.html":{}}}],["multipart_mixed",{"_index":71,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["multipart_mixed_boundary",{"_index":72,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{}}}],["mutate",{"_index":992,"title":{},"body":{"classes/ODataCollection.html":{}}}],["n",{"_index":1834,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["namednodemap",{"_index":612,"title":{},"body":{"classes/Field.html":{}}}],["names",{"_index":1788,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{}}}],["names.foreach(name",{"_index":1826,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["names.indexof(k",{"_index":1831,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["namespace",{"_index":320,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["namespace}.${this.name",{"_index":1186,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["nav",{"_index":1629,"title":{},"body":{"classes/ODataModel.html":{}}}],["nav.tocollection(object.assign(base",{"_index":1633,"title":{},"body":{"classes/ODataModel.html":{}}}],["nav.tomodel(object.assign(base",{"_index":1634,"title":{},"body":{"classes/ODataModel.html":{}}}],["navigation",{"_index":288,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlSingleton.html":{},"classes/Field.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["navigationproperties",{"_index":239,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["navigationproperty",{"_index":501,"title":{},"body":{"classes/Field.html":{},"injectables/ODataEntityService.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["navigationproperty(key",{"_index":1439,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["navigationproperty(name",{"_index":1626,"title":{},"body":{"classes/ODataModel.html":{}}}],["navigationpropertybinding",{"_index":281,"title":{},"body":{"classes/CsdlEntitySet.html":{},"classes/Field.html":{}}}],["navigationpropertybindings",{"_index":429,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["needs",{"_index":1915,"title":{},"body":{"classes/ODataSettings.html":{}}}],["nestedexpandoptions",{"_index":2264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["new",{"_index":124,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["new(...any",{"_index":1190,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["newline",{"_index":67,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["next",{"_index":874,"title":{},"body":{"classes/ODataCollection.html":{},"interfaces/Parser.html":{}}}],["next(options",{"_index":900,"title":{},"body":{"classes/ODataCollection.html":{}}}],["nextlink",{"_index":736,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["ngmodule",{"_index":1667,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["none",{"_index":1052,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["npm",{"_index":2121,"title":{},"body":{"index.html":{}}}],["null",{"_index":120,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataValueAnnotations.html":{}}}],["nullable",{"_index":197,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["number",{"_index":113,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["number(match[1",{"_index":744,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["number(v",{"_index":1309,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["number(value",{"_index":1310,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["o",{"_index":1833,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["obj",{"_index":1362,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object",{"_index":1341,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["object.assign",{"_index":937,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["object.assign(acc",{"_index":693,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["object.assign(acc[name",{"_index":702,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["object.assign(attrs",{"_index":1581,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.assign(obj",{"_index":1363,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["object.assign(params",{"_index":1816,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.assign(this",{"_index":1333,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{}}}],["object.assign(this.assertobject",{"_index":1868,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.assign({responsetype",{"_index":982,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["object.defineproperty(this",{"_index":1566,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries",{"_index":1593,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(config.fields",{"_index":1355,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["object.entries(entity",{"_index":1574,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this",{"_index":1594,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this._relations).reduce((acc",{"_index":1597,"title":{},"body":{"classes/ODataModel.html":{}}}],["object.entries(this.params",{"_index":1817,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(key).length",{"_index":1395,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["object.keys(this.options",{"_index":1829,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["object.keys(this.value",{"_index":689,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["object.keys(value",{"_index":2022,"title":{},"body":{"interfaces/Parser.html":{}}}],["object.values(key)[0",{"_index":1396,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["object.values(this._relations",{"_index":1611,"title":{},"body":{"classes/ODataModel.html":{}}}],["objects",{"_index":625,"title":{},"body":{"classes/Field.html":{}}}],["objs",{"_index":1288,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["objs.map(obj",{"_index":1368,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["obs",{"_index":979,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["obs$.pipe",{"_index":984,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["obs$.pipe(map",{"_index":997,"title":{},"body":{"classes/ODataCollection.html":{}}}],["observable",{"_index":50,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["observe",{"_index":135,"title":{},"body":{"classes/BatchRequest.html":{}}}],["obtained",{"_index":2130,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1973,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata",{"_index":1711,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["odata.associationlink",{"_index":1986,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.context",{"_index":1963,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.count",{"_index":1966,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.deltalink",{"_index":1971,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.editlink",{"_index":1981,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.etag",{"_index":1976,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.id",{"_index":1975,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.mediacontenttype",{"_index":2008,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.mediaeditlink",{"_index":2005,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.mediaetag",{"_index":2006,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.mediareadlink",{"_index":2004,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.metadataetag",{"_index":1985,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.navigationlink",{"_index":1997,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.nextlink",{"_index":1969,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.readlink",{"_index":1977,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata.type",{"_index":1992,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/models/collection.ts",{"_index":864,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:105",{"_index":910,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:109",{"_index":896,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:115",{"_index":911,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:129",{"_index":899,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:146",{"_index":901,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:158",{"_index":893,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:172",{"_index":891,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:185",{"_index":908,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:199",{"_index":897,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:203",{"_index":917,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:216",{"_index":919,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:27",{"_index":888,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:28",{"_index":885,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:30",{"_index":887,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:31",{"_index":913,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:35",{"_index":889,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:44",{"_index":915,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:46",{"_index":883,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:54",{"_index":895,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:61",{"_index":909,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:65",{"_index":903,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/collection.ts:76",{"_index":906,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odata/src/lib/models/config.ts",{"_index":1028,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odata/src/lib/models/config.ts:10",{"_index":1058,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:100",{"_index":1090,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:106",{"_index":1081,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:11",{"_index":1061,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:112",{"_index":1065,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:12",{"_index":1059,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:120",{"_index":1085,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:128",{"_index":1872,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:129",{"_index":1871,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:13",{"_index":1056,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:130",{"_index":1870,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:131",{"_index":1869,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:14",{"_index":1057,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:140",{"_index":1875,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:144",{"_index":1873,"title":{},"body":{"classes/ODataSchema.html":{}}}],["odata/src/lib/models/config.ts:15",{"_index":1063,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:153",{"_index":1483,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:154",{"_index":1485,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:155",{"_index":1484,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:156",{"_index":1482,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:16",{"_index":1053,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:164",{"_index":1486,"title":{},"body":{"classes/ODataEnumConfig.html":{}}}],["odata/src/lib/models/config.ts:17",{"_index":1062,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:170",{"_index":1265,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:171",{"_index":1266,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:172",{"_index":1262,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:173",{"_index":1264,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:174",{"_index":1263,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:175",{"_index":1261,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:18",{"_index":1055,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:186",{"_index":1267,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:19",{"_index":1049,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:190",{"_index":1268,"title":{},"body":{"classes/ODataEntityConfig.html":{}}}],["odata/src/lib/models/config.ts:210",{"_index":1213,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:211",{"_index":1214,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:212",{"_index":1212,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:213",{"_index":1211,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:221",{"_index":1215,"title":{},"body":{"classes/ODataContainer.html":{}}}],["odata/src/lib/models/config.ts:228",{"_index":1877,"title":{},"body":{"classes/ODataServiceConfig.html":{}}}],["odata/src/lib/models/config.ts:229",{"_index":1878,"title":{},"body":{"classes/ODataServiceConfig.html":{}}}],["odata/src/lib/models/config.ts:230",{"_index":1876,"title":{},"body":{"classes/ODataServiceConfig.html":{}}}],["odata/src/lib/models/config.ts:237",{"_index":1879,"title":{},"body":{"classes/ODataServiceConfig.html":{}}}],["odata/src/lib/models/config.ts:39",{"_index":1068,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:49",{"_index":1088,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:55",{"_index":1079,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:61",{"_index":1074,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:67",{"_index":1093,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:75",{"_index":1083,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:81",{"_index":1067,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:90",{"_index":1076,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/config.ts:95",{"_index":1070,"title":{},"body":{"classes/ODataConfig.html":{}}}],["odata/src/lib/models/model.ts",{"_index":1518,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:106",{"_index":1550,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:123",{"_index":1531,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:128",{"_index":1537,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:151",{"_index":1534,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:159",{"_index":1552,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:183",{"_index":1545,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:191",{"_index":1536,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:202",{"_index":1553,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:221",{"_index":1554,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:240",{"_index":1539,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:253",{"_index":1548,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:27",{"_index":1529,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:28",{"_index":1527,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:29",{"_index":1526,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:30",{"_index":1528,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:33",{"_index":1525,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:41",{"_index":1530,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:65",{"_index":1549,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:69",{"_index":1541,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/model.ts:98",{"_index":1543,"title":{},"body":{"classes/ODataModel.html":{}}}],["odata/src/lib/models/settings.ts",{"_index":1890,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:17",{"_index":1897,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:24",{"_index":1903,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:31",{"_index":1899,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:36",{"_index":1901,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:43",{"_index":1900,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:50",{"_index":1905,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:57",{"_index":1904,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:64",{"_index":1895,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/models/settings.ts:8",{"_index":1894,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odata/src/lib/module.ts",{"_index":1658,"title":{},"body":{"modules/ODataModule.html":{},"miscellaneous/functions.html":{}}}],["odata/src/lib/module.ts:18",{"_index":1663,"title":{},"body":{"modules/ODataModule.html":{}}}],["odata/src/lib/parsers.ts",{"_index":1270,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["odata/src/lib/parsers.ts:106",{"_index":1515,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:111",{"_index":1514,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:117",{"_index":1516,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:122",{"_index":1509,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:129",{"_index":1517,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:145",{"_index":1513,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:149",{"_index":1512,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:153",{"_index":1511,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:157",{"_index":1510,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:163",{"_index":1280,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:164",{"_index":1282,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:165",{"_index":1279,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:166",{"_index":1281,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:167",{"_index":1278,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:178",{"_index":1287,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:192",{"_index":1293,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:204",{"_index":1283,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:212",{"_index":1296,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:226",{"_index":1301,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:234",{"_index":1285,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:239",{"_index":1290,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:248",{"_index":1284,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["odata/src/lib/parsers.ts:34",{"_index":1682,"title":{},"body":{"interfaces/ODataParser.html":{}}}],["odata/src/lib/parsers.ts:35",{"_index":1683,"title":{},"body":{"interfaces/ODataParser.html":{}}}],["odata/src/lib/parsers.ts:39",{"_index":1490,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:40",{"_index":1492,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:41",{"_index":1489,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:42",{"_index":1491,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:43",{"_index":1487,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:53",{"_index":1494,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:62",{"_index":1495,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:74",{"_index":1496,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:83",{"_index":1493,"title":{},"body":{"classes/ODataEnumParser.html":{}}}],["odata/src/lib/parsers.ts:89",{"_index":1504,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:90",{"_index":1508,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:91",{"_index":1507,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:92",{"_index":1500,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:93",{"_index":1503,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:94",{"_index":1502,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:95",{"_index":1499,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:96",{"_index":1506,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:97",{"_index":1505,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:98",{"_index":1501,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/parsers.ts:99",{"_index":1498,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["odata/src/lib/resources/builder.ts",{"_index":2072,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/http",{"_index":2268,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/path",{"_index":1684,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/resources/query",{"_index":1775,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/requests/batch.ts",{"_index":7,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/requests/batch.ts:26",{"_index":38,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:27",{"_index":37,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:28",{"_index":27,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:31",{"_index":40,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:32",{"_index":41,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:33",{"_index":42,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/requests/batch.ts:35",{"_index":44,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odata/src/lib/resources/responses/annotations.ts",{"_index":631,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:104",{"_index":1240,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:108",{"_index":1243,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:114",{"_index":1245,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:119",{"_index":1247,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:124",{"_index":1249,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:129",{"_index":1251,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:134",{"_index":1252,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:139",{"_index":1254,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:144",{"_index":1256,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:149",{"_index":1258,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:154",{"_index":1260,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:159",{"_index":1241,"title":{},"body":{"classes/ODataEntityAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:165",{"_index":1220,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:169",{"_index":1227,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:174",{"_index":1229,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:179",{"_index":1231,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:184",{"_index":1233,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:189",{"_index":1235,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:194",{"_index":1237,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:199",{"_index":1239,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:204",{"_index":1221,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:21",{"_index":641,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:24",{"_index":647,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:29",{"_index":642,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:30",{"_index":654,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:45",{"_index":643,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:46",{"_index":656,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:55",{"_index":644,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:56",{"_index":658,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:73",{"_index":645,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:77",{"_index":652,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:81",{"_index":650,"title":{},"body":{"classes/ODataAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:88",{"_index":1935,"title":{},"body":{"classes/ODataValueAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:92",{"_index":1936,"title":{},"body":{"classes/ODataValueAnnotations.html":{}}}],["odata/src/lib/resources/responses/annotations.ts:96",{"_index":1937,"title":{},"body":{"classes/ODataValueAnnotations.html":{}}}],["odata/src/lib/resources/responses/batch.ts",{"_index":775,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:10",{"_index":797,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:109",{"_index":810,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:11",{"_index":795,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:117",{"_index":801,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:13",{"_index":793,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:14",{"_index":786,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:22",{"_index":815,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:26",{"_index":804,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:30",{"_index":816,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:6",{"_index":790,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:7",{"_index":789,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:8",{"_index":792,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:9",{"_index":787,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:92",{"_index":813,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/batch.ts:98",{"_index":807,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odata/src/lib/resources/responses/csdl/csdl",{"_index":173,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["odata/src/lib/resources/responses/metadata.ts",{"_index":463,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:19",{"_index":465,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/resources/responses/metadata.ts:20",{"_index":466,"title":{},"body":{"classes/Field.html":{}}}],["odata/src/lib/services/base.ts",{"_index":752,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:13",{"_index":760,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:18",{"_index":764,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:24",{"_index":759,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:6",{"_index":757,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:7",{"_index":758,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/base.ts:8",{"_index":756,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["odata/src/lib/services/entity.ts",{"_index":1402,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:21",{"_index":1414,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:24",{"_index":1440,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:28",{"_index":1443,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:32",{"_index":1416,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:36",{"_index":1422,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:40",{"_index":1438,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:44",{"_index":1424,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:49",{"_index":1432,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:54",{"_index":1430,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:59",{"_index":1434,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:64",{"_index":1426,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:69",{"_index":1448,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:74",{"_index":1420,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:79",{"_index":1428,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:85",{"_index":1436,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/entity.ts:95",{"_index":1446,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["odata/src/lib/services/factory.ts",{"_index":1880,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:12",{"_index":1885,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:19",{"_index":1887,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/factory.ts:9",{"_index":1883,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odata/src/lib/services/model.ts",{"_index":1640,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:10",{"_index":1641,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:14",{"_index":1650,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:19",{"_index":1648,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:23",{"_index":1643,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:24",{"_index":1645,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/services/model.ts:25",{"_index":1646,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["odata/src/lib/types.ts",{"_index":1957,"title":{},"body":{"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["odata/src/lib/types.ts:127",{"_index":1958,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata/src/lib/types.ts:128",{"_index":1959,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata_alias_prefix",{"_index":2021,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata_annotation_prefix",{"_index":674,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_associationlink",{"_index":1991,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata_configurations",{"_index":1671,"title":{},"body":{"modules/ODataModule.html":{},"interfaces/Parser.html":{}}}],["odata_context",{"_index":669,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_count",{"_index":660,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_deltalink",{"_index":663,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_editlink",{"_index":672,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_etag",{"_index":659,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["odata_function_prefix",{"_index":673,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_id",{"_index":670,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_media_contenttype",{"_index":668,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_media_editlink",{"_index":665,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_media_etag",{"_index":666,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_media_readlink",{"_index":667,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_metadataetag",{"_index":664,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_navigationlink",{"_index":1999,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata_nextlink",{"_index":661,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_param_prefix",{"_index":2020,"title":{},"body":{"interfaces/Parser.html":{}}}],["odata_readlink",{"_index":671,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_type",{"_index":662,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odata_version",{"_index":68,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{}}}],["odataactionresource",{"_index":923,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["odataannotations",{"_index":630,"title":{"classes/ODataAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["odataannotations(odataannotations(data",{"_index":676,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations(this.value",{"_index":704,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:24",{"_index":1223,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:29",{"_index":1217,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:45",{"_index":1218,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:55",{"_index":1219,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:73",{"_index":1222,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:77",{"_index":1225,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataannotations:81",{"_index":1224,"title":{},"body":{"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odatabaseservice",{"_index":751,"title":{"classes/ODataBaseService.html":{}},"body":{"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:13",{"_index":1450,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:18",{"_index":1451,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:24",{"_index":1449,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:6",{"_index":1453,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:7",{"_index":1454,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabaseservice:8",{"_index":1452,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odatabatch",{"_index":78,"title":{"classes/ODataBatch.html":{}},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["odatabatch(odataresponse",{"_index":820,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odatabatch(resp",{"_index":146,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odatabatch.boundary_prefix_suffix",{"_index":848,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odatabatchresource",{"_index":104,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odatabatchresource(service",{"_index":126,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odatabatchresource.binary",{"_index":160,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odataclient",{"_index":52,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatacollection",{"_index":863,"title":{"classes/ODataCollection.html":{}},"body":{"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{}}}],["odatacollection>(path",{"_index":1889,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["odataconfig",{"_index":1027,"title":{"classes/ODataConfig.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["odataconfig(config",{"_index":1909,"title":{},"body":{"classes/ODataSettings.html":{}}}],["odatacontainer",{"_index":1207,"title":{"classes/ODataContainer.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odatacontainer(container",{"_index":1176,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odatademo",{"_index":2122,"title":{},"body":{"index.html":{}}}],["odataentitiesannotations",{"_index":732,"title":{"classes/ODataEntitiesAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentitiesannotations(odataannotations(data",{"_index":750,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentitiesannotations(this.value",{"_index":733,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentityannotations",{"_index":711,"title":{"classes/ODataEntityAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentityannotations(odataannotations(data",{"_index":731,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentityannotations(this.value",{"_index":712,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataentityconfig",{"_index":1072,"title":{"classes/ODataEntityConfig.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataentityconfig(config",{"_index":1172,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataentityparser",{"_index":1094,"title":{"classes/ODataEntityParser.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataentityparser(config",{"_index":1195,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataentityresource",{"_index":765,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{}}}],["odataentityresource).property(f.name",{"_index":1585,"title":{},"body":{"classes/ODataModel.html":{}}}],["odataentityservice",{"_index":1400,"title":{"injectables/ODataEntityService.html":{}},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odataentitysetresource",{"_index":761,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["odataentitysetresource).count().get",{"_index":1000,"title":{},"body":{"classes/ODataCollection.html":{}}}],["odataenumconfig",{"_index":1077,"title":{"classes/ODataEnumConfig.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataenumconfig(config",{"_index":1170,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataenumparser",{"_index":1096,"title":{"classes/ODataEnumParser.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataenumparser(config",{"_index":1188,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odatafieldparser",{"_index":1095,"title":{"classes/ODataFieldParser.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odatafieldparser(name",{"_index":1358,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["odatafunctionresource",{"_index":922,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["odatametadata",{"_index":472,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_reference",{"_index":580,"title":{},"body":{"classes/Field.html":{}}}],["odatametadata.tag_schema",{"_index":591,"title":{},"body":{"classes/Field.html":{}}}],["odatamodel",{"_index":929,"title":{"classes/ODataModel.html":{}},"body":{"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{}}}],["odatamodelservice",{"_index":1639,"title":{"injectables/ODataModelService.html":{}},"body":{"injectables/ODataModelService.html":{},"injectables/ODataServiceFactory.html":{}}}],["odatamodule",{"_index":1656,"title":{"modules/ODataModule.html":{}},"body":{"modules/ODataModule.html":{},"index.html":{},"modules.html":{}}}],["odatamodule.forroot",{"_index":2132,"title":{},"body":{"index.html":{}}}],["odatamodule.forroot(trippinconfig",{"_index":2230,"title":{},"body":{"index.html":{}}}],["odatanavigationpropertyresource",{"_index":921,"title":{},"body":{"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["odataparser",{"_index":1086,"title":{"interfaces/ODataParser.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataparser).tojsonschema(options",{"_index":1340,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["odatapathsegments",{"_index":56,"title":{"classes/ODataPathSegments.html":{}},"body":{"classes/BatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["odatapathsegments(this.tojson",{"_index":1747,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["odatapropertyresource",{"_index":1444,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["odataquery",{"_index":17,"title":{},"body":{"classes/BatchRequest.html":{}}}],["odataqueryoptions",{"_index":60,"title":{"classes/ODataQueryOptions.html":{}},"body":{"classes/BatchRequest.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["odataqueryoptions(this.tojson",{"_index":1821,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["odataresource",{"_index":25,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["odataresponse",{"_index":805,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odataresponsecs",{"_index":829,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odataresponsecs[contentid",{"_index":835,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odataresponses",{"_index":777,"title":{},"body":{"classes/ODataBatch.html":{}}}],["odataschema",{"_index":1162,"title":{"classes/ODataSchema.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataschema(schema",{"_index":1133,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odatasegment",{"_index":1690,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["odataserviceconfig",{"_index":1091,"title":{"classes/ODataServiceConfig.html":{}},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataserviceconfig(config",{"_index":1210,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["odataservicefactory",{"_index":1660,"title":{"injectables/ODataServiceFactory.html":{}},"body":{"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"index.html":{}}}],["odatasettings",{"_index":1668,"title":{"classes/ODataSettings.html":{}},"body":{"modules/ODataModule.html":{},"classes/ODataSettings.html":{},"index.html":{}}}],["odatasettings(...configs",{"_index":1673,"title":{},"body":{"modules/ODataModule.html":{}}}],["odatavalueannotations",{"_index":707,"title":{"classes/ODataValueAnnotations.html":{}},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odatavalueannotations(odataannotations(data",{"_index":709,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odatavalueannotations(this.value",{"_index":708,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["odataversion",{"_index":619,"title":{},"body":{"classes/Field.html":{}}}],["ondelete",{"_index":344,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["one",{"_index":1845,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{}}}],["open",{"_index":154,"title":{},"body":{"classes/BatchRequest.html":{},"index.html":{}}}],["opentype",{"_index":240,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["option",{"_index":1768,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["option(name",{"_index":1789,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["option(type",{"_index":1770,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["optional",{"_index":18,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":2131,"title":{},"body":{"index.html":{}}}],["optionhandler",{"_index":1714,"title":{"classes/OptionHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["optionhandler(this.options",{"_index":1773,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["options",{"_index":19,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["options).pipe(map(([entity",{"_index":1608,"title":{},"body":{"classes/ODataModel.html":{}}}],["options.annotations",{"_index":943,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["options.params",{"_index":138,"title":{},"body":{"classes/BatchRequest.html":{}}}],["options.reportprogress",{"_index":140,"title":{},"body":{"classes/BatchRequest.html":{}}}],["options.resource",{"_index":939,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["options.ts",{"_index":1776,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["options.ts:100",{"_index":1782,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:105",{"_index":1941,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:108",{"_index":1956,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:112",{"_index":1952,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:117",{"_index":1954,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:122",{"_index":1942,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:128",{"_index":1949,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:132",{"_index":1950,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:139",{"_index":1945,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:144",{"_index":1943,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:157",{"_index":1951,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:161",{"_index":1947,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:167",{"_index":1953,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:176",{"_index":1948,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:180",{"_index":1944,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:184",{"_index":1946,"title":{},"body":{"classes/OptionHandler.html":{}}}],["options.ts:25",{"_index":1780,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:32",{"_index":1791,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:57",{"_index":1795,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:64",{"_index":1794,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:68",{"_index":1783,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:73",{"_index":1790,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:80",{"_index":1785,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:84",{"_index":1793,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:88",{"_index":1787,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.ts:95",{"_index":1781,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["options.withcredentials",{"_index":144,"title":{},"body":{"classes/BatchRequest.html":{}}}],["opts",{"_index":1269,"title":{},"body":{"classes/ODataEntityConfig.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["opts.include_navigation",{"_index":1202,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["opts.include_parents",{"_index":1204,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["order",{"_index":2033,"title":{},"body":{"interfaces/Parser.html":{}}}],["orderby",{"_index":927,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["orderby(orderby",{"_index":1019,"title":{},"body":{"classes/ODataCollection.html":{}}}],["orderbyoptions",{"_index":2265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["others",{"_index":1580,"title":{},"body":{"classes/ODataModel.html":{}}}],["overview",{"_index":2258,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1441,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"interfaces/Parser.html":{}}}],["package",{"_index":2048,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":935,"title":{},"body":{"classes/ODataCollection.html":{}}}],["pages",{"_index":936,"title":{},"body":{"classes/ODataCollection.html":{}}}],["param",{"_index":1104,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["param.indexof(value_separator",{"_index":2027,"title":{},"body":{"interfaces/Parser.html":{}}}],["param.substr(0",{"_index":2028,"title":{},"body":{"interfaces/Parser.html":{}}}],["param.substr(index",{"_index":2029,"title":{},"body":{"interfaces/Parser.html":{}}}],["param_separator",{"_index":2018,"title":{},"body":{"interfaces/Parser.html":{}}}],["parameter",{"_index":508,"title":{},"body":{"classes/Field.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":137,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":1271,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["parentelement.children",{"_index":628,"title":{},"body":{"classes/Field.html":{}}}],["parse",{"_index":607,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/Parser.html":{}}}],["parse(entity",{"_index":1540,"title":{},"body":{"classes/ODataModel.html":{}}}],["parse(objs",{"_index":1286,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["parse(value",{"_index":1303,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["parse(values",{"_index":902,"title":{},"body":{"classes/ODataCollection.html":{}}}],["parsenot",{"_index":2088,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsenot(builtfilters",{"_index":2106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parsequery",{"_index":1796,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["parsequery(query.substr(1",{"_index":1814,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["parser",{"_index":567,"title":{"interfaces/Parser.html":{}},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["parser.fields.filter(field",{"_index":1201,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["parser.parent",{"_index":1206,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["parser.parsefromstring(xml",{"_index":570,"title":{},"body":{"classes/Field.html":{}}}],["parseresponses",{"_index":784,"title":{},"body":{"classes/ODataBatch.html":{}}}],["parserfortype",{"_index":1043,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["parserfortype(type",{"_index":1084,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["parsers",{"_index":1097,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["parsers[this.type",{"_index":1338,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["partial",{"_index":1419,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/Parser.html":{}}}],["partner",{"_index":345,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["parts",{"_index":681,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{}}}],["parts.length",{"_index":685,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["parts[0",{"_index":684,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["parts[1",{"_index":687,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["patch",{"_index":90,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["patch(entity",{"_index":1471,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["path",{"_index":58,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"classes/ODataPathSegments.html":{},"injectables/ODataServiceFactory.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["path_separator",{"_index":1715,"title":{},"body":{"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["pathsegmentnames",{"_index":57,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["pathsegmentnames.function",{"_index":1721,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["pathsegmentsbuilder",{"_index":1717,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["peop",{"_index":2187,"title":{},"body":{"index.html":{}}}],["people",{"_index":2178,"title":{},"body":{"index.html":{}}}],["people.expand",{"_index":2180,"title":{},"body":{"index.html":{}}}],["people.expand().clear",{"_index":2188,"title":{},"body":{"index.html":{}}}],["people.get({withcount",{"_index":2184,"title":{},"body":{"index.html":{}}}],["peopleservice",{"_index":2152,"title":{},"body":{"index.html":{}}}],["peopleservice.entities",{"_index":2179,"title":{},"body":{"index.html":{}}}],["person",{"_index":2202,"title":{},"body":{"index.html":{}}}],["person.entity",{"_index":2227,"title":{},"body":{"index.html":{}}}],["person.expand",{"_index":2235,"title":{},"body":{"index.html":{}}}],["person.get",{"_index":2238,"title":{},"body":{"index.html":{}}}],["person.photo",{"_index":2241,"title":{},"body":{"index.html":{}}}],["personconfig",{"_index":2209,"title":{},"body":{"index.html":{}}}],["persongender",{"_index":2194,"title":{},"body":{"index.html":{}}}],["persongender.enum",{"_index":2195,"title":{},"body":{"index.html":{}}}],["persongenderconfig",{"_index":2216,"title":{},"body":{"index.html":{}}}],["photo",{"_index":2198,"title":{},"body":{"index.html":{}}}],["photo.entity",{"_index":2199,"title":{},"body":{"index.html":{}}}],["photoconfig",{"_index":2220,"title":{},"body":{"index.html":{}}}],["photos",{"_index":2236,"title":{},"body":{"index.html":{}}}],["pipe(catcherror((error",{"_index":1475,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["pipe(map(resp",{"_index":145,"title":{},"body":{"classes/BatchRequest.html":{}}}],["plainobject",{"_index":1710,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/typealiases.html":{}}}],["planitems",{"_index":2237,"title":{},"body":{"index.html":{}}}],["please",{"_index":1110,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["pm",{"_index":1547,"title":{},"body":{"classes/ODataModel.html":{}}}],["pointer",{"_index":973,"title":{},"body":{"classes/ODataCollection.html":{}}}],["populate",{"_index":875,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["populate(entity",{"_index":1542,"title":{},"body":{"classes/ODataModel.html":{}}}],["populate(values",{"_index":904,"title":{},"body":{"classes/ODataCollection.html":{}}}],["post",{"_index":86,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["post(entity",{"_index":1468,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["precision",{"_index":199,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["prefix",{"_index":2100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["primitive",{"_index":1837,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["private",{"_index":106,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{}}}],["project",{"_index":2118,"title":{},"body":{"index.html":{}}}],["projects",{"_index":2251,"title":{},"body":{"index.html":{}}}],["projects/.../batch.ts",{"_index":2069,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../builder.ts",{"_index":2071,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../http",{"_index":2263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../metadata.ts",{"_index":2066,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../module.ts",{"_index":2085,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../path",{"_index":2067,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../query",{"_index":2068,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../types.ts",{"_index":2261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/angular",{"_index":6,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["prop",{"_index":1584,"title":{},"body":{"classes/ODataModel.html":{}}}],["prop.tocollection(object.assign(base",{"_index":1589,"title":{},"body":{"classes/ODataModel.html":{}}}],["prop.tomodel(object.assign(base",{"_index":1590,"title":{},"body":{"classes/ODataModel.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["property",{"_index":252,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataValueAnnotations.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["property(key",{"_index":1442,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["property(name",{"_index":651,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["property.enum",{"_index":1330,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["property.maxlength",{"_index":1343,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["property.ts",{"_index":341,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["property.ts:1",{"_index":434,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:14",{"_index":377,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:15",{"_index":378,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:16",{"_index":379,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:17",{"_index":381,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:18",{"_index":380,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:19",{"_index":376,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["property.ts:25",{"_index":349,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:3",{"_index":435,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:30",{"_index":352,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:31",{"_index":350,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:32",{"_index":353,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:33",{"_index":351,"title":{},"body":{"classes/CsdlNavigationProperty.html":{}}}],["property.ts:39",{"_index":391,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:4",{"_index":437,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:41",{"_index":392,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:42",{"_index":393,"title":{},"body":{"classes/CsdlReferentialConstraint.html":{}}}],["property.ts:46",{"_index":365,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:48",{"_index":366,"title":{},"body":{"classes/CsdlOnDelete.html":{}}}],["property.ts:5",{"_index":436,"title":{},"body":{"classes/CsdlStructuralProperty.html":{}}}],["property.ts:9",{"_index":375,"title":{},"body":{"classes/CsdlProperty.html":{}}}],["propertyref",{"_index":499,"title":{},"body":{"classes/Field.html":{}}}],["propertyrefs",{"_index":257,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["propprefix",{"_index":2095,"title":{},"body":{"miscellaneous/functions.html":{}}}],["protected",{"_index":609,"title":{},"body":{"classes/Field.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["provide",{"_index":1676,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["providers",{"_index":1659,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["public",{"_index":15,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["push",{"_index":1938,"title":{},"body":{"classes/OptionHandler.html":{}}}],["push(value",{"_index":1841,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["put",{"_index":87,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["put(entity",{"_index":1470,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["qualifier",{"_index":216,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["queries",{"_index":2149,"title":{},"body":{"index.html":{}}}],["query",{"_index":61,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["query.split(param_separator",{"_index":2026,"title":{},"body":{"interfaces/Parser.html":{}}}],["query_separator",{"_index":2017,"title":{},"body":{"interfaces/Parser.html":{}}}],["querying",{"_index":2114,"title":{},"body":{"index.html":{}}}],["queryoptionnames",{"_index":1784,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["queryoptionnames.expand",{"_index":1808,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.filter",{"_index":1801,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.format",{"_index":1809,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.orderby",{"_index":1804,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.search",{"_index":1802,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.select",{"_index":1800,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skip",{"_index":1806,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.skiptoken",{"_index":1807,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.top",{"_index":1805,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptionnames.transform",{"_index":1803,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["queryoptions",{"_index":2266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["r",{"_index":1417,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["r\\n",{"_index":796,"title":{},"body":{"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["raw",{"_index":2267,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["read",{"_index":1979,"title":{},"body":{"interfaces/Parser.html":{}}}],["readlink",{"_index":721,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["readonly",{"_index":11,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataBatch.html":{},"interfaces/Parser.html":{}}}],["reattach",{"_index":948,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["records",{"_index":933,"title":{},"body":{"classes/ODataCollection.html":{}}}],["reduce((acc",{"_index":692,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["ref",{"_index":994,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["ref.add(model.target",{"_index":996,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ref.remove(model.target",{"_index":999,"title":{},"body":{"classes/ODataCollection.html":{}}}],["ref.set(value.rel.target",{"_index":1619,"title":{},"body":{"classes/ODataModel.html":{}}}],["ref.unset({etag",{"_index":1620,"title":{},"body":{"classes/ODataModel.html":{}}}],["reference",{"_index":469,"title":{},"body":{"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["reference.ts",{"_index":319,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{}}}],["reference.ts:14",{"_index":322,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:16",{"_index":324,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:17",{"_index":323,"title":{},"body":{"classes/CsdlInclude.html":{}}}],["reference.ts:21",{"_index":334,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:23",{"_index":337,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:24",{"_index":335,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:25",{"_index":336,"title":{},"body":{"classes/CsdlIncludeAnnotations.html":{}}}],["reference.ts:3",{"_index":386,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:5",{"_index":389,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:6",{"_index":388,"title":{},"body":{"classes/CsdlReference.html":{}}}],["reference.ts:7",{"_index":387,"title":{},"body":{"classes/CsdlReference.html":{}}}],["referencedproperty",{"_index":358,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/Field.html":{}}}],["references",{"_index":563,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["referentialconstraint",{"_index":503,"title":{},"body":{"classes/Field.html":{}}}],["referentialconstraints",{"_index":346,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{}}}],["region",{"_index":1137,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["rel",{"_index":1560,"title":{},"body":{"classes/ODataModel.html":{}}}],["related",{"_index":1990,"title":{},"body":{"interfaces/Parser.html":{},"index.html":{}}}],["relationship",{"_index":1988,"title":{},"body":{"interfaces/Parser.html":{}}}],["rels",{"_index":1610,"title":{},"body":{"classes/ODataModel.html":{}}}],["remove",{"_index":876,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["remove(...names",{"_index":1825,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["remove(model",{"_index":907,"title":{},"body":{"classes/ODataCollection.html":{}}}],["remove(name",{"_index":1700,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["remove(names",{"_index":1792,"title":{},"body":{"classes/ODataQueryOptions.html":{}}}],["remove(value",{"_index":1843,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["reportprogress",{"_index":139,"title":{},"body":{"classes/BatchRequest.html":{}}}],["represent",{"_index":1984,"title":{},"body":{"interfaces/Parser.html":{}}}],["request",{"_index":148,"title":{},"body":{"classes/BatchRequest.html":{}}}],["request.getheaders(method",{"_index":162,"title":{},"body":{"classes/BatchRequest.html":{}}}],["request.method",{"_index":149,"title":{},"body":{"classes/BatchRequest.html":{}}}],["request.odataquery",{"_index":150,"title":{},"body":{"classes/BatchRequest.html":{}}}],["request.options.body",{"_index":151,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requested",{"_index":1968,"title":{},"body":{"interfaces/Parser.html":{}}}],["requestmethod",{"_index":24,"title":{},"body":{"classes/BatchRequest.html":{},"miscellaneous/enumerations.html":{}}}],["requestmethod.delete",{"_index":163,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod.get",{"_index":156,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod.patch",{"_index":94,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod.post",{"_index":93,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod.put",{"_index":95,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requestmethod[method",{"_index":161,"title":{},"body":{"classes/BatchRequest.html":{}}}],["requests",{"_index":109,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{}}}],["required",{"_index":1299,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["res",{"_index":92,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["res.length",{"_index":165,"title":{},"body":{"classes/BatchRequest.html":{}}}],["res.split(':')[1].trim",{"_index":842,"title":{},"body":{"classes/ODataBatch.html":{}}}],["resolve",{"_index":1497,"title":{},"body":{"classes/ODataFieldParser.html":{}}}],["resolve(value",{"_index":1334,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["resolvekey",{"_index":1274,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["resolvekey(attrs",{"_index":1289,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["resource",{"_index":77,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.action(name",{"_index":1005,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.alias(name",{"_index":1026,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.clone().tomodel(value",{"_index":953,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.entity",{"_index":950,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.expand(expand",{"_index":1022,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.filter(filter",{"_index":1015,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.function(name",{"_index":1003,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.key(value",{"_index":952,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.navigationproperty(name",{"_index":1627,"title":{},"body":{"classes/ODataModel.html":{}}}],["resource.orderby(orderby",{"_index":1020,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.put(entity",{"_index":1622,"title":{},"body":{"classes/ODataModel.html":{}}}],["resource.search(search",{"_index":1018,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.select(select",{"_index":1013,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resource.skip(skip",{"_index":1009,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.skiptoken(skiptoken",{"_index":1011,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.top(top",{"_index":1007,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.transform(transform",{"_index":1024,"title":{},"body":{"classes/ODataCollection.html":{}}}],["resource.type",{"_index":946,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resources",{"_index":766,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"index.html":{}}}],["resources/http",{"_index":931,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["resources/requests/navigationproperty",{"_index":1557,"title":{},"body":{"classes/ODataModel.html":{}}}],["response",{"_index":136,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{}}}],["responses",{"_index":79,"title":{},"body":{"classes/BatchRequest.html":{}}}],["responsetype",{"_index":141,"title":{},"body":{"classes/BatchRequest.html":{}}}],["result",{"_index":169,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["results",{"_index":171,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":1998,"title":{},"body":{"interfaces/Parser.html":{}}}],["return",{"_index":98,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["returns",{"_index":45,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":178,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlParameter.html":{},"classes/CsdlReturnType.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["rfc",{"_index":2253,"title":{},"body":{"index.html":{}}}],["root",{"_index":2141,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":51,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":63,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["s",{"_index":1759,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.name",{"_index":1750,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.path",{"_index":1752,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["s.type",{"_index":1146,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["s.type).filter(t",{"_index":1739,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["save",{"_index":1412,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["save(entity",{"_index":1445,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["save(options",{"_index":1544,"title":{},"body":{"classes/ODataModel.html":{}}}],["scale",{"_index":200,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["schema",{"_index":468,"title":{},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["schema.entities",{"_index":1157,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.entities.find(e",{"_index":1144,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.enums",{"_index":1154,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.enums.find(e",{"_index":1142,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.services",{"_index":1158,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.services.find(s",{"_index":1145,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schema.ts",{"_index":403,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:10",{"_index":423,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:11",{"_index":416,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:12",{"_index":421,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:13",{"_index":418,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:14",{"_index":420,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:15",{"_index":422,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:16",{"_index":415,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:17",{"_index":419,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:18",{"_index":425,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:19",{"_index":424,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:20",{"_index":417,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schema.ts:8",{"_index":414,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["schemafortype",{"_index":1044,"title":{},"body":{"classes/ODataConfig.html":{}}}],["schemafortype(type",{"_index":1087,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["schemas",{"_index":564,"title":{},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["schmea.configure",{"_index":1135,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["search",{"_index":1016,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["search(search",{"_index":1017,"title":{},"body":{"classes/ODataCollection.html":{}}}],["segment",{"_index":1687,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment(name",{"_index":1702,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.name",{"_index":1719,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.options[segmentoptionnames.key",{"_index":1726,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.options[segmentoptionnames.parameters",{"_index":1722,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.path",{"_index":1724,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segment.type",{"_index":1743,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler",{"_index":1698,"title":{"classes/SegmentHandler.html":{}},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(segment",{"_index":1757,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmenthandler(this.segments[this.segments.length",{"_index":1754,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["segmentoptionnames",{"_index":1716,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["segments",{"_index":59,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataPathSegments.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["segments.segment(pathsegmentnames.batch",{"_index":125,"title":{},"body":{"classes/BatchRequest.html":{}}}],["segments.ts",{"_index":1685,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["segments.ts:101",{"_index":1703,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:111",{"_index":1696,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:115",{"_index":1701,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:122",{"_index":2039,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:127",{"_index":2044,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:131",{"_index":2045,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:135",{"_index":2043,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:139",{"_index":2047,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:143",{"_index":2042,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:148",{"_index":2041,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:155",{"_index":2040,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["segments.ts:55",{"_index":1691,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:61",{"_index":1699,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:67",{"_index":1706,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:71",{"_index":1705,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:75",{"_index":1704,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:85",{"_index":1692,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:89",{"_index":1694,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["segments.ts:96",{"_index":1697,"title":{},"body":{"classes/ODataPathSegments.html":{}}}],["select",{"_index":926,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["select(select",{"_index":1012,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["selector",{"_index":2139,"title":{},"body":{"index.html":{}}}],["serialize",{"_index":1323,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["service",{"_index":1965,"title":{},"body":{"interfaces/Parser.html":{},"index.html":{}}}],["serviceconfig",{"_index":1100,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"miscellaneous/typealiases.html":{}}}],["serviceconfigforname",{"_index":1045,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataSettings.html":{}}}],["serviceconfigforname(name",{"_index":1089,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["serviceconfigfortype",{"_index":1046,"title":{},"body":{"classes/ODataConfig.html":{}}}],["serviceconfigfortype(type",{"_index":1092,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["servicerooturl",{"_index":1032,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["services",{"_index":1177,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["services/factory",{"_index":1670,"title":{},"body":{"modules/ODataModule.html":{}}}],["set",{"_index":277,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataModel.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"index.html":{}}}],["set(model",{"_index":1569,"title":{},"body":{"classes/ODataModel.html":{}}}],["set(name",{"_index":1859,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["set.ts",{"_index":279,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:3",{"_index":283,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:5",{"_index":286,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:6",{"_index":284,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:7",{"_index":287,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["set.ts:8",{"_index":285,"title":{},"body":{"classes/CsdlEntitySet.html":{}}}],["setbatchboundary(batchboundary",{"_index":167,"title":{},"body":{"classes/BatchRequest.html":{}}}],["setnavigationproperty",{"_index":1522,"title":{},"body":{"classes/ODataModel.html":{}}}],["setnavigationproperty(field",{"_index":1546,"title":{},"body":{"classes/ODataModel.html":{}}}],["setnavigationproperty>(field",{"_index":1637,"title":{},"body":{"classes/ODataModel.html":{}}}],["setpath",{"_index":2036,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["setpath(value",{"_index":1767,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["settings",{"_index":1216,"title":{},"body":{"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{},"index.html":{}}}],["settings.parserfortype(this.base",{"_index":1376,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["settings.parserfortype(this.type",{"_index":1339,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["settings.stringasenum",{"_index":1332,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["settingsfactory",{"_index":2136,"title":{},"body":{"index.html":{}}}],["settype",{"_index":2037,"title":{},"body":{"classes/SegmentHandler.html":{}}}],["settype(value",{"_index":1765,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["shortcuts",{"_index":1473,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataSettings.html":{}}}],["show(name",{"_index":2233,"title":{},"body":{"index.html":{}}}],["simple",{"_index":2128,"title":{},"body":{"index.html":{}}}],["singleton",{"_index":278,"title":{},"body":{"classes/CsdlEntityContainer.html":{},"classes/Field.html":{},"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{}}}],["singleton.ts",{"_index":428,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:3",{"_index":430,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:5",{"_index":431,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:6",{"_index":433,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singleton.ts:7",{"_index":432,"title":{},"body":{"classes/CsdlSingleton.html":{}}}],["singletons",{"_index":267,"title":{},"body":{"classes/CsdlEntityContainer.html":{}}}],["size",{"_index":934,"title":{},"body":{"classes/ODataCollection.html":{}}}],["skip",{"_index":745,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["skip(skip",{"_index":1008,"title":{},"body":{"classes/ODataCollection.html":{}}}],["skiptoken",{"_index":747,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["skiptoken(skiptoken",{"_index":1010,"title":{},"body":{"classes/ODataCollection.html":{}}}],["slice(1",{"_index":1725,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["specified",{"_index":615,"title":{},"body":{"classes/Field.html":{}}}],["srid",{"_index":201,"title":{},"body":{"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["standardaggregatemethods",{"_index":2070,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["started",{"_index":2110,"title":{"index.html":{}},"body":{}}],["state",{"_index":879,"title":{},"body":{"classes/ODataCollection.html":{}}}],["states",{"_index":2173,"title":{},"body":{"index.html":{}}}],["static",{"_index":10,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataValueAnnotations.html":{},"index.html":{}}}],["status",{"_index":856,"title":{},"body":{"classes/ODataBatch.html":{}}}],["status.length",{"_index":860,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statusline",{"_index":852,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statusline.indexof(status",{"_index":859,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statusline.substring(statustextindex",{"_index":862,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statuslineparts",{"_index":854,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statuslineparts[1",{"_index":857,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statustext",{"_index":861,"title":{},"body":{"classes/ODataBatch.html":{}}}],["statustextindex",{"_index":858,"title":{},"body":{"classes/ODataBatch.html":{}}}],["stream",{"_index":2001,"title":{},"body":{"interfaces/Parser.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["stringasenum",{"_index":1033,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["structural",{"_index":251,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["structured",{"_index":234,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlSchema.html":{},"classes/CsdlStructuredType.html":{},"classes/Field.html":{}}}],["styleurls",{"_index":2144,"title":{},"body":{"index.html":{}}}],["subscribe(([aport",{"_index":2166,"title":{},"body":{"index.html":{}}}],["subscribe(([aports",{"_index":2161,"title":{},"body":{"index.html":{}}}],["subscribe(([peop",{"_index":2185,"title":{},"body":{"index.html":{}}}],["subscribe(([person",{"_index":2239,"title":{},"body":{"index.html":{}}}],["subscribe(aports",{"_index":2157,"title":{},"body":{"index.html":{}}}],["sum",{"_index":2073,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super(annotationlist",{"_index":217,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/CsdlSchema.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{}}}],["super(client",{"_index":1458,"title":{},"body":{"injectables/ODataEntityService.html":{},"injectables/ODataModelService.html":{}}}],["super(name",{"_index":253,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{}}}],["super(service",{"_index":115,"title":{},"body":{"classes/BatchRequest.html":{}}}],["supported",{"_index":622,"title":{},"body":{"classes/Field.html":{}}}],["switch",{"_index":1718,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["switchmap",{"_index":1556,"title":{},"body":{"classes/ODataModel.html":{}}}],["symbol.iterator",{"_index":972,"title":{},"body":{"classes/ODataCollection.html":{}}}],["system",{"_index":1797,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["t",{"_index":1071,"title":{},"body":{"classes/ODataConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["t[]).map(value",{"_index":951,"title":{},"body":{"classes/ODataCollection.html":{}}}],["t[p",{"_index":1962,"title":{},"body":{"interfaces/Parser.html":{}}}],["tag",{"_index":471,"title":{},"body":{"classes/Field.html":{},"miscellaneous/enumerations.html":{}}}],["tag_action",{"_index":509,"title":{},"body":{"classes/Field.html":{}}}],["tag_action_import",{"_index":515,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotation",{"_index":487,"title":{},"body":{"classes/Field.html":{}}}],["tag_annotations",{"_index":485,"title":{},"body":{"classes/Field.html":{}}}],["tag_complex_type",{"_index":493,"title":{},"body":{"classes/Field.html":{}}}],["tag_data_services",{"_index":476,"title":{},"body":{"classes/Field.html":{}}}],["tag_edmx",{"_index":474,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_container",{"_index":510,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_set",{"_index":511,"title":{},"body":{"classes/Field.html":{}}}],["tag_entity_type",{"_index":495,"title":{},"body":{"classes/Field.html":{}}}],["tag_enum_type",{"_index":489,"title":{},"body":{"classes/Field.html":{}}}],["tag_function",{"_index":505,"title":{},"body":{"classes/Field.html":{}}}],["tag_function_import",{"_index":513,"title":{},"body":{"classes/Field.html":{}}}],["tag_include",{"_index":480,"title":{},"body":{"classes/Field.html":{}}}],["tag_include_annotations",{"_index":482,"title":{},"body":{"classes/Field.html":{}}}],["tag_key",{"_index":497,"title":{},"body":{"classes/Field.html":{}}}],["tag_member",{"_index":491,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property",{"_index":500,"title":{},"body":{"classes/Field.html":{}}}],["tag_navigation_property_binding",{"_index":517,"title":{},"body":{"classes/Field.html":{}}}],["tag_on_delete",{"_index":504,"title":{},"body":{"classes/Field.html":{}}}],["tag_parameter",{"_index":507,"title":{},"body":{"classes/Field.html":{}}}],["tag_property",{"_index":496,"title":{},"body":{"classes/Field.html":{}}}],["tag_property_ref",{"_index":498,"title":{},"body":{"classes/Field.html":{}}}],["tag_reference",{"_index":478,"title":{},"body":{"classes/Field.html":{}}}],["tag_referential_constraint",{"_index":502,"title":{},"body":{"classes/Field.html":{}}}],["tag_return_type",{"_index":506,"title":{},"body":{"classes/Field.html":{}}}],["tag_schema",{"_index":488,"title":{},"body":{"classes/Field.html":{}}}],["tag_singleton",{"_index":512,"title":{},"body":{"classes/Field.html":{}}}],["tag_term",{"_index":484,"title":{},"body":{"classes/Field.html":{}}}],["tag_type_definition",{"_index":518,"title":{},"body":{"classes/Field.html":{}}}],["tags",{"_index":473,"title":{},"body":{"classes/Field.html":{},"index.html":{}}}],["target",{"_index":215,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["targeted",{"_index":1994,"title":{},"body":{"interfaces/Parser.html":{}}}],["targetnamespace",{"_index":332,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["templateurl",{"_index":2142,"title":{},"body":{"index.html":{}}}],["term",{"_index":218,"title":{},"body":{"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlTerm.html":{},"classes/Field.html":{}}}],["termnamespace",{"_index":331,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["terms",{"_index":411,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["text",{"_index":142,"title":{},"body":{"classes/BatchRequest.html":{}}}],["text/plain",{"_index":2013,"title":{},"body":{"interfaces/Parser.html":{}}}],["text/xml",{"_index":571,"title":{},"body":{"classes/Field.html":{}}}],["text_plain",{"_index":2012,"title":{},"body":{"interfaces/Parser.html":{}}}],["this._annotations",{"_index":954,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._annotations.etag",{"_index":1609,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._annotations.property(f.name",{"_index":1588,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._annotations.property(field.name",{"_index":1632,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._context",{"_index":677,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this._entity",{"_index":1571,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._entity[f.name",{"_index":1583,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._entity[field.name",{"_index":1628,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._functions",{"_index":688,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this._models",{"_index":932,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._models.map(model",{"_index":969,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._properties",{"_index":696,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this._query.skip(this._state.skip",{"_index":987,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._query.skiptoken(this._state.skiptoken",{"_index":989,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._relations",{"_index":1591,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._relations[field.name",{"_index":1635,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._relations[field.name].rel",{"_index":1636,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource",{"_index":944,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.all",{"_index":990,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._resource.clone",{"_index":949,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.config().fields",{"_index":1563,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.delete(object.assign",{"_index":1625,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.get",{"_index":981,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.get(options",{"_index":980,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._resource.haskey",{"_index":1603,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.key(this",{"_index":1602,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.post(entity",{"_index":1607,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._resource.reference",{"_index":995,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._resource.type",{"_index":945,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this._segments.navigationproperty(field.name",{"_index":1630,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._segments.navigationproperty(value.field.name).reference",{"_index":1616,"title":{},"body":{"classes/ODataModel.html":{}}}],["this._state",{"_index":938,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.page",{"_index":966,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.pages",{"_index":964,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.records",{"_index":963,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.size",{"_index":958,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.skip",{"_index":959,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.skiptoken",{"_index":961,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this._state.top",{"_index":956,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.acceptmetadata",{"_index":1125,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.annotations",{"_index":1191,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.assertarray",{"_index":1855,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().filter(v",{"_index":1844,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray().push(value",{"_index":1842,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertarray()[index",{"_index":1850,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.assertobject()[name",{"_index":1860,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.attach(options.resource",{"_index":941,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this.base",{"_index":1352,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.batchboundary",{"_index":117,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.changesetboundary",{"_index":119,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.changesetid",{"_index":121,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.checkversion(document",{"_index":572,"title":{},"body":{"classes/Field.html":{}}}],["this.client",{"_index":1888,"title":{},"body":{"injectables/ODataServiceFactory.html":{}}}],["this.client.entityset(ctor.path",{"_index":770,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["this.client.mergehttpheaders(options.headers",{"_index":132,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.client.post(this",{"_index":133,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.client.serviceconfigfortype(ctor.type",{"_index":774,"title":{},"body":{"classes/ODataBaseService.html":{}}}],["this.collection",{"_index":1194,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.configs",{"_index":1907,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.find(c",{"_index":1919,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.foreach(config",{"_index":1916,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.length",{"_index":1910,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.map(config",{"_index":1925,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs.some(c",{"_index":1911,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.configs[0",{"_index":1918,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.constructor",{"_index":769,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["this.containers",{"_index":1173,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.containers.reduce((acc",{"_index":1178,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.create(entity",{"_index":1478,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.create(options",{"_index":1624,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.createodataresponse(batchbodylines",{"_index":833,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.creation",{"_index":1129,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.entities",{"_index":772,"title":{},"body":{"classes/ODataBaseService.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.entities().action(name",{"_index":1462,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entities().function(name",{"_index":1464,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entities().tocollection({[value",{"_index":1652,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["this.entity(entity",{"_index":1469,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(entity).haskey",{"_index":1480,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(entity).tomodel(entity",{"_index":1651,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["this.entity(key",{"_index":1467,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(key).action(name",{"_index":1461,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(key).function(name",{"_index":1463,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(key).navigationproperty(name",{"_index":1459,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entity(key).property(name",{"_index":1460,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.entityconfigforname(name",{"_index":1159,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.entityconfigfortype(type",{"_index":1148,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.enumconfigfortype(type",{"_index":1160,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.enums",{"_index":1167,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.factory.createentityservice(\"airports",{"_index":2151,"title":{},"body":{"index.html":{}}}],["this.factory.createentityservice(\"people",{"_index":2153,"title":{},"body":{"index.html":{}}}],["this.fetch(options",{"_index":988,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.fetchone(entity",{"_index":1474,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.fields",{"_index":1354,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.fields.filter(f",{"_index":1386,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.fields.find(f",{"_index":1388,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.fields.foreach(f",{"_index":1377,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.find(name",{"_index":1755,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.findconfigfortypes([type",{"_index":1924,"title":{},"body":{"classes/ODataSettings.html":{}}}],["this.flags",{"_index":1316,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.functions[name",{"_index":706,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.get(name",{"_index":1866,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.getbody",{"_index":134,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.getboundarydelimiter(contenttype",{"_index":823,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.getboundaryend(boundarydelimiterbatch",{"_index":825,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.getfieldvaluebyattribute",{"_index":574,"title":{},"body":{"classes/Field.html":{}}}],["this.getnavigationproperty(field",{"_index":1568,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.getobjects(dataservices",{"_index":590,"title":{},"body":{"classes/Field.html":{}}}],["this.getobjects(document.documentelement",{"_index":579,"title":{},"body":{"classes/Field.html":{}}}],["this.headers",{"_index":1118,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.httpresponse",{"_index":817,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.httpresponse.body",{"_index":827,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.httpresponse.headers.get(odatabatch.content_type",{"_index":821,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.keys",{"_index":1393,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.keys().length",{"_index":1398,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.maxlength",{"_index":1342,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.members",{"_index":1183,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.metadataurl",{"_index":1120,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.model",{"_index":1193,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.n",{"_index":1835,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.name",{"_index":1114,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.namespace",{"_index":1165,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.navigation",{"_index":1347,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.nextlink",{"_index":742,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.o[this.n",{"_index":1836,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].filter(v",{"_index":1864,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n].length",{"_index":1847,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n][0",{"_index":1848,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.o[this.n][name",{"_index":1862,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.odataresponses",{"_index":818,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.odataresponses.push(odataresponse",{"_index":836,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.odataresponses.push(response",{"_index":839,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.option(name).clear",{"_index":1827,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options",{"_index":1761,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["this.options.headers",{"_index":101,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.options[k",{"_index":1832,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[key",{"_index":1812,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[name",{"_index":1822,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[queryoptionnames.custom",{"_index":1815,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["this.options[type",{"_index":1772,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.params",{"_index":1116,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.parent",{"_index":1359,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parent.keys",{"_index":1391,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parent.parse(objs",{"_index":1360,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parent.tojson(objs",{"_index":1371,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parent.typefor(name",{"_index":1390,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parse(this._entity",{"_index":1592,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.parse(values",{"_index":968,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.parser",{"_index":1187,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.parser.configure(settings",{"_index":1189,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.parser.iscomplex",{"_index":1351,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parser.parse(value",{"_index":1336,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parser.tojson(value",{"_index":1337,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.parseresponses",{"_index":819,"title":{},"body":{"classes/ODataBatch.html":{}}}],["this.parserfortype(type",{"_index":1136,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.path",{"_index":1741,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.people.entity({username",{"_index":2234,"title":{},"body":{"index.html":{}}}],["this.person",{"_index":2240,"title":{},"body":{"index.html":{}}}],["this.photos.entity(person.photo).media",{"_index":2242,"title":{},"body":{"index.html":{}}}],["this.populate((entity",{"_index":1561,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.populate((values",{"_index":942,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.populate(entities",{"_index":986,"title":{},"body":{"classes/ODataCollection.html":{}}}],["this.populate(entity",{"_index":1605,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.populate(this._entity",{"_index":1572,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.properties[name",{"_index":705,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.queries",{"_index":2148,"title":{},"body":{"index.html":{}}}],["this.ref.split('/').reduce((acc",{"_index":1335,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.references",{"_index":578,"title":{},"body":{"classes/Field.html":{}}}],["this.requests",{"_index":116,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.requests.push(new",{"_index":128,"title":{},"body":{"classes/BatchRequest.html":{}}}],["this.schemafortype(type",{"_index":1141,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.schemas",{"_index":589,"title":{},"body":{"classes/Field.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.schemas.find(s",{"_index":1139,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.schemas.reduce((acc",{"_index":1153,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.segment.name",{"_index":1763,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.options",{"_index":1762,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.path",{"_index":1766,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segment.type",{"_index":1764,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments",{"_index":1733,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.filter(s",{"_index":1758,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.length",{"_index":1753,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(s",{"_index":1738,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.map(segment",{"_index":1742,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments.push(segment",{"_index":1756,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.segments].reverse().find(s",{"_index":1749,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["this.servicerooturl",{"_index":1105,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.servicerooturl.endswith",{"_index":1113,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.servicerooturl.indexof",{"_index":1107,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.services",{"_index":1208,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.setnavigationproperty(field",{"_index":1570,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.show('scottketchum",{"_index":2232,"title":{},"body":{"index.html":{}}}],["this.stringasenum",{"_index":1127,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.toentity",{"_index":1606,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.type",{"_index":1185,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["this.type}'${e",{"_index":1327,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["this.update(entity",{"_index":1481,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["this.update(options",{"_index":1623,"title":{},"body":{"classes/ODataModel.html":{}}}],["this.value",{"_index":678,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[key",{"_index":695,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_context",{"_index":679,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_count",{"_index":735,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_etag",{"_index":716,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_id",{"_index":714,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_media_contenttype",{"_index":730,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_metadataetag",{"_index":720,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.value[odata_type].substr(1",{"_index":710,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["this.version",{"_index":573,"title":{},"body":{"classes/Field.html":{}}}],["this.withcredentials",{"_index":1122,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["through",{"_index":2135,"title":{},"body":{"index.html":{}}}],["throw",{"_index":605,"title":{},"body":{"classes/Field.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["throwerror",{"_index":1456,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["throwerror(error",{"_index":1479,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["title",{"_index":1297,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"index.html":{}}}],["toentities",{"_index":877,"title":{},"body":{"classes/ODataCollection.html":{}}}],["toentity",{"_index":1523,"title":{},"body":{"classes/ODataModel.html":{}}}],["tojson",{"_index":1275,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{}}}],["tojson(objs",{"_index":1292,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["tojson(value",{"_index":1308,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"interfaces/Parser.html":{}}}],["tojsonschema",{"_index":1276,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["tojsonschema(config",{"_index":1294,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["tojsonschema(options",{"_index":1312,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["tools",{"_index":1823,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["top",{"_index":740,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataCollection.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{}}}],["top(top",{"_index":1006,"title":{},"body":{"classes/ODataCollection.html":{}}}],["tostring",{"_index":1688,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["total",{"_index":1967,"title":{},"body":{"interfaces/Parser.html":{}}}],["transfer",{"_index":2015,"title":{},"body":{"interfaces/Parser.html":{}}}],["transform",{"_index":928,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["transform(transform",{"_index":1023,"title":{},"body":{"classes/ODataCollection.html":{}}}],["transforms",{"_index":2102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["trip",{"_index":2200,"title":{},"body":{"index.html":{}}}],["trip.entity",{"_index":2201,"title":{},"body":{"index.html":{}}}],["tripconfig",{"_index":2223,"title":{},"body":{"index.html":{}}}],["trippin",{"_index":2147,"title":{},"body":{"index.html":{}}}],["trippinconfig",{"_index":2225,"title":{},"body":{"index.html":{}}}],["trippinmodule",{"_index":2246,"title":{},"body":{"index.html":{}}}],["trips",{"_index":2183,"title":{},"body":{"index.html":{}}}],["true",{"_index":1199,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["try",{"_index":566,"title":{},"body":{"classes/Field.html":{}}}],["tslib",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlKey.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlNavigationPropertyBinding.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["type.startswith(s.namespace",{"_index":1140,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["type.ts",{"_index":235,"title":{},"body":{"classes/CsdlComplexType.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlKey.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:1",{"_index":301,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:10",{"_index":294,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:12",{"_index":295,"title":{},"body":{"classes/CsdlEnumMember.html":{}}}],["type.ts:13",{"_index":296,"title":{},"body":{"classes/CsdlEnumMember.html":{}}}],["type.ts:14",{"_index":243,"title":{},"body":{"classes/CsdlComplexType.html":{}}}],["type.ts:27",{"_index":290,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:3",{"_index":304,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:30",{"_index":292,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:36",{"_index":291,"title":{},"body":{"classes/CsdlEntityType.html":{}}}],["type.ts:4",{"_index":303,"title":{},"body":{"classes/CsdlEnumType.html":{}}}],["type.ts:42",{"_index":339,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:44",{"_index":340,"title":{},"body":{"classes/CsdlKey.html":{}}}],["type.ts:48",{"_index":382,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:5",{"_index":305,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:50",{"_index":384,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:51",{"_index":383,"title":{},"body":{"classes/CsdlPropertyRef.html":{}}}],["type.ts:6",{"_index":302,"title":{},"body":{"classes/CsdlEnumType.html":{},"classes/CsdlStructuredType.html":{}}}],["type.ts:7",{"_index":439,"title":{},"body":{"classes/CsdlStructuredType.html":{}}}],["type.ts:8",{"_index":438,"title":{},"body":{"classes/CsdlStructuredType.html":{}}}],["type.ts:9",{"_index":440,"title":{},"body":{"classes/CsdlStructuredType.html":{}}}],["typealiases",{"_index":2260,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedefinition",{"_index":519,"title":{},"body":{"classes/Field.html":{}}}],["typedefinitions",{"_index":412,"title":{},"body":{"classes/CsdlSchema.html":{}}}],["typefor",{"_index":1277,"title":{},"body":{"classes/ODataEntityParser.html":{}}}],["typefor(name",{"_index":1300,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["typeof",{"_index":1147,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataPathSegments.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{}}}],["typeof(value",{"_index":1320,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["types",{"_index":54,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"modules/ODataModule.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{},"index.html":{}}}],["types.isarray(this.o[this.n",{"_index":1839,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(key",{"_index":1397,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["types.isempty(options",{"_index":1745,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isempty(this.options[key",{"_index":1811,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isempty(v",{"_index":1865,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isnullorundefined(attr",{"_index":618,"title":{},"body":{"classes/Field.html":{}}}],["types.isnullorundefined(attributes",{"_index":613,"title":{},"body":{"classes/Field.html":{}}}],["types.isnullorundefined(odataresponsecs",{"_index":834,"title":{},"body":{"classes/ODataBatch.html":{}}}],["types.isnullorundefined(response",{"_index":838,"title":{},"body":{"classes/ODataBatch.html":{}}}],["types.isnullorundefined(t",{"_index":1740,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isnullorundefined(this.changesetboundary",{"_index":157,"title":{},"body":{"classes/BatchRequest.html":{}}}],["types.isnullorundefined(this.options",{"_index":96,"title":{},"body":{"classes/BatchRequest.html":{}}}],["types.isnullorundefined(this.options.headers",{"_index":97,"title":{},"body":{"classes/BatchRequest.html":{}}}],["types.isobject(this.o[this.n",{"_index":1853,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isobject(v",{"_index":1857,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isundefined(c.name",{"_index":1912,"title":{},"body":{"classes/ODataSettings.html":{}}}],["types.isundefined(config",{"_index":1149,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{}}}],["types.isundefined(name",{"_index":1920,"title":{},"body":{"classes/ODataSettings.html":{}}}],["types.isundefined(opts",{"_index":1771,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["types.isundefined(path",{"_index":1751,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/SegmentHandler.html":{}}}],["types.isundefined(this.o[this.n",{"_index":1840,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.isundefined(this.options[name",{"_index":1824,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["types.some(type",{"_index":1923,"title":{},"body":{"classes/ODataSettings.html":{}}}],["undefined",{"_index":840,"title":{},"body":{"classes/ODataBatch.html":{},"classes/ODataModel.html":{}}}],["underlayingtype",{"_index":453,"title":{},"body":{"classes/CsdlTypeDefinition.html":{}}}],["underlyingtype",{"_index":299,"title":{},"body":{"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{}}}],["unicode",{"_index":357,"title":{},"body":{"classes/CsdlNavigationProperty.html":{},"classes/CsdlOnDelete.html":{},"classes/CsdlProperty.html":{},"classes/CsdlReferentialConstraint.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlTypeDefinition.html":{},"classes/Field.html":{}}}],["united",{"_index":2172,"title":{},"body":{"index.html":{}}}],["unnamed",{"_index":2089,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unset",{"_index":1939,"title":{},"body":{"classes/OptionHandler.html":{}}}],["unset(name",{"_index":1863,"title":{},"body":{"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["updatable",{"_index":1983,"title":{},"body":{"interfaces/Parser.html":{}}}],["update",{"_index":1413,"title":{},"body":{"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{}}}],["update(entity",{"_index":1447,"title":{},"body":{"injectables/ODataEntityService.html":{}}}],["update(options",{"_index":1551,"title":{},"body":{"classes/ODataModel.html":{}}}],["updating",{"_index":2116,"title":{},"body":{"index.html":{}}}],["uri",{"_index":327,"title":{},"body":{"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlReference.html":{},"classes/Field.html":{}}}],["url",{"_index":1964,"title":{},"body":{"interfaces/Parser.html":{}}}],["usage",{"_index":2127,"title":{},"body":{"index.html":{}}}],["use",{"_index":1111,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataModel.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"index.html":{}}}],["used",{"_index":1978,"title":{},"body":{"interfaces/Parser.html":{}}}],["usefactory",{"_index":1678,"title":{},"body":{"modules/ODataModule.html":{},"index.html":{}}}],["username",{"_index":2203,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":1677,"title":{},"body":{"modules/ODataModule.html":{}}}],["using",{"_index":2191,"title":{},"body":{"index.html":{}}}],["utils",{"_index":1102,"title":{},"body":{"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{}}}],["utils/index",{"_index":1713,"title":{},"body":{"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["utils/types",{"_index":55,"title":{},"body":{"classes/BatchRequest.html":{},"classes/Field.html":{},"classes/ODataBatch.html":{}}}],["uuid",{"_index":49,"title":{},"body":{"classes/BatchRequest.html":{},"index.html":{}}}],["uuids",{"_index":2255,"title":{},"body":{"index.html":{}}}],["uuidv4",{"_index":48,"title":{},"body":{"classes/BatchRequest.html":{}}}],["v",{"_index":1385,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"interfaces/ODataParser.html":{},"classes/ODataQueryOptions.html":{},"classes/OptionHandler.html":{}}}],["v.rel",{"_index":1598,"title":{},"body":{"classes/ODataModel.html":{}}}],["v4",{"_index":47,"title":{},"body":{"classes/BatchRequest.html":{},"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/Field.html":{},"classes/ODataAnnotations.html":{},"classes/ODataBaseService.html":{},"classes/ODataBatch.html":{},"classes/ODataCollection.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"injectables/ODataEntityService.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/ODataSettings.html":{},"classes/ODataValueAnnotations.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{},"classes/SegmentHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["value.attach(this.entities",{"_index":1654,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["value.attach(this.entities().entity(value.toentity",{"_index":1653,"title":{},"body":{"injectables/ODataModelService.html":{}}}],["value.field.collection",{"_index":1614,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.field.navigation",{"_index":1613,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.lastindexof",{"_index":680,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["value.map(v",{"_index":1305,"title":{},"body":{"classes/ODataEntityParser.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"interfaces/ODataParser.html":{}}}],["value.rel",{"_index":1618,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.substr(index",{"_index":682,"title":{},"body":{"classes/ODataAnnotations.html":{},"classes/ODataEntitiesAnnotations.html":{},"classes/ODataEntityAnnotations.html":{},"classes/ODataValueAnnotations.html":{}}}],["value.toentities",{"_index":1600,"title":{},"body":{"classes/ODataModel.html":{}}}],["value.toentity",{"_index":1599,"title":{},"body":{"classes/ODataModel.html":{}}}],["value[key",{"_index":2024,"title":{},"body":{"interfaces/Parser.html":{}}}],["value_separator",{"_index":2019,"title":{},"body":{"interfaces/Parser.html":{}}}],["values",{"_index":884,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSettings.html":{},"classes/OptionHandler.html":{},"interfaces/Parser.html":{}}}],["values.length",{"_index":967,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataSettings.html":{}}}],["values[0",{"_index":1930,"title":{},"body":{"classes/ODataSettings.html":{}}}],["var",{"_index":1586,"title":{},"body":{"classes/ODataModel.html":{}}}],["variables",{"_index":108,"title":{},"body":{"classes/BatchRequest.html":{}}}],["version",{"_index":522,"title":{},"body":{"classes/Field.html":{},"interfaces/Parser.html":{}}}],["version_4_0",{"_index":73,"title":{},"body":{"classes/BatchRequest.html":{},"interfaces/Parser.html":{}}}],["void",{"_index":168,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataBatch.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEntityParser.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataEnumParser.html":{},"classes/ODataFieldParser.html":{},"classes/ODataModel.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"classes/OptionHandler.html":{},"classes/SegmentHandler.html":{}}}],["withcount",{"_index":978,"title":{},"body":{"classes/ODataCollection.html":{}}}],["withcredentials",{"_index":143,"title":{},"body":{"classes/BatchRequest.html":{},"classes/ODataConfig.html":{},"classes/ODataContainer.html":{},"classes/ODataEntityConfig.html":{},"classes/ODataEnumConfig.html":{},"classes/ODataSchema.html":{},"classes/ODataServiceConfig.html":{},"interfaces/Parser.html":{}}}],["without",{"_index":1002,"title":{},"body":{"classes/ODataCollection.html":{},"classes/ODataModel.html":{}}}],["yes",{"_index":32,"title":{},"body":{"classes/BatchRequest.html":{},"classes/CsdlAction.html":{},"classes/CsdlActionImport.html":{},"classes/CsdlAnnotable.html":{},"classes/CsdlAnnotation.html":{},"classes/CsdlAnnotations.html":{},"classes/CsdlComplexType.html":{},"classes/CsdlEntityContainer.html":{},"classes/CsdlEntitySet.html":{},"classes/CsdlEntityType.html":{},"classes/CsdlEnumMember.html":{},"classes/CsdlEnumType.html":{},"classes/CsdlFunction.html":{},"classes/CsdlFunctionImport.html":{},"classes/CsdlInclude.html":{},"classes/CsdlIncludeAnnotations.html":{},"classes/CsdlNavigationProperty.html":{},"classes/CsdlParameter.html":{},"classes/CsdlProperty.html":{},"classes/CsdlPropertyRef.html":{},"classes/CsdlReference.html":{},"classes/CsdlReturnType.html":{},"classes/CsdlSchema.html":{},"classes/CsdlSingleton.html":{},"classes/CsdlStructuralProperty.html":{},"classes/CsdlStructuredType.html":{},"classes/CsdlTerm.html":{},"classes/CsdlTypeDefinition.html":{},"classes/ODataBaseService.html":{},"classes/ODataCollection.html":{},"injectables/ODataEntityService.html":{},"classes/ODataModel.html":{},"injectables/ODataModelService.html":{},"interfaces/ODataParser.html":{},"classes/ODataPathSegments.html":{},"classes/ODataQueryOptions.html":{},"injectables/ODataServiceFactory.html":{},"classes/ODataSettings.html":{},"classes/SegmentHandler.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BatchRequest.html":{"url":"classes/BatchRequest.html","title":"class - BatchRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BatchRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/requests/batch.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                BATCH_PREFIX\n                            \n                            \n                                    Static\n                                    Readonly\n                                BOUNDARY_PREFIX_SUFFIX\n                            \n                            \n                                    Static\n                                    Readonly\n                                CHANGESET_PREFIX\n                            \n                            \n                                    Public\n                                method\n                            \n                            \n                                    Public\n                                odataQuery\n                            \n                            \n                                    Public\n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeaders\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(method: RequestMethod, odataQuery: ODataResource, options?)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                  \n                                                        \n                                                                        RequestMethod\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        odataQuery\n                                                  \n                                                        \n                                                                        ODataResource\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            BATCH_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'batch_'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            BOUNDARY_PREFIX_SUFFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '--'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CHANGESET_PREFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'changeset_'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            method\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestMethod\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            odataQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            options\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:33\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHeaders\n                        \n                        \n                    \n                \n            \n            \n                \ngetHeaders(method: RequestMethod)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/requests/batch.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { v4 as uuidv4 } from 'uuid';\nimport { Observable } from 'rxjs';\n\nimport { ODataClient } from '../../client';\nimport { Types } from '../../utils/types';\nimport { ODataPathSegments, PathSegmentNames } from '../path-segments';\nimport { ODataQueryOptions } from '../query-options';\nimport { map } from 'rxjs/operators';\nimport { $BATCH, CONTENT_TYPE, APPLICATION_JSON, NEWLINE, ODATA_VERSION, ACCEPT, HTTP11, MULTIPART_MIXED, MULTIPART_MIXED_BOUNDARY, VERSION_4_0, APPLICATION_HTTP, CONTENT_TRANSFER_ENCODING, CONTENT_ID } from '../../types';\nimport { ODataResource } from '../resource';\nimport { ODataBatch } from '../responses';\nimport { HttpOptions } from '../http-options';\nimport { HttpHeaders } from '@angular/common/http';\n\nexport enum RequestMethod {\n  Get,\n  Post,\n  Put,\n  Delete,\n  Options,\n  Head,\n  Patch\n}\n\nclass BatchRequest {\n  public static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n  public static readonly BATCH_PREFIX = 'batch_';\n  public static readonly CHANGESET_PREFIX = 'changeset_';\n\n  constructor(\n    public method: RequestMethod,\n    public odataQuery: ODataResource,\n    public options?: HttpOptions & { body?: any }) { }\n\n  getHeaders(method: RequestMethod): string {\n    let res = '';\n\n    if (method === RequestMethod.Post || method === RequestMethod.Patch || method === RequestMethod.Put) {\n      res += CONTENT_TYPE + ': ' + APPLICATION_JSON + NEWLINE;\n    }\n\n    if (Types.isNullOrUndefined(this.options) || Types.isNullOrUndefined(this.options.headers)) {\n      return res;\n    }\n\n    for (const key of (this.options.headers as HttpHeaders).keys()) {\n      res += key + ': ' + (this.options.headers as HttpHeaders).getAll(key) + NEWLINE;\n    }\n\n    return res;\n  }\n}\n\nexport class ODataBatchResource extends ODataResource {\n  private static readonly BINARY = 'binary';\n\n  // VARIABLES\n  private requests: BatchRequest[];\n  private batchBoundary: string;\n  private changesetBoundary: string;\n  private changesetID: number;\n\n  constructor(service: ODataClient, segments?: ODataPathSegments, options?: ODataQueryOptions) {\n    super(service, segments, options);\n    this.requests = [];\n    this.batchBoundary = BatchRequest.BATCH_PREFIX + uuidv4();\n    this.changesetBoundary = null;\n    this.changesetID = 1;\n  }\n\n  static factory(service: ODataClient) {\n    let segments = new ODataPathSegments();\n    segments.segment(PathSegmentNames.batch, $BATCH);\n    return new ODataBatchResource(service, segments);\n  }\n\n  add(method: RequestMethod, query: ODataResource, options?: HttpOptions & { body?: any }): ODataBatchResource {\n    this.requests.push(new BatchRequest(method, query, options));\n    return this;\n  }\n\n  execute(options: HttpOptions = {}): Observable {\n\n    let headers = this.client.mergeHttpHeaders(options.headers, {\n      [ODATA_VERSION]: VERSION_4_0,\n      [CONTENT_TYPE]: MULTIPART_MIXED_BOUNDARY + this.batchBoundary,\n      [ACCEPT]: MULTIPART_MIXED\n    });\n\n    return this.client.post(this, this.getBody(), {\n      headers: headers,\n      observe: 'response',\n      params: options.params,\n      reportProgress: options.reportProgress,\n      responseType: 'text',\n      withCredentials: options.withCredentials\n    }).pipe(map(resp => new ODataBatch(resp)));\n  }\n\n  getBody(): string {\n    let res = '';\n\n    for (const request of this.requests) {\n      const method: RequestMethod = request.method;\n      const odataQuery: ODataResource = request.odataQuery;\n      const body: any = request.options.body;\n\n      // if method is GET and there is a changeset boundary open then close it\n      if (method === RequestMethod.Get && !Types.isNullOrUndefined(this.changesetBoundary)) {\n        res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + BatchRequest.BOUNDARY_PREFIX_SUFFIX + NEWLINE;\n        this.changesetBoundary = null;\n      }\n\n      // if there is no changeset boundary open then open a batch boundary\n      if (Types.isNullOrUndefined(this.changesetBoundary)) {\n        res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + NEWLINE;\n      }\n\n      // if method is not GET and there is no changeset boundary open then open a changeset boundary\n      if (method !== RequestMethod.Get) {\n        if (Types.isNullOrUndefined(this.changesetBoundary)) {\n          this.changesetBoundary = BatchRequest.CHANGESET_PREFIX + uuidv4();\n          res += CONTENT_TYPE + ': ' + MULTIPART_MIXED_BOUNDARY + this.changesetBoundary + NEWLINE;\n          res += NEWLINE;\n        }\n        res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + NEWLINE;\n      }\n\n      res += CONTENT_TYPE + ': ' + APPLICATION_HTTP + NEWLINE;\n      res += CONTENT_TRANSFER_ENCODING + ': ' + ODataBatchResource.BINARY + NEWLINE;\n\n      if (method !== RequestMethod.Get) {\n        res += CONTENT_ID + ': ' + this.changesetID++ + NEWLINE;\n      }\n\n      res += NEWLINE;\n      res += RequestMethod[method] + ' ' + odataQuery + ' ' + HTTP11 + NEWLINE;\n\n      res += request.getHeaders(method);\n\n      res += NEWLINE;\n      if (method === RequestMethod.Get || method === RequestMethod.Delete) {\n        res += NEWLINE;\n      } else {\n        res += JSON.stringify(body) + NEWLINE;\n      }\n    }\n\n    if (res.length) {\n      if (!Types.isNullOrUndefined(this.changesetBoundary)) {\n        res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.changesetBoundary + BatchRequest.BOUNDARY_PREFIX_SUFFIX + NEWLINE;\n        this.changesetBoundary = null;\n      }\n      res += BatchRequest.BOUNDARY_PREFIX_SUFFIX + this.batchBoundary + BatchRequest.BOUNDARY_PREFIX_SUFFIX;\n    }\n\n    return res;\n  }\n\n  getRequests(): BatchRequest[] {\n    return this.requests;\n  }\n\n  setBatchBoundary(batchBoundary: string): void {\n    this.batchBoundary = batchBoundary;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAction.html":{"url":"classes/CsdlAction.html","title":"class - CsdlAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                    Optional\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType?: CsdlReturnType, isBound?: boolean, entitySetPath?: string, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlActionImport.html":{"url":"classes/CsdlActionImport.html","title":"class - CsdlActionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlActionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, action: string, entitySet?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotable.html":{"url":"classes/CsdlAnnotable.html","title":"class - CsdlAnnotable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotation.html":{"url":"classes/CsdlAnnotation.html","title":"class - CsdlAnnotation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                term\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(term: string, qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            term\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlAnnotations.html":{"url":"classes/CsdlAnnotations.html","title":"class - CsdlAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                target\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(target: string, annotationList: CsdlAnnotation[], qualifier?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlComplexType.html":{"url":"classes/CsdlComplexType.html","title":"class - CsdlComplexType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlComplexType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityContainer.html":{"url":"classes/CsdlEntityContainer.html","title":"class - CsdlEntityContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actionImports\n                            \n                            \n                                    Public\n                                    Optional\n                                entitySets\n                            \n                            \n                                    Public\n                                    Optional\n                                extend\n                            \n                            \n                                    Public\n                                    Optional\n                                functionImports\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                singletons\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, extend?: string, entitySets?: CsdlEntitySet[], singletons?: CsdlSingleton[], functionImports?: CsdlFunctionImport[], actionImports?: CsdlActionImport[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        extend\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySets\n                                                  \n                                                        \n                                                                        CsdlEntitySet[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        singletons\n                                                  \n                                                        \n                                                                        CsdlSingleton[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionImports\n                                                  \n                                                        \n                                                                    CsdlFunctionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actionImports\n                                                  \n                                                        \n                                                                    CsdlActionImport[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlActionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntitySet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            extend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functionImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlFunctionImport[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            singletons\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlSingleton[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-container.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlEntitySet } from './csdl-entity-set';\nimport { CsdlSingleton } from './csdl-singleton';\nimport { CsdlFunctionImport, CsdlActionImport } from './csdl-function-action';\n\nexport class CsdlEntityContainer {\n    constructor(\n        public name: string,\n        public extend?: string,\n        public entitySets?: CsdlEntitySet[],\n        public singletons?: CsdlSingleton[],\n        public functionImports?: CsdlFunctionImport[],\n        public actionImports?: CsdlActionImport[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntitySet.html":{"url":"classes/CsdlEntitySet.html","title":"class - CsdlEntitySet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntitySet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                entityType\n                            \n                            \n                                    Public\n                                    Optional\n                                includeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBinding\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, entityType: string, navigationPropertyBinding?: CsdlNavigationPropertyBinding[], includeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBinding\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            entityType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBinding\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-entity-set.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlEntitySet {\n    constructor(\n        public name: string,\n        public entityType: string,\n        public navigationPropertyBinding?: CsdlNavigationPropertyBinding[],\n        public includeInServiceDocument?: boolean\n    ) {\n\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEntityType.html":{"url":"classes/CsdlEntityType.html","title":"class - CsdlEntityType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEntityType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuredType\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                hasStream\n                            \n                            \n                                    Public\n                                    Optional\n                                key\n                            \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, key?: CsdlKey, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean, hasStream?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        CsdlKey\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        hasStream\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            hasStream\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlKey\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuredType\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuredType:6\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumMember.html":{"url":"classes/CsdlEnumMember.html","title":"class - CsdlEnumMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, value?: number)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlEnumType.html":{"url":"classes/CsdlEnumType.html","title":"class - CsdlEnumType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlEnumType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                isFlags\n                            \n                            \n                                    Public\n                                members\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                underlyingType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, members: CsdlEnumMember[], underlyingType?: string, isFlags?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        members\n                                                  \n                                                        \n                                                                        CsdlEnumMember[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlyingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isFlags\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isFlags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumMember[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            underlyingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-enum-type.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlEnumType {\n    constructor(\n        public name: string,\n        public members: CsdlEnumMember[],\n        public underlyingType?: string,\n        public isFlags?: boolean\n    ) { }\n}\n\nexport class CsdlEnumMember {\n    constructor(\n        public name: string,\n        public value?: number\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunction.html":{"url":"classes/CsdlFunction.html","title":"class - CsdlFunction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySetPath\n                            \n                            \n                                    Public\n                                    Optional\n                                isBound\n                            \n                            \n                                    Public\n                                    Optional\n                                isComposable\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                parameters\n                            \n                            \n                                    Public\n                                returnType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, returnType: CsdlReturnType, isBound?: boolean, entitySetPath?: string, isComposable?: boolean, parameters?: CsdlParameter[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        returnType\n                                                  \n                                                        \n                                                                        CsdlReturnType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isBound\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySetPath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        isComposable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        parameters\n                                                  \n                                                        \n                                                                        CsdlParameter[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySetPath\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isBound\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isComposable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            parameters\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlParameter[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            returnType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReturnType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlFunctionImport.html":{"url":"classes/CsdlFunctionImport.html","title":"class - CsdlFunctionImport","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlFunctionImport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                entitySet\n                            \n                            \n                                    Public\n                                functionName\n                            \n                            \n                                    Public\n                                    Optional\n                                IncludeInServiceDocument\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, functionName: string, entitySet?: string, IncludeInServiceDocument?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        functionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        entitySet\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        IncludeInServiceDocument\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entitySet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            functionName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            IncludeInServiceDocument\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlInclude.html":{"url":"classes/CsdlInclude.html","title":"class - CsdlInclude","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlInclude\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                namespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlIncludeAnnotations.html":{"url":"classes/CsdlIncludeAnnotations.html","title":"class - CsdlIncludeAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlIncludeAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                qualifier\n                            \n                            \n                                    Public\n                                    Optional\n                                targetNamespace\n                            \n                            \n                                    Public\n                                termNamespace\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(termNamespace: string, qualifier?: string, targetNamespace?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        termNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        qualifier\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetNamespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            qualifier\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            targetNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            termNamespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlKey.html":{"url":"classes/CsdlKey.html","title":"class - CsdlKey","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlKey\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                propertyRefs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(propertyRefs: CsdlPropertyRef[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        propertyRefs\n                                                  \n                                                        \n                                                                    CsdlPropertyRef[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            propertyRefs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlPropertyRef[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationProperty.html":{"url":"classes/CsdlNavigationProperty.html","title":"class - CsdlNavigationProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                containsTarget\n                            \n                            \n                                    Public\n                                    Optional\n                                onDelete\n                            \n                            \n                                    Public\n                                    Optional\n                                partner\n                            \n                            \n                                    Public\n                                    Optional\n                                referentialConstraints\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, partner?: string, containsTarget?: boolean, referentialConstraints?: CsdlReferentialConstraint[], onDelete?: CsdlOnDelete)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        partner\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        containsTarget\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        referentialConstraints\n                                                  \n                                                        \n                                                                        CsdlReferentialConstraint[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        onDelete\n                                                  \n                                                        \n                                                                        CsdlOnDelete\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            containsTarget\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            onDelete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlOnDelete\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            partner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            referentialConstraints\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlReferentialConstraint[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlNavigationPropertyBinding.html":{"url":"classes/CsdlNavigationPropertyBinding.html","title":"class - CsdlNavigationPropertyBinding","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlNavigationPropertyBinding\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(path: string, target: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            target\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-navigation-property-binding.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlNavigationPropertyBinding {\n    constructor(\n        public path: string,\n        public target: string,\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlOnDelete.html":{"url":"classes/CsdlOnDelete.html","title":"class - CsdlOnDelete","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlOnDelete\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(action: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            action\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:48\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlParameter.html":{"url":"classes/CsdlParameter.html","title":"class - CsdlParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlProperty.html":{"url":"classes/CsdlProperty.html","title":"class - CsdlProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlStructuralProperty\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, defaultValue?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlStructuralProperty\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlStructuralProperty:4\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlPropertyRef.html":{"url":"classes/CsdlPropertyRef.html","title":"class - CsdlPropertyRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlPropertyRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, alias?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReference.html":{"url":"classes/CsdlReference.html","title":"class - CsdlReference","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReference\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                includeAnnotations\n                            \n                            \n                                    Public\n                                    Optional\n                                includes\n                            \n                            \n                                    Public\n                                uri\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uri: string, includes?: CsdlInclude[], includeAnnotations?: CsdlIncludeAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        includes\n                                                  \n                                                        \n                                                                        CsdlInclude[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        includeAnnotations\n                                                  \n                                                        \n                                                                    CsdlIncludeAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includeAnnotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlIncludeAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            includes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlInclude[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            uri\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-reference.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlReference extends CsdlAnnotable {\n    constructor(\n        public uri: string,\n        public includes?: CsdlInclude[],\n        public includeAnnotations?: CsdlIncludeAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlInclude {\n    constructor(\n        public namespace: string,\n        public alias?: string\n    ) { }\n}\n\nexport class CsdlIncludeAnnotations {\n    constructor(\n        public termNamespace: string,\n        public qualifier?: string,\n        public targetNamespace?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReferentialConstraint.html":{"url":"classes/CsdlReferentialConstraint.html","title":"class - CsdlReferentialConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReferentialConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                referencedProperty\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, referencedProperty: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        referencedProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            referencedProperty\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlReturnType.html":{"url":"classes/CsdlReturnType.html","title":"class - CsdlReturnType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlReturnType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-function-action.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlFunction {\n    constructor(\n        public name: string,\n        public returnType: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public isComposable?: boolean,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlAction {\n    constructor(\n        public name: string,\n        public returnType?: CsdlReturnType,\n        public isBound?: boolean,\n        public entitySetPath?: string,\n        public parameters?: CsdlParameter[]\n    ) { }\n}\n\nexport class CsdlFunctionImport {\n    constructor(\n        public name: string,\n        public functionName: string,\n        public entitySet?: string,\n        public IncludeInServiceDocument?: boolean\n    ) { }\n}\n\nexport class CsdlActionImport {\n    constructor(\n        public name: string,\n        public action: string,\n        public entitySet?: string\n    ) { }\n}\n\nexport class CsdlParameter {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\nexport class CsdlReturnType {\n    constructor(\n        public type: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSchema.html":{"url":"classes/CsdlSchema.html","title":"class - CsdlSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                actions\n                            \n                            \n                                    Public\n                                    Optional\n                                alias\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationsList\n                            \n                            \n                                    Public\n                                    Optional\n                                complexTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                entityContainer\n                            \n                            \n                                    Public\n                                    Optional\n                                entityTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                enumTypes\n                            \n                            \n                                    Public\n                                    Optional\n                                functions\n                            \n                            \n                                    Public\n                                namespace\n                            \n                            \n                                    Public\n                                    Optional\n                                terms\n                            \n                            \n                                    Public\n                                    Optional\n                                typeDefinitions\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(namespace: string, alias?: string, enumTypes?: CsdlEnumType[], complexTypes?: CsdlComplexType[], entityTypes?: CsdlEntityType[], functions?: CsdlFunction[], actions?: CsdlAction[], entityContainer?: CsdlEntityContainer, typeDefinitions?: CsdlTypeDefinition[], terms?: CsdlTerm[], annotationsList?: CsdlAnnotations[], annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alias\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        enumTypes\n                                                  \n                                                        \n                                                                        CsdlEnumType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexTypes\n                                                  \n                                                        \n                                                                        CsdlComplexType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityTypes\n                                                  \n                                                        \n                                                                        CsdlEntityType[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        functions\n                                                  \n                                                        \n                                                                        CsdlFunction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions\n                                                  \n                                                        \n                                                                        CsdlAction[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        entityContainer\n                                                  \n                                                        \n                                                                        CsdlEntityContainer\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeDefinitions\n                                                  \n                                                        \n                                                                        CsdlTypeDefinition[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        terms\n                                                  \n                                                        \n                                                                        CsdlTerm[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationsList\n                                                  \n                                                        \n                                                                    CsdlAnnotations[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            actions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            alias\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlAnnotations[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            complexTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlComplexType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            entityTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEntityType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            enumTypes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlEnumType[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlFunction[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            terms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTerm[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            typeDefinitions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlTypeDefinition[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotation, CsdlAnnotable, CsdlTerm, CsdlAnnotations } from './csdl-annotation';\nimport { CsdlTypeDefinition } from './csdl-type-definition';\nimport { CsdlEnumType } from './csdl-enum-type';\nimport { CsdlEntityType, CsdlComplexType } from './csdl-structured-type';\nimport { CsdlFunction, CsdlAction } from './csdl-function-action';\nimport { CsdlEntityContainer } from './csdl-entity-container';\n\nexport class CsdlSchema extends CsdlAnnotable {\n    constructor(\n        public namespace: string,\n        public alias?: string,\n        public enumTypes?: CsdlEnumType[],\n        public complexTypes?: CsdlComplexType[],\n        public entityTypes?: CsdlEntityType[],\n        public functions?: CsdlFunction[],\n        public actions?: CsdlAction[],\n        public entityContainer?: CsdlEntityContainer,\n        public typeDefinitions?: CsdlTypeDefinition[],\n        public terms?: CsdlTerm[],\n        public annotationsList?: CsdlAnnotations[],\n        annotationList?: CsdlAnnotation[]\n    ) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlSingleton.html":{"url":"classes/CsdlSingleton.html","title":"class - CsdlSingleton","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlSingleton\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationPropertyBindings\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, navigationPropertyBindings?: CsdlNavigationPropertyBinding[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationPropertyBindings\n                                                  \n                                                        \n                                                                    CsdlNavigationPropertyBinding[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationPropertyBindings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CsdlNavigationPropertyBinding[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-singleton.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlNavigationPropertyBinding } from './csdl-navigation-property-binding';\n\nexport class CsdlSingleton {\n    constructor(\n        public name: string,\n        public type: string,\n        public navigationPropertyBindings?: CsdlNavigationPropertyBinding[]\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuralProperty.html":{"url":"classes/CsdlStructuralProperty.html","title":"class - CsdlStructuralProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuralProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, nullable?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structural-property.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class CsdlStructuralProperty {\n    constructor(\n        public name: string,\n        public type: string,\n        public nullable?: boolean\n    ) { }\n}\n\nexport class CsdlProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        public defaultValue?: string\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlNavigationProperty extends CsdlStructuralProperty {\n    constructor(\n        name: string,\n        type: string,\n        nullable?: boolean,\n        public partner?: string,\n        public containsTarget?: boolean,\n        public referentialConstraints?: CsdlReferentialConstraint[],\n        public onDelete?: CsdlOnDelete,\n    ) {\n        super(name, type, nullable);\n    }\n}\n\nexport class CsdlReferentialConstraint {\n    constructor(\n        public property: string,\n        public referencedProperty: string\n    ) { }\n}\n\nexport class CsdlOnDelete {\n    constructor(\n        public action: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlStructuredType.html":{"url":"classes/CsdlStructuredType.html","title":"class - CsdlStructuredType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlStructuredType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                abstract\n                            \n                            \n                                    Public\n                                    Optional\n                                baseType\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                navigationProperties\n                            \n                            \n                                    Public\n                                    Optional\n                                openType\n                            \n                            \n                                    Public\n                                    Optional\n                                properties\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, properties?: CsdlProperty[], navigationProperties?: CsdlNavigationProperty[], baseType?: string, openType?: boolean, abstract?: boolean)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        properties\n                                                  \n                                                        \n                                                                        CsdlProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        navigationProperties\n                                                  \n                                                        \n                                                                        CsdlNavigationProperty[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        openType\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        abstract\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            abstract\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            navigationProperties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlNavigationProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            openType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlProperty[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-structured-type.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlProperty, CsdlNavigationProperty } from './csdl-structural-property';\n\nexport class CsdlStructuredType {\n    constructor(\n        public name: string,\n        public properties?: CsdlProperty[],\n        public navigationProperties?: CsdlNavigationProperty[],\n        public baseType?: string,\n        public openType?: boolean,\n        public abstract?: boolean\n    ) { }\n}\n\nexport class CsdlComplexType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlEntityType extends CsdlStructuredType {\n    constructor(\n        name: string,\n        public key?: CsdlKey,\n        properties?: CsdlProperty[],\n        navigationProperties?: CsdlNavigationProperty[],\n        baseType?: string,\n        openType?: boolean,\n        abstract?: boolean,\n        public hasStream?: boolean\n    ) {\n        super(name, properties, navigationProperties, baseType, openType, abstract);\n    }\n}\n\nexport class CsdlKey {\n    constructor(\n        public propertyRefs: CsdlPropertyRef[],\n    ) { }\n}\n\nexport class CsdlPropertyRef {\n    constructor(\n        public name: string,\n        public alias?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTerm.html":{"url":"classes/CsdlTerm.html","title":"class - CsdlTerm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTerm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                appliesTo\n                            \n                            \n                                    Public\n                                    Optional\n                                baseTerm\n                            \n                            \n                                    Public\n                                    Optional\n                                defaultValue\n                            \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                nullable\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, type: string, baseTerm?: string, defaultValue?: string, appliesTo?: string, nullable?: boolean, maxLength?: number, precision?: number, scale?: number, srid?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        baseTerm\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultValue\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        appliesTo\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        nullable\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            appliesTo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            baseTerm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            defaultValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-annotation.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CsdlAnnotable {\n    constructor(public annotationList?: CsdlAnnotation[]) { }\n}\n\nexport class CsdlAnnotations extends CsdlAnnotable {\n    constructor(\n        public target: string,\n        annotationList: CsdlAnnotation[],\n        public qualifier?: string\n    ) {\n        super(annotationList);\n    }\n}\n\nexport class CsdlAnnotation {\n    constructor(\n        public term: string,\n        public qualifier?: string\n    ) { }\n}\n\nexport class CsdlTerm {\n    constructor(\n        public name: string,\n        public type: string,\n        public baseTerm?: string,\n        public defaultValue?: string,\n        public appliesTo?: string,\n        public nullable?: boolean,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public srid?: string\n    ) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsdlTypeDefinition.html":{"url":"classes/CsdlTypeDefinition.html","title":"class - CsdlTypeDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsdlTypeDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts\n        \n\n\n            \n                Extends\n            \n            \n                        CsdlAnnotable\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                maxLength\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                    Optional\n                                precision\n                            \n                            \n                                    Public\n                                    Optional\n                                scale\n                            \n                            \n                                    Public\n                                    Optional\n                                srid\n                            \n                            \n                                    Public\n                                underlayingType\n                            \n                            \n                                    Public\n                                    Optional\n                                unicode\n                            \n                            \n                                    Public\n                                    Optional\n                                annotationList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, underlayingType: string, maxLength?: number, precision?: number, scale?: number, unicode?: boolean, srid?: string, annotationList?: CsdlAnnotation[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        underlayingType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        scale\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        unicode\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        srid\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        annotationList\n                                                  \n                                                        \n                                                                        CsdlAnnotation[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            precision\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            scale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            srid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            underlayingType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            unicode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/csdl/csdl-type-definition.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            annotationList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CsdlAnnotation[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         CsdlAnnotable\n\n                                \n                            \n                        \n                            \n                                    Defined in         CsdlAnnotable:2\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlAnnotable, CsdlAnnotation } from './csdl-annotation';\n\nexport class CsdlTypeDefinition extends CsdlAnnotable {\n    constructor(\n        public name: string,\n        public underlayingType: string,\n        public maxLength?: number,\n        public precision?: number,\n        public scale?: number,\n        public unicode?: boolean,\n        public srid?: string,\n        annotationList?: CsdlAnnotation[]) {\n        super(annotationList);\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/metadata.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldType\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, fieldType: FieldType)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fieldType\n                                                  \n                                                        \n                                                                        FieldType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FieldType\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/metadata.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CsdlTypeDefinition } from './csdl/csdl-type-definition';\nimport { CsdlSchema } from './csdl/csdl-schema';\nimport { Types } from '../../utils/types';\nimport { CsdlEnumType, CsdlEnumMember } from './csdl/csdl-enum-type';\nimport { CsdlEntityType, CsdlPropertyRef, CsdlKey, CsdlComplexType } from './csdl/csdl-structured-type';\nimport { CsdlFunction, CsdlParameter, CsdlFunctionImport, CsdlActionImport, CsdlReturnType, CsdlAction } from './csdl/csdl-function-action';\nimport { CsdlProperty, CsdlNavigationProperty, CsdlReferentialConstraint, CsdlOnDelete } from './csdl/csdl-structural-property';\nimport { CsdlEntitySet } from './csdl/csdl-entity-set';\nimport { CsdlSingleton } from './csdl/csdl-singleton';\nimport { CsdlEntityContainer } from './csdl/csdl-entity-container';\nimport { CsdlReference, CsdlInclude, CsdlIncludeAnnotations } from './csdl/csdl-reference';\nimport { CsdlAnnotation, CsdlTerm, CsdlAnnotations } from './csdl/csdl-annotation';\nimport { CsdlNavigationPropertyBinding } from './csdl/csdl-navigation-property-binding';\n\nenum FieldType {\n    ATTRIBUTE, TAG\n}\n\nclass Field {\n    constructor(public name: string, public fieldType: FieldType) { }\n}\n\nexport class ODataMetadata {\n    // TAGS\n    private static readonly TAG_EDMX = 'edmx:Edmx';\n    private static readonly TAG_DATA_SERVICES = 'edmx:DataServices';\n    private static readonly TAG_REFERENCE = 'edmx:Reference';\n    private static readonly TAG_INCLUDE = 'edmx:Include';\n    private static readonly TAG_INCLUDE_ANNOTATIONS = 'edmx:IncludeAnnotations';\n    private static readonly TAG_TERM = 'Term';\n    private static readonly TAG_ANNOTATIONS = 'Annotations';\n    private static readonly TAG_ANNOTATION = 'Annotation';\n    private static readonly TAG_SCHEMA = 'Schema';\n    private static readonly TAG_ENUM_TYPE = 'EnumType';\n    private static readonly TAG_MEMBER = 'Member';\n    private static readonly TAG_COMPLEX_TYPE = 'ComplexType';\n    private static readonly TAG_ENTITY_TYPE = 'EntityType';\n    private static readonly TAG_PROPERTY = 'Property';\n    private static readonly TAG_KEY = 'Key';\n    private static readonly TAG_PROPERTY_REF = 'PropertyRef';\n    private static readonly TAG_NAVIGATION_PROPERTY = 'NavigationProperty';\n    private static readonly TAG_REFERENTIAL_CONSTRAINT = 'ReferentialConstraint';\n    private static readonly TAG_ON_DELETE = 'OnDelete';\n    private static readonly TAG_FUNCTION = 'Function';\n    private static readonly TAG_RETURN_TYPE = 'ReturnType';\n    private static readonly TAG_PARAMETER = 'Parameter';\n    private static readonly TAG_ACTION = 'Action';\n    private static readonly TAG_ENTITY_CONTAINER = 'EntityContainer';\n    private static readonly TAG_ENTITY_SET = 'EntitySet';\n    private static readonly TAG_SINGLETON = 'Singleton';\n    private static readonly TAG_FUNCTION_IMPORT = 'FunctionImport';\n    private static readonly TAG_ACTION_IMPORT = 'ActionImport';\n    private static readonly TAG_NAVIGATION_PROPERTY_BINDING = 'NavigationPropertyBinding';\n    private static readonly TAG_TYPE_DEFINITION = 'TypeDefinition';\n\n    // ATTRIBUTES\n    private static readonly ATTRIBUTE_VERSION = 'Version';\n    private static readonly ATTRIBUTE_URI = 'Uri';\n    private static readonly ATTRIBUTE_ALIAS = 'Alias';\n    private static readonly ATTRIBUTE_NAMESPACE = 'Namespace';\n    private static readonly ATTRIBUTE_TERM_NAMESPACE = 'TermNamespace';\n    private static readonly ATTRIBUTE_QUALIFIER = 'Qualifier';\n    private static readonly ATTRIBUTE_TARGET_NAMESPACE = 'TargetNamespace';\n    private static readonly ATTRIBUTE_TERM = 'Term';\n    private static readonly ATTRIBUTE_NAME = 'Name';\n    private static readonly ATTRIBUTE_VALUE = 'Value';\n    private static readonly ATTRIBUTE_BASE_TYPE = 'BaseType';\n    private static readonly ATTRIBUTE_OPEN_TYPE = 'OpenType';\n    private static readonly ATTRIBUTE_TYPE = 'Type';\n    private static readonly ATTRIBUTE_NULLABLE = 'Nullable';\n    private static readonly ATTRIBUTE_MAX_LENGTH = 'MaxLength';\n    private static readonly ATTRIBUTE_PRECISION = 'Precision';\n    private static readonly ATTRIBUTE_SCALE = 'Scale';\n    private static readonly ATTRIBUTE_UNICODE = 'Unicode';\n    private static readonly ATTRIBUTE_SRID = 'SRID';\n    private static readonly ATTRIBUTE_DEFAULT_VALUE = 'DefaultValue';\n    private static readonly ATTRIBUTE_PARTNER = 'Partner';\n    private static readonly ATTRIBUTE_PROPERTY = 'Property';\n    private static readonly ATTRIBUTE_REFERENCED_PROPERTY = 'ReferencedProperty';\n    private static readonly ATTRIBUTE_HAS_STREAM = 'HasStream';\n    private static readonly ATTRIBUTE_CONTAINS_TARGET = 'ContainsTarget';\n    private static readonly ATTRIBUTE_IS_BOUND = 'IsBound';\n    private static readonly ATTRIBUTE_ENTITY_SET_PATH = 'EntitySetPath';\n    private static readonly ATTRIBUTE_IS_COMPOSABLE = 'IsComposable';\n    private static readonly ATTRIBUTE_ENTITY_TYPE = 'EntityType';\n    private static readonly ATTRIBUTE_PATH = 'Path';\n    private static readonly ATTRIBUTE_TARGET = 'Target';\n    private static readonly ATTRIBUTE_FUNCTION = 'Function';\n    private static readonly ATTRIBUTE_ACTION = 'Action';\n    private static readonly ATTRIBUTE_ENTITY_SET = 'EntitySet';\n    private static readonly ATTRIBUTE_INCLUDE_IN_SERVICE_DOCUMENT = 'IncludeInServiceDocument';\n    private static readonly ATTRIBUTE_ABSTRACT = 'Abstract';\n    private static readonly ATTRIBUTE_UNDERLYING_TYPE = 'UnderlyingType';\n    private static readonly ATTRIBUTE_IS_FLAGS = 'IsFlags';\n    private static readonly ATTRIBUTE_EXTENDS = 'Extends';\n    private static readonly ATTRIBUTE_BASE_TERM = 'BaseTerm';\n    private static readonly ATTRIBUTE_APPLIES_TO = 'AppliesTo';\n\n    public readonly version: string;\n    public readonly references: CsdlReference[];\n    public readonly schemas: CsdlSchema[];\n\n    constructor(xml: string) {\n        try {\n            const parser: DOMParser = new DOMParser();\n            const document: Document = parser.parseFromString(xml, 'text/xml');\n\n            this.checkVersion(document);\n\n            this.version = this.getFieldValueByAttribute(\n                new Field(ODataMetadata.ATTRIBUTE_VERSION, FieldType.ATTRIBUTE),\n                document.documentElement.attributes);\n\n            this.references = this.getObjects(document.documentElement, ODataMetadata.TAG_REFERENCE, [\n                new Field(ODataMetadata.ATTRIBUTE_URI, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_INCLUDE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_INCLUDE_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n\n            const dataServices: Element = document.documentElement.getElementsByTagName(ODataMetadata.TAG_DATA_SERVICES)[0];\n            this.schemas = this.getObjects(dataServices, ODataMetadata.TAG_SCHEMA, [\n                new Field(ODataMetadata.ATTRIBUTE_NAMESPACE, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.ATTRIBUTE_ALIAS, FieldType.ATTRIBUTE),\n                new Field(ODataMetadata.TAG_ENUM_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_COMPLEX_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_TYPE, FieldType.TAG),\n                new Field(ODataMetadata.TAG_FUNCTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ACTION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ENTITY_CONTAINER, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TYPE_DEFINITION, FieldType.TAG),\n                new Field(ODataMetadata.TAG_TERM, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATIONS, FieldType.TAG),\n                new Field(ODataMetadata.TAG_ANNOTATION, FieldType.TAG)\n            ]);\n        } catch (error) {\n            throw new Error('Unable to parse metadata, ' + error);\n        }\n    }\n\n    protected checkVersion(document: Document) {\n        // check version\n        const attributes: NamedNodeMap = document.documentElement.attributes;\n        if (Types.isNullOrUndefined(attributes)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const attr: Attr = attributes.getNamedItem('Version');\n        if (Types.isNullOrUndefined(attr)) {\n            throw new Error('OData version is not specified in the metadata');\n        }\n        const odataVersion: string = attr.nodeValue;\n        if (odataVersion !== '4.0') {\n            throw new Error('OData version \"' + odataVersion + '\" is not supported');\n        }\n    }\n\n    protected getObjects(parentElement: Element, tag: string, fieldNames: Field[]): any[] {\n        let objects: any[];\n\n        const children: HTMLCollection = parentElement.children;\n        for (let index = 0; index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataAnnotations.html":{"url":"classes/ODataAnnotations.html","title":"class - ODataAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _properties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    context\n                                \n                                \n                                    functions\n                                \n                                \n                                    properties\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:55\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        context\n                    \n                \n\n                \n                    \n                        getcontext()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:30\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        functions\n                    \n                \n\n                \n                    \n                        getfunctions()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:46\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        properties\n                    \n                \n\n                \n                    \n                        getproperties()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:56\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { \n  ODATA_ETAG, \n  ODATA_COUNT, \n  ODATA_NEXTLINK, \n  ODATA_TYPE, \n  ODATA_DELTALINK, \n  ODATA_METADATAETAG, \n  ODATA_MEDIA_EDITLINK, \n  ODATA_MEDIA_ETAG, \n  ODATA_MEDIA_READLINK, \n  ODATA_MEDIA_CONTENTTYPE, \n  ODATA_CONTEXT, \n  ODATA_ID, \n  ODATA_READLINK, \n  ODATA_EDITLINK, \n  ODATA_FUNCTION_PREFIX, \n  ODATA_ANNOTATION_PREFIX,\n  odataAnnotations\n} from '../../types';\n\nexport class ODataAnnotations {\n  constructor(protected value: { [name: string]: any }) { }\n\n  static factory(data: any) {\n    return new ODataAnnotations(odataAnnotations(data));\n  }\n\n  // Context\n  private _context: any;\n  get context(): { set: string, type: string | null } {\n    if (!this._context) {\n      this._context = {};\n      if (ODATA_CONTEXT in this.value) {\n        let value = this.value[ODATA_CONTEXT];\n        let index = value.lastIndexOf(\"#\");\n        let parts = value.substr(index + 1).split(\"/\");\n        let set = parts[0];\n        let type = parts.length > 3 ? parts[1] : null;\n        this._context = { set, type };\n      }\n    }\n    return this._context;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = Object.keys(this.value)\n        .filter(k => k.startsWith(ODATA_FUNCTION_PREFIX))\n        .reduce((acc, key) => Object.assign(acc, { [key.substr(1)]: this.value[key] }), {});\n    }\n    return this._functions;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = Object.keys(this.value)\n        .filter(k => k.indexOf(ODATA_ANNOTATION_PREFIX) > 0)\n        .reduce((acc, key) => {\n          let name = key.substr(0, key.indexOf(ODATA_ANNOTATION_PREFIX));\n          if (!(name in acc)) {\n            acc[name] = {};\n          }\n          Object.assign(acc[name], { [key.substr(key.indexOf(ODATA_ANNOTATION_PREFIX))]: this.value[key] });\n          return acc;\n        }, {});\n    }\n    return this._properties;\n  }\n\n  // Method\n  clone(): ODataAnnotations {\n    return new ODataAnnotations(this.value);\n  };\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n\n}\n\nexport class ODataValueAnnotations extends ODataAnnotations {\n  clone(): ODataValueAnnotations {\n    return new ODataValueAnnotations(this.value);\n  };\n\n  static factory(data: any) {\n    return new ODataValueAnnotations(odataAnnotations(data));\n  }\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(this.value);\n  };\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n\n  get id() {\n    if (ODATA_ID in this.value)\n      return this.value[ODATA_ID] as string;\n  }\n\n  get etag() {\n    if (ODATA_ETAG in this.value)\n      return this.value[ODATA_ETAG] as string;\n  }\n\n  get mediaEtag(): string {\n    if (ODATA_MEDIA_ETAG in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_ETAG] as string);\n  }\n\n  get metadataEtag() {\n    if (ODATA_METADATAETAG in this.value)\n      return this.value[ODATA_METADATAETAG] as string;\n  }\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get editLink(): string {\n    if (ODATA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_EDITLINK] as string);\n  }\n\n  get mediaReadLink(): string {\n    if (ODATA_MEDIA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_READLINK] as string);\n  }\n\n  get mediaEditLink(): string {\n    if (ODATA_MEDIA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_EDITLINK] as string);\n  }\n\n  get mediaContentType(): string {\n    if (ODATA_MEDIA_CONTENTTYPE in this.value)\n      return this.value[ODATA_MEDIA_CONTENTTYPE] as string;\n  }\n\n  static factory(data: any) {\n    return new ODataEntityAnnotations(odataAnnotations(data));\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(this.value);\n  };\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get count(): number {\n    if (ODATA_COUNT in this.value)\n      return this.value[ODATA_COUNT] as number;\n  }\n\n  get nextLink(): string {\n    if (ODATA_NEXTLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_NEXTLINK] as string);\n  }\n\n  get deltaLink(): string {\n    if (ODATA_DELTALINK in this.value)\n      return decodeURIComponent(this.value[ODATA_DELTALINK] as string);\n  }\n\n  get top(): number {\n    let match = (this.nextLink || \"\").match(/\\$top=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skip(): number {\n    let match = (this.nextLink || \"\").match(/\\$skip=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skiptoken(): string {\n    let match = (this.nextLink || \"\").match(/\\$skiptoken=([\\d\\w\\s]+)/);\n    if (match) return match[1];\n  }\n\n  static factory(data: any) {\n    return new ODataEntitiesAnnotations(odataAnnotations(data));\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBaseService.html":{"url":"classes/ODataBaseService.html","title":"class - ODataBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entity\n                            \n                            \n                                    Static\n                                path\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/base.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/services/base.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/services/base.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/services/base.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            config\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    config()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/base.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntitySetResource, ODataEntityResource } from '../resources';\nimport { ODataClient } from \"../client\";\nimport { EntityKey } from '../types';\n\nexport class ODataBaseService {\n  static path: string = \"\";\n  static type: string = \"\";\n  static entity: string = \"\";\n\n  constructor(protected client: ODataClient) { }\n\n  // Build resources\n  public entities(): ODataEntitySetResource {\n    let Ctor = this.constructor;\n    return this.client.entitySet(Ctor.path, Ctor.entity);\n  }\n\n  public entity(key?: EntityKey): ODataEntityResource {\n    return this.entities()\n      .entity(key);\n  }\n\n  // Get base type data\n  public config() {\n    let Ctor = this.constructor;\n    return this.client.serviceConfigForType(Ctor.type);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataBatch.html":{"url":"classes/ODataBatch.html","title":"class - ODataBatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataBatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/batch.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                BOUNDARY_PREFIX_SUFFIX\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                CONTENT_ID\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                CONTENT_TYPE\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                HTTP11\n                            \n                            \n                                    Private\n                                httpResponse\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                MULTIPART_MIXED\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                NEWLINE\n                            \n                            \n                                    Private\n                                odataResponses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createODataResponse\n                            \n                            \n                                    Static\n                                fromODataResponse\n                            \n                            \n                                    Protected\n                                getBoundaryDelimiter\n                            \n                            \n                                    Protected\n                                getBoundaryEnd\n                            \n                            \n                                    Protected\n                                getHeaderValue\n                            \n                            \n                                getODataResponses\n                            \n                            \n                                    Protected\n                                parseResponses\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpResponse: HttpResponse)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpResponse\n                                                  \n                                                        \n                                                                    HttpResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            BOUNDARY_PREFIX_SUFFIX\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '--'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            CONTENT_ID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Content-ID'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            CONTENT_TYPE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Content-Type'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            HTTP11\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'HTTP/1.1'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpResponse\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HttpResponse\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            MULTIPART_MIXED\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'multipart/mixed'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            NEWLINE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '\\r\\n'\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            odataResponses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HttpResponse[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createODataResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createODataResponse(batchBodyLines: string[], batchPartStartIndex: number, batchPartEndIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    batchBodyLines\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    batchPartStartIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    batchPartEndIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HttpResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            fromODataResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fromODataResponse(odataResponse: HttpResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    odataResponse\n                                    \n                                            HttpResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataBatch\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getBoundaryDelimiter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoundaryDelimiter(contentType: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getBoundaryEnd\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBoundaryEnd(boundaryDelimiter: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    boundaryDelimiter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getHeaderValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeaderValue(header: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    header\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getODataResponses\n                        \n                        \n                    \n                \n            \n            \n                \ngetODataResponses()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     HttpResponse[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parseResponses\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parseResponses()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/batch.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpHeaders, HttpResponse } from '@angular/common/http';\n\nimport { Types } from '../../utils/types';\n\nexport class ODataBatch {\n    private static readonly CONTENT_TYPE = 'Content-Type';\n    private static readonly CONTENT_ID = 'Content-ID';\n    private static readonly HTTP11 = 'HTTP/1.1';\n    private static readonly BOUNDARY_PREFIX_SUFFIX = '--';\n    private static readonly NEWLINE = '\\r\\n';\n    private static readonly MULTIPART_MIXED = 'multipart/mixed';\n\n    private httpResponse: HttpResponse;\n    private odataResponses: HttpResponse[];\n\n    constructor(httpResponse: HttpResponse) {\n        this.httpResponse = httpResponse;\n        this.odataResponses = [];\n        this.parseResponses();\n    }\n\n    getODataResponses(): HttpResponse[] {\n        return this.odataResponses;\n    }\n\n    static fromODataResponse(odataResponse: HttpResponse): ODataBatch {\n        return new ODataBatch(odataResponse);\n    }\n\n    protected parseResponses(): void {\n        const contentType: string = this.httpResponse.headers.get(ODataBatch.CONTENT_TYPE);\n        const boundaryDelimiterBatch: string = this.getBoundaryDelimiter(contentType);\n        const boundaryEndBatch: string = this.getBoundaryEnd(boundaryDelimiterBatch);\n\n        const batchBody: string = this.httpResponse.body;\n        const batchBodyLines: string[] = batchBody.split(ODataBatch.NEWLINE);\n\n        let odataResponseCS: HttpResponse[];\n        let contentId: number;\n        let boundaryDelimiterCS;\n        let boundaryEndCS;\n        let batchPartStartIndex;\n        for (let index = 0; index  = this.createODataResponse(batchBodyLines, batchPartStartIndex, index - 1);\n                if (!Types.isNullOrUndefined(odataResponseCS)) {\n                    odataResponseCS[contentId] = odataResponse;\n                } else {\n                    this.odataResponses.push(odataResponse);\n                }\n\n                if (batchBodyLine === boundaryDelimiterBatch || batchBodyLine === boundaryDelimiterCS) {\n                    batchPartStartIndex = index + 1;\n                } else if (batchBodyLine === boundaryEndBatch || batchBodyLine === boundaryEndCS) {\n                    if (!Types.isNullOrUndefined(odataResponseCS)) {\n                        for (const response of odataResponseCS) {\n                            if (!Types.isNullOrUndefined(response)) {\n                                this.odataResponses.push(response);\n                            }\n                        }\n                    }\n                    odataResponseCS = undefined;\n                    boundaryDelimiterCS = undefined;\n                    boundaryEndCS = undefined;\n                    batchPartStartIndex = undefined;\n                }\n            }\n        }\n    }\n\n    protected getHeaderValue(header: string): string {\n        let res: string = header.split(';')[0].trim();\n        res = res.split(':')[1].trim();\n        return res;\n    }\n\n    protected getBoundaryDelimiter(contentType: string): string {\n        const contentTypeParts: string[] = contentType.split(';');\n        if (contentTypeParts.length === 2) {\n            const boundary: string = contentType.split(';')[1].trim();\n            const boundaryDelimiter: string = ODataBatch.BOUNDARY_PREFIX_SUFFIX + boundary.split('=')[1];\n            return boundaryDelimiter;\n        } else {\n            return '';\n        }\n    }\n\n    protected getBoundaryEnd(boundaryDelimiter: string): string {\n        if (!boundaryDelimiter.length) {\n            return '';\n        }\n        const boundaryEnd: string = boundaryDelimiter + ODataBatch.BOUNDARY_PREFIX_SUFFIX;\n        return boundaryEnd;\n    }\n\n    protected createODataResponse(batchBodyLines: string[], batchPartStartIndex: number, batchPartEndIndex: number): HttpResponse {\n        let index: number = batchPartStartIndex;\n        const statusLine: string = batchBodyLines[index];\n        const statusLineParts: string[] = batchBodyLines[index].split(' ');\n        const status: string = statusLineParts[1];\n        const statusTextIndex = statusLine.indexOf(status) + status.length + 1;\n        const statusText: string = statusLine.substring(statusTextIndex);\n\n        let httpHeaders: HttpHeaders = new HttpHeaders();\n        for (++index; index \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataCollection.html":{"url":"classes/ODataCollection.html","title":"class - ODataCollection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataCollection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/collection.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Iterable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _annotations\n                            \n                            \n                                    Protected\n                                _models\n                            \n                            \n                                    Protected\n                                _resource\n                            \n                            \n                                    Private\n                                _state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                all\n                            \n                            \n                                attach\n                            \n                            \n                                clone\n                            \n                            \n                                count\n                            \n                            \n                                fetch\n                            \n                            \n                                next\n                            \n                            \n                                    Protected\n                                parse\n                            \n                            \n                                    Protected\n                                populate\n                            \n                            \n                                remove\n                            \n                            \n                                target\n                            \n                            \n                                toEntities\n                            \n                            \n                                    Public\n                                \n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    models\n                                \n                                \n                                    state\n                                \n                                \n                                    _segments\n                                \n                                \n                                    _query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(values?: any[], options: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/collection.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotations\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _models\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     M[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            all\n                        \n                        \n                    \n                \n            \n            \n                \nall()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable<>\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \nattach(resource: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataCollection\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            count\n                        \n                        \n                    \n                \n            \n            \n                \ncount()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            next\n                        \n                        \n                    \n                \n            \n            \n                \nnext(options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(values: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            populate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populate(values: any[], annots?: ODataAnnotations)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    annots\n                                    \n                                                ODataAnnotations\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(model: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            target\n                        \n                        \n                    \n                \n            \n            \n                \ntarget()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEntities\n                        \n                        \n                    \n                \n            \n            \n                \ntoEntities()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/collection.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { next(): any; }\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        models\n                    \n                \n\n                \n                    \n                        getmodels()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        state\n                    \n                \n\n                \n                    \n                        getstate()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:44\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _segments\n                    \n                \n\n                \n                    \n                        get_segments()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:203\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _query\n                    \n                \n\n                \n                    \n                        get_query()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/collection.ts:216\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { map } from 'rxjs/operators';\nimport { Observable, EMPTY } from 'rxjs';\n\nimport {\n  ODataResource,\n  ODataEntitySetResource,\n  ODataEntityResource,\n  ODataNavigationPropertyResource,\n  ODataFunctionResource,\n  ODataActionResource,\n  ODataAnnotations,\n  ODataEntitiesAnnotations,\n  Filter,\n  Expand,\n  Select,\n  OrderBy,\n  Transform\n} from '../resources';\n\nimport { ODataModel } from './model';\nimport {\n  HttpOptions,\n  HttpEntitiesOptions\n} from '../resources/http-options';\n\nexport class ODataCollection> implements Iterable {\n  protected _resource: ODataResource;\n  protected _annotations: ODataAnnotations;\n\n  protected _models: M[];\n  get models() {\n    return [...this._models];\n  }\n\n  private _state: {\n    records?: number,\n    skip?: number,\n    top?: number,\n    skiptoken?: string,\n    size?: number,\n    page?: number,\n    pages?: number\n  } = {};\n  get state() {\n    return Object.assign({}, this._state);\n  }\n\n  constructor(values?: any[], options: { resource?: ODataResource, annotations?: ODataAnnotations } = {}) {\n    if (options.resource instanceof ODataResource)\n      this.attach(options.resource);\n    this.populate((values || []) as M[], options.annotations || null);\n  }\n\n  attach(resource: ODataResource) {\n    if (this._resource && this._resource.type() !== resource.type())\n      throw new Error(`Can't reattach ${resource.type()} with ${this._resource.type()}`);\n    this._resource = resource;\n    return this;\n  }\n\n  target() {\n    return this._resource.clone() as ODataResource;\n  }\n\n  protected parse(values: any[]): M[] {\n    let resource = this._resource ? this._resource.clone() : null;\n    if (resource instanceof ODataEntitySetResource)\n      resource = resource.entity();\n    return (values as T[]).map(value => {\n      if (resource instanceof ODataEntityResource || resource instanceof ODataNavigationPropertyResource)\n        resource.key(value);\n      return (resource ? resource.clone().toModel(value) : value) as M;\n    });\n  }\n\n  protected populate(values: any[], annots?: ODataAnnotations): this {\n    this._annotations = annots;\n\n    if (annots instanceof ODataEntitiesAnnotations) {\n      this._state = {}; \n      if (annots.top)\n        this._state.top = annots.top;\n      if (annots.skip)\n        this._state.size = this._state.skip = annots.skip;\n      if (annots.skiptoken)\n        this._state.skiptoken = annots.skiptoken;\n      if (annots.count) {\n        this._state.records = annots.count;\n      if (this._state.records && this._state.size)\n        this._state.pages = Math.ceil(this._state.records / this._state.size);\n      if (this._state.top && this._state.size)\n        this._state.page = (this._state.top / this._state.size) + 1;\n      }\n    } else {\n      this._state = {\n        records: values.length, size: values.length,\n        page: 1, pages: 1\n      };\n    }\n\n    this._models = this.parse(values);\n    return this;\n  }\n\n  toEntities() {\n    return this._models.map(model => model.toEntity());\n  }\n\n  clone() {\n    let Ctor = this.constructor;\n    return (new Ctor(this.models, { resource: this._resource.clone(), annotations: this._annotations })) as ODataCollection>;\n  }\n\n  // Iterable\n  public [Symbol.iterator]() {\n    let pointer = 0;\n    let models = this._models;\n    return {\n      next(): IteratorResult {\n        return {\n          done: pointer === models.length,\n          value: models[pointer++]\n        };\n      }\n    }\n  }\n\n  // Requests\n  fetch(options?: HttpOptions & {withCount?: boolean}): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = this._resource.get(options);\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'entities'}, options || {}));\n    } else if (this._resource instanceof ODataFunctionResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'entities'}, options || {}));\n    }\n    if (!obs$)\n      throw new Error(\"Not Yet!\");\n    return obs$.pipe(\n      map(([entities, annots]) => this.populate(entities, annots)));\n  }\n\n  next(options?: HttpOptions & {withCount?: boolean}) {\n    if (this._state.skip) {\n      this._query.skip(this._state.skip);\n      return this.fetch(options);\n    }\n    else if (this._state.skiptoken) {\n      this._query.skiptoken(this._state.skiptoken);\n      return this.fetch(options);\n    }\n    return EMPTY;\n  }\n\n  all(): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = this._resource.all();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this._resource.all();\n    }\n    if (!obs$)\n      throw new Error(\"Not Yet!\");\n    return obs$.pipe(\n      map(entities => this.populate(entities)));\n  }\n\n  // Mutate\n  add(model: M): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = model.save();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      let ref = this._resource.reference();\n      obs$ = ref.add(model.target() as ODataEntityResource);\n    }\n    if (!obs$)\n      throw new Error(`Can't add`);\n    return obs$.pipe(map(() => this));\n  }\n\n  remove(model: M) {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntitySetResource) {\n      obs$ = model.destroy();\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      let ref = this._resource.reference();\n      obs$ = ref.remove(model.target() as ODataEntityResource);\n    }\n    if (!obs$)\n      throw new Error(`Can't remove`);\n    return obs$.pipe(map(() => this));\n  }\n\n  // Count\n  count() {\n    return (this._resource as ODataEntitySetResource).count().get();\n  }\n\n  protected get _segments() {\n    if (!this._resource)\n      throw new Error(`Can't call without ODataResource`);\n    let resource = this._resource as ODataEntitySetResource;\n    return {\n      // Function\n      function(name: string, returnType?: string): ODataFunctionResource { return resource.function(name, returnType); },\n      // Action\n      action(name: string, returnType?: string): ODataActionResource { return resource.action(name, returnType); },\n    };\n  }\n\n  // Query options\n  get _query() {\n    if (!this._resource)\n      throw new Error(`Can't query without ODataResource`);\n    let resource = this._resource as ODataEntitySetResource;\n    return {\n      // Top\n      top(top?: number) { return resource.top(top); },\n      // Skip\n      skip(skip?: number) { return resource.skip(skip); },\n      // Skiptoken\n      skiptoken(skiptoken?: string) { return resource.skiptoken(skiptoken); },\n      // Select\n      select(select?: Select) { return resource.select(select); },\n      // Filter\n      filter(filter?: Filter) { return resource.filter(filter); },\n      // Search\n      search(search?: string) { return resource.search(search); },\n      // OrderBy\n      orderBy(orderBy?: OrderBy) { return resource.orderBy(orderBy); },\n      // Expand\n      expand(expand?: Expand) { return resource.expand(expand); },\n      // Transform\n      transform(transform?: Transform) { return resource.transform(transform); },\n      // Alias value\n      alias(name: string, value?: any) { return resource.alias(name, value); }\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataConfig.html":{"url":"classes/ODataConfig.html","title":"class - ODataConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                acceptMetadata\n                            \n                            \n                                    Optional\n                                creation\n                            \n                            \n                                headers\n                            \n                            \n                                    Optional\n                                metadataUrl\n                            \n                            \n                                name\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                schemas\n                            \n                            \n                                serviceRootUrl\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                    Optional\n                                withCredentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                collectionForName\n                            \n                            \n                                    Public\n                                collectionForType\n                            \n                            \n                                configure\n                            \n                            \n                                    Public\n                                entityConfigForName\n                            \n                            \n                                    Public\n                                entityConfigForType\n                            \n                            \n                                    Public\n                                enumConfigForName\n                            \n                            \n                                    Public\n                                enumConfigForType\n                            \n                            \n                                    Public\n                                modelForName\n                            \n                            \n                                    Public\n                                modelForType\n                            \n                            \n                                    Public\n                                parserForType\n                            \n                            \n                                    Private\n                                schemaForType\n                            \n                            \n                                    Public\n                                serviceConfigForName\n                            \n                            \n                                    Public\n                                serviceConfigForType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Configuration)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Configuration\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            acceptMetadata\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"minimal\" | \"full\" | \"none\"\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            creation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            metadataUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            schemas\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceRootUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            withCredentials\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entityConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entityConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:95\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entityConfigForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entityConfigForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:90\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEnumConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumConfigForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumConfigForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEnumConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            parserForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parserForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:120\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataParser\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            schemaForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    schemaForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            serviceConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serviceConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataServiceConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            serviceConfigForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serviceConfigForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataServiceConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataContainer.html":{"url":"classes/ODataContainer.html","title":"class - ODataContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                services\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Container, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:213\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Container\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:212\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:210\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:213\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:211\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:221\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntitiesAnnotations.html":{"url":"classes/ODataEntitiesAnnotations.html","title":"class - ODataEntitiesAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntitiesAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _properties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    readLink\n                                \n                                \n                                    count\n                                \n                                \n                                    nextLink\n                                \n                                \n                                    deltaLink\n                                \n                                \n                                    top\n                                \n                                \n                                    skip\n                                \n                                \n                                    skiptoken\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:45\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:55\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitiesAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntitiesAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:73\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:81\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:169\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        count\n                    \n                \n\n                \n                    \n                        getcount()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:174\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextLink\n                    \n                \n\n                \n                    \n                        getnextLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:179\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        deltaLink\n                    \n                \n\n                \n                    \n                        getdeltaLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:184\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        top\n                    \n                \n\n                \n                    \n                        gettop()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:189\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skip\n                    \n                \n\n                \n                    \n                        getskip()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:194\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        skiptoken\n                    \n                \n\n                \n                    \n                        getskiptoken()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:199\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { \n  ODATA_ETAG, \n  ODATA_COUNT, \n  ODATA_NEXTLINK, \n  ODATA_TYPE, \n  ODATA_DELTALINK, \n  ODATA_METADATAETAG, \n  ODATA_MEDIA_EDITLINK, \n  ODATA_MEDIA_ETAG, \n  ODATA_MEDIA_READLINK, \n  ODATA_MEDIA_CONTENTTYPE, \n  ODATA_CONTEXT, \n  ODATA_ID, \n  ODATA_READLINK, \n  ODATA_EDITLINK, \n  ODATA_FUNCTION_PREFIX, \n  ODATA_ANNOTATION_PREFIX,\n  odataAnnotations\n} from '../../types';\n\nexport class ODataAnnotations {\n  constructor(protected value: { [name: string]: any }) { }\n\n  static factory(data: any) {\n    return new ODataAnnotations(odataAnnotations(data));\n  }\n\n  // Context\n  private _context: any;\n  get context(): { set: string, type: string | null } {\n    if (!this._context) {\n      this._context = {};\n      if (ODATA_CONTEXT in this.value) {\n        let value = this.value[ODATA_CONTEXT];\n        let index = value.lastIndexOf(\"#\");\n        let parts = value.substr(index + 1).split(\"/\");\n        let set = parts[0];\n        let type = parts.length > 3 ? parts[1] : null;\n        this._context = { set, type };\n      }\n    }\n    return this._context;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = Object.keys(this.value)\n        .filter(k => k.startsWith(ODATA_FUNCTION_PREFIX))\n        .reduce((acc, key) => Object.assign(acc, { [key.substr(1)]: this.value[key] }), {});\n    }\n    return this._functions;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = Object.keys(this.value)\n        .filter(k => k.indexOf(ODATA_ANNOTATION_PREFIX) > 0)\n        .reduce((acc, key) => {\n          let name = key.substr(0, key.indexOf(ODATA_ANNOTATION_PREFIX));\n          if (!(name in acc)) {\n            acc[name] = {};\n          }\n          Object.assign(acc[name], { [key.substr(key.indexOf(ODATA_ANNOTATION_PREFIX))]: this.value[key] });\n          return acc;\n        }, {});\n    }\n    return this._properties;\n  }\n\n  // Method\n  clone(): ODataAnnotations {\n    return new ODataAnnotations(this.value);\n  };\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n\n}\n\nexport class ODataValueAnnotations extends ODataAnnotations {\n  clone(): ODataValueAnnotations {\n    return new ODataValueAnnotations(this.value);\n  };\n\n  static factory(data: any) {\n    return new ODataValueAnnotations(odataAnnotations(data));\n  }\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(this.value);\n  };\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n\n  get id() {\n    if (ODATA_ID in this.value)\n      return this.value[ODATA_ID] as string;\n  }\n\n  get etag() {\n    if (ODATA_ETAG in this.value)\n      return this.value[ODATA_ETAG] as string;\n  }\n\n  get mediaEtag(): string {\n    if (ODATA_MEDIA_ETAG in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_ETAG] as string);\n  }\n\n  get metadataEtag() {\n    if (ODATA_METADATAETAG in this.value)\n      return this.value[ODATA_METADATAETAG] as string;\n  }\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get editLink(): string {\n    if (ODATA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_EDITLINK] as string);\n  }\n\n  get mediaReadLink(): string {\n    if (ODATA_MEDIA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_READLINK] as string);\n  }\n\n  get mediaEditLink(): string {\n    if (ODATA_MEDIA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_EDITLINK] as string);\n  }\n\n  get mediaContentType(): string {\n    if (ODATA_MEDIA_CONTENTTYPE in this.value)\n      return this.value[ODATA_MEDIA_CONTENTTYPE] as string;\n  }\n\n  static factory(data: any) {\n    return new ODataEntityAnnotations(odataAnnotations(data));\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(this.value);\n  };\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get count(): number {\n    if (ODATA_COUNT in this.value)\n      return this.value[ODATA_COUNT] as number;\n  }\n\n  get nextLink(): string {\n    if (ODATA_NEXTLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_NEXTLINK] as string);\n  }\n\n  get deltaLink(): string {\n    if (ODATA_DELTALINK in this.value)\n      return decodeURIComponent(this.value[ODATA_DELTALINK] as string);\n  }\n\n  get top(): number {\n    let match = (this.nextLink || \"\").match(/\\$top=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skip(): number {\n    let match = (this.nextLink || \"\").match(/\\$skip=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skiptoken(): string {\n    let match = (this.nextLink || \"\").match(/\\$skiptoken=([\\d\\w\\s]+)/);\n    if (match) return match[1];\n  }\n\n  static factory(data: any) {\n    return new ODataEntitiesAnnotations(odataAnnotations(data));\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityAnnotations.html":{"url":"classes/ODataEntityAnnotations.html","title":"class - ODataEntityAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _properties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                                \n                                    id\n                                \n                                \n                                    etag\n                                \n                                \n                                    mediaEtag\n                                \n                                \n                                    metadataEtag\n                                \n                                \n                                    readLink\n                                \n                                \n                                    editLink\n                                \n                                \n                                    mediaReadLink\n                                \n                                \n                                    mediaEditLink\n                                \n                                \n                                    mediaContentType\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:45\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:55\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntityAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:73\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:81\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:108\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:114\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        etag\n                    \n                \n\n                \n                    \n                        getetag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:119\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEtag\n                    \n                \n\n                \n                    \n                        getmediaEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:124\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        metadataEtag\n                    \n                \n\n                \n                    \n                        getmetadataEtag()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:129\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        readLink\n                    \n                \n\n                \n                    \n                        getreadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:134\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        editLink\n                    \n                \n\n                \n                    \n                        geteditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:139\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaReadLink\n                    \n                \n\n                \n                    \n                        getmediaReadLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:144\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaEditLink\n                    \n                \n\n                \n                    \n                        getmediaEditLink()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:149\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        mediaContentType\n                    \n                \n\n                \n                    \n                        getmediaContentType()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:154\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { \n  ODATA_ETAG, \n  ODATA_COUNT, \n  ODATA_NEXTLINK, \n  ODATA_TYPE, \n  ODATA_DELTALINK, \n  ODATA_METADATAETAG, \n  ODATA_MEDIA_EDITLINK, \n  ODATA_MEDIA_ETAG, \n  ODATA_MEDIA_READLINK, \n  ODATA_MEDIA_CONTENTTYPE, \n  ODATA_CONTEXT, \n  ODATA_ID, \n  ODATA_READLINK, \n  ODATA_EDITLINK, \n  ODATA_FUNCTION_PREFIX, \n  ODATA_ANNOTATION_PREFIX,\n  odataAnnotations\n} from '../../types';\n\nexport class ODataAnnotations {\n  constructor(protected value: { [name: string]: any }) { }\n\n  static factory(data: any) {\n    return new ODataAnnotations(odataAnnotations(data));\n  }\n\n  // Context\n  private _context: any;\n  get context(): { set: string, type: string | null } {\n    if (!this._context) {\n      this._context = {};\n      if (ODATA_CONTEXT in this.value) {\n        let value = this.value[ODATA_CONTEXT];\n        let index = value.lastIndexOf(\"#\");\n        let parts = value.substr(index + 1).split(\"/\");\n        let set = parts[0];\n        let type = parts.length > 3 ? parts[1] : null;\n        this._context = { set, type };\n      }\n    }\n    return this._context;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = Object.keys(this.value)\n        .filter(k => k.startsWith(ODATA_FUNCTION_PREFIX))\n        .reduce((acc, key) => Object.assign(acc, { [key.substr(1)]: this.value[key] }), {});\n    }\n    return this._functions;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = Object.keys(this.value)\n        .filter(k => k.indexOf(ODATA_ANNOTATION_PREFIX) > 0)\n        .reduce((acc, key) => {\n          let name = key.substr(0, key.indexOf(ODATA_ANNOTATION_PREFIX));\n          if (!(name in acc)) {\n            acc[name] = {};\n          }\n          Object.assign(acc[name], { [key.substr(key.indexOf(ODATA_ANNOTATION_PREFIX))]: this.value[key] });\n          return acc;\n        }, {});\n    }\n    return this._properties;\n  }\n\n  // Method\n  clone(): ODataAnnotations {\n    return new ODataAnnotations(this.value);\n  };\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n\n}\n\nexport class ODataValueAnnotations extends ODataAnnotations {\n  clone(): ODataValueAnnotations {\n    return new ODataValueAnnotations(this.value);\n  };\n\n  static factory(data: any) {\n    return new ODataValueAnnotations(odataAnnotations(data));\n  }\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(this.value);\n  };\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n\n  get id() {\n    if (ODATA_ID in this.value)\n      return this.value[ODATA_ID] as string;\n  }\n\n  get etag() {\n    if (ODATA_ETAG in this.value)\n      return this.value[ODATA_ETAG] as string;\n  }\n\n  get mediaEtag(): string {\n    if (ODATA_MEDIA_ETAG in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_ETAG] as string);\n  }\n\n  get metadataEtag() {\n    if (ODATA_METADATAETAG in this.value)\n      return this.value[ODATA_METADATAETAG] as string;\n  }\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get editLink(): string {\n    if (ODATA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_EDITLINK] as string);\n  }\n\n  get mediaReadLink(): string {\n    if (ODATA_MEDIA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_READLINK] as string);\n  }\n\n  get mediaEditLink(): string {\n    if (ODATA_MEDIA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_EDITLINK] as string);\n  }\n\n  get mediaContentType(): string {\n    if (ODATA_MEDIA_CONTENTTYPE in this.value)\n      return this.value[ODATA_MEDIA_CONTENTTYPE] as string;\n  }\n\n  static factory(data: any) {\n    return new ODataEntityAnnotations(odataAnnotations(data));\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(this.value);\n  };\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get count(): number {\n    if (ODATA_COUNT in this.value)\n      return this.value[ODATA_COUNT] as number;\n  }\n\n  get nextLink(): string {\n    if (ODATA_NEXTLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_NEXTLINK] as string);\n  }\n\n  get deltaLink(): string {\n    if (ODATA_DELTALINK in this.value)\n      return decodeURIComponent(this.value[ODATA_DELTALINK] as string);\n  }\n\n  get top(): number {\n    let match = (this.nextLink || \"\").match(/\\$top=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skip(): number {\n    let match = (this.nextLink || \"\").match(/\\$skip=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skiptoken(): string {\n    let match = (this.nextLink || \"\").match(/\\$skiptoken=([\\d\\w\\s]+)/);\n    if (match) return match[1];\n  }\n\n  static factory(data: any) {\n    return new ODataEntitiesAnnotations(odataAnnotations(data));\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityConfig.html":{"url":"classes/ODataEntityConfig.html","title":"class - ODataEntityConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                    Optional\n                                model\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                fields\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:175\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:172\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:174\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:173\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:170\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:175\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:171\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fields\n                        \n                        \n                    \n                \n            \n            \n                \nfields(opts: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {include_navigation: true, include_parents: true}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataFieldParser[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEntityParser.html":{"url":"classes/ODataEntityParser.html","title":"class - ODataEntityParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEntityParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ODataParser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base\n                            \n                            \n                                fields\n                            \n                            \n                                name\n                            \n                            \n                                parent\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                isComplex\n                            \n                            \n                                keys\n                            \n                            \n                                parse\n                            \n                            \n                                resolveKey\n                            \n                            \n                                toJSON\n                            \n                            \n                                toJsonSchema\n                            \n                            \n                                typeFor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EntityConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers.ts:167\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EntityConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:165\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataFieldParser[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:167\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:163\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEntityParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:166\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:164\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:204\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplex\n                        \n                        \n                    \n                \n            \n            \n                \nisComplex()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keys\n                        \n                        \n                    \n                \n            \n            \n                \nkeys()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:234\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(objs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Type | []\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveKey\n                        \n                        \n                    \n                \n            \n            \n                \nresolveKey(attrs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:239\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attrs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON(objs: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    objs\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(config: JsonSchemaConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            JsonSchemaConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { title: string; type: string; description: string; properties: any; required: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeFor\n                        \n                        \n                    \n                \n            \n            \n                \ntypeFor(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types, Enums } from './utils';\nimport { Parser, Field, JsonSchemaExpandOptions, JsonSchemaConfig, EntityConfig, EnumConfig } from './types';\n\nexport const PARSERS: {[name: string]: Parser} = {\n  'Date': >{\n    type: 'Date',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    },\n    toJSON(value: Date) { \n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    }\n  },\n  'number': >{\n    type: 'number',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    },\n    toJSON(value: number) { \n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    }\n  }\n};\n\nexport interface ODataParser extends Parser { \n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser});\n  toJsonSchema(options?: JsonSchemaExpandOptions);\n}\n\nexport class ODataEnumParser implements ODataParser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  stringAsEnum?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n\n  constructor(meta: EnumConfig, namespace: string) {\n    this.name = meta.name;\n    this.type = `${namespace}.${this.name}`;\n    this.flags = meta.flags;\n    this.members = meta.members;\n  }\n\n  // Deserialize\n  parse(value: any) {\n    // String to number\n    if (value === null || typeof(value) === 'number') return value;\n    return this.flags ?\n      Enums.toFlags(this.members, value) :\n      Enums.toValue(this.members, value);\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    // Number to string\n    if (value === null || typeof(value) === 'string') return value;\n    let enums = this.flags ?\n      Enums.toEnums(this.members, value) :\n      [Enums.toEnum(this.members, value)];\n    if (!this.stringAsEnum)\n      enums = enums.map(e => `${this.type}'${e}'`);\n    return enums.join(\", \");\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = Enums.keys(this.members);\n    return property;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.stringAsEnum = settings.stringAsEnum;\n  }\n}\n\nexport class ODataFieldParser implements ODataParser {\n  name: string;\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n\n  constructor(name: string, field: Field) {\n    this.name = name;\n    Object.assign(this, field);\n  }\n\n  resolve(value: any) {\n    return this.ref.split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  parse(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.parse(value) : value;\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.toJSON(value) : value;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser = (this.type in PARSERS) ? \n      PARSERS[this.type] : \n      settings.parserForType(this.type);\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = this.parser ? (this.parser as ODataParser).toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\", \n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumParser;\n  }\n\n  isEntityType() {\n    return this.parser instanceof ODataEntityParser;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplex();\n  }\n}\n\nexport class ODataEntityParser implements ODataParser {\n  name: string;\n  type: string;\n  base: string;\n  parent: ODataEntityParser;\n  fields: ODataFieldParser[];\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.type = `${namespace}.${this.name}`;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataFieldParser(name, f as Field));\n  }\n\n  // Deserialize\n  parse(objs: any): Type | Type[] {\n    if (this.parent)\n      objs = this.parent.parse(objs);\n    let _parse = (obj) =>\n      Object.assign(obj, this.fields\n        .filter(f => f.name in obj)\n        .reduce((acc, f) => Object.assign(acc, { [f.name]: f.parse(obj[f.name]) }), {})\n      );\n    return Array.isArray(objs) ?\n      objs.map(obj => _parse(obj)) :\n      _parse(objs);\n  }\n\n  // Serialize\n  toJSON(objs: any): any {\n    if (this.parent)\n      objs = this.parent.toJSON(objs);\n    let _toJSON = (obj) => Object.assign(obj, this.fields\n      .filter(f => f.name in obj)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.toJSON(obj[f.name]) }), {})\n    );\n    return Array.isArray(objs) ? \n      objs.map(obj => _toJSON(obj)) :\n      _toJSON(objs);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    if (this.base) {\n      this.parent = settings.parserForType(this.base) as ODataEntityParser;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({[f.name]: f.toJsonSchema(config[f.name])}))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string {\n    let field = this.fields.find(f => f.name === name);\n    if (field)\n      return field.type;\n    else if (this.parent) \n      return this.parent.typeFor(name);\n  }\n\n  keys() { \n    let keys = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {});\n    if (Object.keys(key).length === 1)\n      key = Object.values(key)[0];\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplex() {\n    return this.keys().length === 0;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataEntityService.html":{"url":"injectables/ODataEntityService.html","title":"injectable - ODataEntityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataEntityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entity\n                            \n                            \n                                    Static\n                                path\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                action\n                            \n                            \n                                    Public\n                                assign\n                            \n                            \n                                    Public\n                                collectionAction\n                            \n                            \n                                    Public\n                                collectionFunction\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                destroy\n                            \n                            \n                                    Public\n                                fetchAll\n                            \n                            \n                                    Public\n                                fetchCollection\n                            \n                            \n                                    Public\n                                fetchOne\n                            \n                            \n                                    Public\n                                fetchOrCreate\n                            \n                            \n                                    Public\n                                function\n                            \n                            \n                                    Public\n                                navigationProperty\n                            \n                            \n                                    Public\n                                property\n                            \n                            \n                                    Public\n                                save\n                            \n                            \n                                    Public\n                                update\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/entity.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            action\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    action(key: EntityKey, name: string, returnType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataActionResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assign(entity: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionAction(name: string, returnType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:36\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataActionResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionFunction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionFunction(name: string, returnType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataFunctionResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy(entity: T, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAll(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchCollection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchCollection(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOne(key: EntityKey, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchOrCreate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchOrCreate(entity: Partial, options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            function\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    function(key: EntityKey, name: string, returnType?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    returnType\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataFunctionResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            navigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigationProperty(key: EntityKey, name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataNavigationPropertyResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            property\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    property(key: EntityKey, name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:28\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataPropertyResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(entity: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(entity: Partial, options?)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/entity.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            config\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    config()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { \n  ODataNavigationPropertyResource, \n  ODataPropertyResource, \n  ODataActionResource, \n  ODataFunctionResource, \n  ODataEntitiesAnnotations, \n  ODataEntityAnnotations, \n  HttpOptions\n} from '../resources';\nimport { EntityKey } from '../types';\nimport { ODataClient } from '../client';\n\nimport { ODataBaseService } from './base';\n\n@Injectable()\nexport class ODataEntityService extends ODataBaseService {\n  constructor(protected client: ODataClient) { super(client); }\n\n  public navigationProperty(key: EntityKey, name: string): ODataNavigationPropertyResource {\n    return this.entity(key).navigationProperty(name);\n  }\n\n  public property(key: EntityKey, name: string): ODataPropertyResource {\n    return this.entity(key).property(name);\n  }\n\n  public action(key: EntityKey, name: string, returnType?: string): ODataActionResource {\n    return this.entity(key).action(name, returnType);\n  }\n\n  public collectionAction(name: string, returnType?: string): ODataActionResource {\n    return this.entities().action(name, returnType);\n  }\n\n  public function(key: EntityKey, name: string, returnType?: string): ODataFunctionResource {\n    return this.entity(key).function(name, returnType);\n  }\n\n  public collectionFunction(name: string, returnType?: string): ODataFunctionResource {\n    return this.entities().function(name, returnType);\n  }\n\n  // Entity Actions\n  public fetchCollection(options?: HttpOptions): Observable {\n    return this.entities()\n      .get(options);\n  }\n\n  public fetchAll(options?: HttpOptions): Observable {\n    return this.entities()\n      .all(options);\n  }\n\n  public fetchOne(key: EntityKey, options?: HttpOptions): Observable {\n    return this.entity(key)\n      .get(options);\n  }\n\n  public create(entity: Partial, options?: HttpOptions): Observable {\n    return this.entities()\n      .post(entity, options);\n  }\n\n  public update(entity: Partial, options?: HttpOptions & { etag?: string }): Observable {\n    return this.entity(entity)\n      .put(entity, options);\n  }\n\n  public assign(entity: Partial, options?: HttpOptions & { etag?: string }): Observable {\n    return this.entity(entity as EntityKey)\n      .patch(entity, options);\n  }\n\n  public destroy(entity: T, options?: HttpOptions & { etag?: string }) {\n    return this.entity(entity)\n      .delete(options);\n  }\n\n  // Shortcuts\n  public fetchOrCreate(entity: Partial, options?: HttpOptions): Observable {\n    return this.fetchOne(entity as EntityKey, options)\n      .pipe(catchError((error: HttpErrorResponse) => {\n        if (error.status === 404)\n          return this.create(entity as T, options);\n        else\n          return throwError(error);\n      }));\n  }\n\n  public save(entity: Partial, options?: HttpOptions & {etag?: string}) {\n    return this.entity(entity).hasKey() ? this.update(entity, options) : this.create(entity, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumConfig.html":{"url":"classes/ODataEnumConfig.html","title":"class - ODataEnumConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                parser\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnumConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:156\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnumConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:156\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:153\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataEnumParser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:155\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:154\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataEnumParser.html":{"url":"classes/ODataEnumParser.html","title":"class - ODataEnumParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataEnumParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ODataParser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                flags\n                            \n                            \n                                members\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                stringAsEnum\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                parse\n                            \n                            \n                                toJSON\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(meta: EnumConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        meta\n                                                  \n                                                        \n                                                                        EnumConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            flags\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            members\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type | literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            stringAsEnum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:40\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types, Enums } from './utils';\nimport { Parser, Field, JsonSchemaExpandOptions, JsonSchemaConfig, EntityConfig, EnumConfig } from './types';\n\nexport const PARSERS: {[name: string]: Parser} = {\n  'Date': >{\n    type: 'Date',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    },\n    toJSON(value: Date) { \n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    }\n  },\n  'number': >{\n    type: 'number',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    },\n    toJSON(value: number) { \n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    }\n  }\n};\n\nexport interface ODataParser extends Parser { \n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser});\n  toJsonSchema(options?: JsonSchemaExpandOptions);\n}\n\nexport class ODataEnumParser implements ODataParser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  stringAsEnum?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n\n  constructor(meta: EnumConfig, namespace: string) {\n    this.name = meta.name;\n    this.type = `${namespace}.${this.name}`;\n    this.flags = meta.flags;\n    this.members = meta.members;\n  }\n\n  // Deserialize\n  parse(value: any) {\n    // String to number\n    if (value === null || typeof(value) === 'number') return value;\n    return this.flags ?\n      Enums.toFlags(this.members, value) :\n      Enums.toValue(this.members, value);\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    // Number to string\n    if (value === null || typeof(value) === 'string') return value;\n    let enums = this.flags ?\n      Enums.toEnums(this.members, value) :\n      [Enums.toEnum(this.members, value)];\n    if (!this.stringAsEnum)\n      enums = enums.map(e => `${this.type}'${e}'`);\n    return enums.join(\", \");\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = Enums.keys(this.members);\n    return property;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.stringAsEnum = settings.stringAsEnum;\n  }\n}\n\nexport class ODataFieldParser implements ODataParser {\n  name: string;\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n\n  constructor(name: string, field: Field) {\n    this.name = name;\n    Object.assign(this, field);\n  }\n\n  resolve(value: any) {\n    return this.ref.split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  parse(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.parse(value) : value;\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.toJSON(value) : value;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser = (this.type in PARSERS) ? \n      PARSERS[this.type] : \n      settings.parserForType(this.type);\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = this.parser ? (this.parser as ODataParser).toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\", \n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumParser;\n  }\n\n  isEntityType() {\n    return this.parser instanceof ODataEntityParser;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplex();\n  }\n}\n\nexport class ODataEntityParser implements ODataParser {\n  name: string;\n  type: string;\n  base: string;\n  parent: ODataEntityParser;\n  fields: ODataFieldParser[];\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.type = `${namespace}.${this.name}`;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataFieldParser(name, f as Field));\n  }\n\n  // Deserialize\n  parse(objs: any): Type | Type[] {\n    if (this.parent)\n      objs = this.parent.parse(objs);\n    let _parse = (obj) =>\n      Object.assign(obj, this.fields\n        .filter(f => f.name in obj)\n        .reduce((acc, f) => Object.assign(acc, { [f.name]: f.parse(obj[f.name]) }), {})\n      );\n    return Array.isArray(objs) ?\n      objs.map(obj => _parse(obj)) :\n      _parse(objs);\n  }\n\n  // Serialize\n  toJSON(objs: any): any {\n    if (this.parent)\n      objs = this.parent.toJSON(objs);\n    let _toJSON = (obj) => Object.assign(obj, this.fields\n      .filter(f => f.name in obj)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.toJSON(obj[f.name]) }), {})\n    );\n    return Array.isArray(objs) ? \n      objs.map(obj => _toJSON(obj)) :\n      _toJSON(objs);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    if (this.base) {\n      this.parent = settings.parserForType(this.base) as ODataEntityParser;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({[f.name]: f.toJsonSchema(config[f.name])}))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string {\n    let field = this.fields.find(f => f.name === name);\n    if (field)\n      return field.type;\n    else if (this.parent) \n      return this.parent.typeFor(name);\n  }\n\n  keys() { \n    let keys = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {});\n    if (Object.keys(key).length === 1)\n      key = Object.values(key)[0];\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplex() {\n    return this.keys().length === 0;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataFieldParser.html":{"url":"classes/ODataFieldParser.html","title":"class - ODataFieldParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataFieldParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            ODataParser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                collection\n                            \n                            \n                                    Optional\n                                default\n                            \n                            \n                                    Optional\n                                field\n                            \n                            \n                                    Optional\n                                key\n                            \n                            \n                                    Optional\n                                maxLength\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                navigation\n                            \n                            \n                                    Optional\n                                nullable\n                            \n                            \n                                    Optional\n                                parser\n                            \n                            \n                                    Optional\n                                ref\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                            \n                                isComplexType\n                            \n                            \n                                isEntityType\n                            \n                            \n                                isEnumType\n                            \n                            \n                                isNavigation\n                            \n                            \n                                parse\n                            \n                            \n                                resolve\n                            \n                            \n                                toJSON\n                            \n                            \n                                toJsonSchema\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, field: Field)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/parsers.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        field\n                                                  \n                                                        \n                                                                        Field\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            collection\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            default\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:94\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxLength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:89\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            navigation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            nullable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            parser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Parser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:91\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            ref\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:99\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/parsers.ts:90\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplexType\n                        \n                        \n                    \n                \n            \n            \n                \nisComplexType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEntityType\n                        \n                        \n                    \n                \n            \n            \n                \nisEntityType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isEnumType\n                        \n                        \n                    \n                \n            \n            \n                \nisEnumType()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isNavigation\n                        \n                        \n                    \n                \n            \n            \n                \nisNavigation()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Types, Enums } from './utils';\nimport { Parser, Field, JsonSchemaExpandOptions, JsonSchemaConfig, EntityConfig, EnumConfig } from './types';\n\nexport const PARSERS: {[name: string]: Parser} = {\n  'Date': >{\n    type: 'Date',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    },\n    toJSON(value: Date) { \n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    }\n  },\n  'number': >{\n    type: 'number',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    },\n    toJSON(value: number) { \n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    }\n  }\n};\n\nexport interface ODataParser extends Parser { \n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser});\n  toJsonSchema(options?: JsonSchemaExpandOptions);\n}\n\nexport class ODataEnumParser implements ODataParser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  stringAsEnum?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n\n  constructor(meta: EnumConfig, namespace: string) {\n    this.name = meta.name;\n    this.type = `${namespace}.${this.name}`;\n    this.flags = meta.flags;\n    this.members = meta.members;\n  }\n\n  // Deserialize\n  parse(value: any) {\n    // String to number\n    if (value === null || typeof(value) === 'number') return value;\n    return this.flags ?\n      Enums.toFlags(this.members, value) :\n      Enums.toValue(this.members, value);\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    // Number to string\n    if (value === null || typeof(value) === 'string') return value;\n    let enums = this.flags ?\n      Enums.toEnums(this.members, value) :\n      [Enums.toEnum(this.members, value)];\n    if (!this.stringAsEnum)\n      enums = enums.map(e => `${this.type}'${e}'`);\n    return enums.join(\", \");\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = Enums.keys(this.members);\n    return property;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.stringAsEnum = settings.stringAsEnum;\n  }\n}\n\nexport class ODataFieldParser implements ODataParser {\n  name: string;\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n\n  constructor(name: string, field: Field) {\n    this.name = name;\n    Object.assign(this, field);\n  }\n\n  resolve(value: any) {\n    return this.ref.split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  parse(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.parse(value) : value;\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.toJSON(value) : value;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser = (this.type in PARSERS) ? \n      PARSERS[this.type] : \n      settings.parserForType(this.type);\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = this.parser ? (this.parser as ODataParser).toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\", \n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumParser;\n  }\n\n  isEntityType() {\n    return this.parser instanceof ODataEntityParser;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplex();\n  }\n}\n\nexport class ODataEntityParser implements ODataParser {\n  name: string;\n  type: string;\n  base: string;\n  parent: ODataEntityParser;\n  fields: ODataFieldParser[];\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.type = `${namespace}.${this.name}`;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataFieldParser(name, f as Field));\n  }\n\n  // Deserialize\n  parse(objs: any): Type | Type[] {\n    if (this.parent)\n      objs = this.parent.parse(objs);\n    let _parse = (obj) =>\n      Object.assign(obj, this.fields\n        .filter(f => f.name in obj)\n        .reduce((acc, f) => Object.assign(acc, { [f.name]: f.parse(obj[f.name]) }), {})\n      );\n    return Array.isArray(objs) ?\n      objs.map(obj => _parse(obj)) :\n      _parse(objs);\n  }\n\n  // Serialize\n  toJSON(objs: any): any {\n    if (this.parent)\n      objs = this.parent.toJSON(objs);\n    let _toJSON = (obj) => Object.assign(obj, this.fields\n      .filter(f => f.name in obj)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.toJSON(obj[f.name]) }), {})\n    );\n    return Array.isArray(objs) ? \n      objs.map(obj => _toJSON(obj)) :\n      _toJSON(objs);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    if (this.base) {\n      this.parent = settings.parserForType(this.base) as ODataEntityParser;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({[f.name]: f.toJsonSchema(config[f.name])}))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string {\n    let field = this.fields.find(f => f.name === name);\n    if (field)\n      return field.type;\n    else if (this.parent) \n      return this.parent.typeFor(name);\n  }\n\n  keys() { \n    let keys = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {});\n    if (Object.keys(key).length === 1)\n      key = Object.values(key)[0];\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplex() {\n    return this.keys().length === 0;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataModel.html":{"url":"classes/ODataModel.html","title":"class - ODataModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _annotations\n                            \n                            \n                                    Protected\n                                _entity\n                            \n                            \n                                    Protected\n                                _relations\n                            \n                            \n                                    Protected\n                                _resource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attach\n                            \n                            \n                                clone\n                            \n                            \n                                create\n                            \n                            \n                                destroy\n                            \n                            \n                                fetch\n                            \n                            \n                                    Protected\n                                getNavigationProperty\n                            \n                            \n                                    Protected\n                                parse\n                            \n                            \n                                    Protected\n                                populate\n                            \n                            \n                                save\n                            \n                            \n                                    Protected\n                                setNavigationProperty\n                            \n                            \n                                target\n                            \n                            \n                                toEntity\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    _segments\n                                \n                                \n                                    _query\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entity?: Partial, options: literal type)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/model.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entity\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataAnnotations\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _relations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _resource\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataResource\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:27\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \nattach(resource: ODataResource)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resource\n                                    \n                                                ODataResource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:123\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        Mo\n                    \n                \n            \n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroy\n                        \n                        \n                    \n                \n            \n            \n                \ndestroy(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            fetch\n                        \n                        \n                    \n                \n            \n            \n                \nfetch(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNavigationProperty(field: ODataFieldParser)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:240\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                ODataFieldParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ODataModel | ODataCollection\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    parse(entity: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            populate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    populate(entity: T, annots?: ODataAnnotations)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    annots\n                                    \n                                                ODataAnnotations\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setNavigationProperty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNavigationProperty(field: ODataFieldParser, model: Pm | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:253\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                        Pm\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                ODataFieldParser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                            Pm | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            target\n                        \n                        \n                    \n                \n            \n            \n                \ntarget()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toEntity\n                        \n                        \n                    \n                \n            \n            \n                \ntoEntity()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(options?: HttpOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/model.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                HttpOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        _segments\n                    \n                \n\n                \n                    \n                        get_segments()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:202\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        _query\n                    \n                \n\n                \n                    \n                        get_query()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/model.ts:221\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable, forkJoin } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport {\n  ODataResource,\n  ODataEntityResource,\n  ODataPropertyResource,\n  ODataFunctionResource,\n  ODataActionResource,\n  ODataAnnotations,\n  ODataEntityAnnotations,\n  Expand,\n  Select\n} from '../resources';\n\nimport { ODataCollection } from './collection';\nimport { ODataNavigationPropertyResource } from '../resources/requests/navigationproperty';\nimport {\n  HttpOptions,\n  HttpValueOptions,\n  HttpEntityOptions\n} from '../resources/http-options';\nimport { VALUE } from '../types';\nimport { ODataFieldParser } from '../parsers';\n\nexport class ODataModel {\n  protected _resource: ODataResource;\n  protected _entity: T;\n  protected _annotations: ODataAnnotations;\n  protected _relations: { [name: string]: { \n    rel: ODataModel | ODataCollection> | null,\n    field: ODataFieldParser\n  }}\n\n  constructor(entity?: Partial, options: { resource?: ODataResource, annotations?: ODataAnnotations } = {}) {\n    if (options.resource instanceof ODataResource)\n      this.attach(options.resource);\n    this.populate((entity || {}) as T, options.annotations);\n  }\n\n  attach(resource: ODataResource) {\n    if (this._resource && this._resource.type() !== resource.type())\n      throw new Error(`Can't reattach ${resource.type()} with ${this._resource.type()}`);\n    let first = !this._resource;\n    this._resource = resource;\n    if (first) {\n      this._resource.config().fields()\n        .filter(field => field.navigation)\n        .forEach(field => {\n          Object.defineProperty(this, field.name, {\n            get() {\n              return this.getNavigationProperty(field);\n            },\n            set(model: ODataModel | null) {\n              this.setNavigationProperty(field, model);\n            }\n          });\n        });\n      if (this._entity)\n        this.populate(this._entity, this._annotations);\n    }\n    return this;\n  }\n\n  target() {\n    return this._resource.clone() as ODataResource;\n  }\n\n  protected parse(entity: T) {\n    let fields = this._resource ? this._resource.config().fields() : [];\n    let entries = Object.entries(entity)\n      .map(([key, value]) => [key, value, fields.find(f => f.name === key)]);\n    //Attributes\n    let attrs = Object.assign({}, entries\n      .filter(([, , f]) => f && !(f.isNavigation() || f.isComplexType()))\n      .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}));\n    //Others\n    Object.assign(attrs, entries\n      .filter(([, , f]) => !f)\n      .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}));\n    //Complexes\n    Object.assign(attrs, entries\n      .filter(([, , f]) => f && f.isComplexType())\n      .reduce((acc, [k, , f]) => {\n        let value = this._entity[f.name];\n        if (value) {\n          let prop = (this._resource as ODataEntityResource).property(f.name);\n          var base = f.collection && this._annotations.property(f.name) || {};\n          value = f.collection ? \n            prop.toCollection(Object.assign(base, { [VALUE]: value || [] })) : \n            prop.toModel(Object.assign(base, value || {}));\n        }\n        return Object.assign(acc, { [k]: value });\n      }, {}));\n    return attrs;\n  }\n\n  protected populate(entity: T, annots?: ODataAnnotations) {\n    this._entity = entity;\n    this._annotations = annots;\n    this._relations = {};\n    Object.assign(this, this.parse(this._entity));\n    return this;\n  }\n\n  toEntity(): T {\n    return Object.entries(\n      Object.assign({}, \n        this._entity, \n        Object.entries(this)\n          .filter(([key, ]) => !(key.startsWith(\"_\")))\n          .reduce((acc, [k, v]) => Object.assign(acc, { [k]: v }), {}),\n        Object.entries(this._relations).reduce((acc, [k, v]) => Object.assign(acc, {[k]: v.rel}), {})\n      )\n    ).reduce((acc, [k, value]) => \n      Object.assign(acc, { [k]: (value instanceof ODataModel) ? \n        value.toEntity() : \n        (value instanceof ODataCollection) ?\n        value.toEntities() : value }), \n      {}) as T;\n  }\n\n  clone>() {\n    let Ctor = this.constructor;\n    return (new Ctor(this.toEntity(), { resource: this._resource.clone(), annotations: this._annotations })) as Mo;\n  }\n\n  fetch(options?: HttpOptions): Observable {\n    let obs$: Observable;\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't fetch entity without key`);\n      obs$ = this._resource.get(options);\n    } else if (this._resource instanceof ODataNavigationPropertyResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {}));\n    } else if (this._resource instanceof ODataPropertyResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'value'}, options || {}));\n    } else if (this._resource instanceof ODataFunctionResource) {\n      obs$ = this._resource.get(\n        Object.assign({responseType: 'entity'}, options || {}));\n    }\n    if (!obs$)\n      throw new Error(\"Not Yet!\");\n    return obs$.pipe(\n      map(([entity, annots]) => entity ? this.populate(entity, annots) : null));\n  }\n\n  create(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      let entity = this.toEntity(); \n      return this._resource.post(entity, options).pipe(map(([entity, annots]) => this.populate(entity, annots)));\n    }\n    throw new Error(`Can't create`);\n  }\n\n  update(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't update entity without key`);\n      let resource = this._resource;\n      let etag = (this._annotations && this._annotations instanceof ODataEntityAnnotations) ? this._annotations.etag : undefined;\n      let entity = this.toEntity(); \n      let rels = Object.values(this._relations)\n            .filter((value) => value.field.navigation && !value.field.collection)\n            .map((value) => {\n              let ref = this._segments.navigationProperty(value.field.name).reference();\n              delete entity[value.field.name];\n              return value.rel != null ? \n                ref.set(value.rel.target() as ODataEntityResource, {etag}) : \n                ref.unset({etag})\n            });\n      return forkJoin(rels).pipe(\n        switchMap(() => resource.put(entity, Object.assign({ etag }, options || {}))),\n        map(([entity, annots]) => this.populate(entity, annots)));\n    }\n    throw new Error(`Can't update`);\n  }\n\n  save(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      return this._resource.hasKey() ? this.update(options) : this.create(options);\n    }\n    throw new Error(`Can't save`);\n  }\n\n  destroy(options?: HttpOptions): Observable {\n    if (this._resource instanceof ODataEntityResource) {\n      let etag = (this._annotations && this._annotations instanceof ODataEntityAnnotations) ? this._annotations.etag : undefined;\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't destroy entity without key`);\n      return this._resource.delete(Object.assign({ etag }, options || {}));\n    }\n    throw new Error(`Can't destroy`);\n  }\n\n  protected get _segments() {\n    if (!this._resource)\n      throw new Error(`Can't call without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't use without key`);\n    }\n    let resource = this._resource as ODataEntityResource;\n    return {\n      // Function\n      function(name: string, returnType?: string): ODataFunctionResource { return resource.function(name, returnType); },\n      // Action\n      action(name: string, returnType?: string): ODataActionResource { return resource.action(name, returnType); },\n      // Navigation\n      navigationProperty(name: string): ODataNavigationPropertyResource { return resource.navigationProperty(name); }\n    };\n  }\n\n  get _query() {\n    if (!this._resource)\n      throw new Error(`Can't query without ODataResource`);\n    if (this._resource instanceof ODataEntityResource) {\n      this._resource.key(this);\n      if (!this._resource.hasKey())\n        throw new Error(`Can't query without key`);\n    }\n    let resource = this._resource as ODataEntityResource;\n    return {\n      // Select\n      select(select?: Select) { return resource.select(select); },\n      // Expand\n      expand(expand?: Expand) { return resource.expand(expand); },\n      // Alias value\n      alias(name: string, value?: any) { return resource.alias(name, value); }\n    };\n  }\n\n  protected getNavigationProperty(field: ODataFieldParser): ODataModel | ODataCollection> {\n    if (!(field.name in this._relations)) {\n      let value = this._entity[field.name];\n      let nav = this._segments.navigationProperty(field.name);\n      let base = field.collection && this._annotations.property(field.name) || {};\n      let rel = field.collection ? \n        nav.toCollection(Object.assign(base, { [VALUE]: value || [] })) : \n        nav.toModel(Object.assign(base, value || {}));\n      this._relations[field.name] = {field, rel};\n    }\n    return this._relations[field.name].rel;\n  }\n\n  protected setNavigationProperty>(field: ODataFieldParser, model: Pm | null) {\n    if (field.collection)\n      throw new Error(`Can't set ${field.name} to collection, use add`);\n    if (model instanceof ODataModel && model.target().type() !== field.type)\n      throw new Error(`Can't set ${model.target().type()} to ${field.type}`);\n    this._relations[field.name] = {rel: model, field};\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataModelService.html":{"url":"injectables/ODataModelService.html","title":"injectable - ODataModelService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataModelService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/model.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                entity\n                            \n                            \n                                    Static\n                                path\n                            \n                            \n                                    Static\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                attach\n                            \n                            \n                                    Public\n                                collection\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                entities\n                            \n                            \n                                    Public\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: M)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            M\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            attach\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    attach(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collection\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collection(models?: Partial[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    models\n                                    \n                                            Partial[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     C\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            model\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    model(entity?: Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/model.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entity\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     M\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            config\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    config()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entities\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entities()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataEntitySetResource\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entity\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entity(key?: EntityKey)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataBaseService\n\n                \n            \n            \n                \n                        Defined in         ODataBaseService:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                EntityKey\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityResource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            entity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:6\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataBaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataBaseService:7\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ODataClient } from \"../client\";\nimport { VALUE } from '../types';\nimport { ODataModel, ODataCollection } from '../models';\n\nimport { ODataBaseService } from './base';\n\n@Injectable()\nexport class ODataModelService, C extends ODataCollection> extends ODataBaseService {\n  constructor(protected client: ODataClient) { super(client); }\n\n  // Models\n  public model(entity?: Partial): M {\n    entity = entity || {};\n    return this.entity(entity).toModel(entity);\n  }\n\n  public collection(models?: Partial[]): C {\n    return this.entities().toCollection({[VALUE]: models || []});\n  }\n\n  public attach(value: M): M;\n  public attach(value: C): C;\n  public attach(value: any): any {\n    if (value instanceof ODataModel) {\n      return value.attach(this.entities().entity(value.toEntity()));\n    } else if (value instanceof ODataCollection) {\n      return value.attach(this.entities());\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ODataModule.html":{"url":"modules/ODataModule.html","title":"module - ODataModule","body":"\n                   \n\n\n\n\n    Modules\n    ODataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/angular-odata/src/lib/module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ODataClient\n                        \n                        \n                            ODataServiceFactory\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(configs: Configuration[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/module.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n                                    \n                                                Configuration[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { ODataSettings } from './models/settings';\nimport { ODataClient } from './client';\nimport { ODataServiceFactory } from './services/factory';\nimport { Configuration, ODATA_CONFIGURATIONS } from './types';\n\nexport function createSettings(configs: Configuration[]) {\n  return new ODataSettings(...configs);\n}\n\n@NgModule({\n  imports: [HttpClientModule],\n  providers: [ODataClient, ODataServiceFactory]\n})\nexport class ODataModule {\n  public static forRoot(...configs: Configuration[]): ModuleWithProviders {\n    return {\n      ngModule: ODataModule,\n      providers: [\n        { provide: ODATA_CONFIGURATIONS, useValue: configs },\n        { \n          provide: ODataSettings, \n          useFactory: createSettings,\n          deps: [ODATA_CONFIGURATIONS]\n        },\n        ODataClient,\n        ODataServiceFactory\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ODataParser.html":{"url":"interfaces/ODataParser.html","title":"interface - ODataParser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ODataParser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/parsers.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Parser\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    configure\n                                \n                                \n                                    toJsonSchema\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJsonSchema\n                        \n                        \n                    \n                \n            \n            \n                \ntoJsonSchema(options?: JsonSchemaExpandOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/parsers.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            JsonSchemaExpandOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Types, Enums } from './utils';\nimport { Parser, Field, JsonSchemaExpandOptions, JsonSchemaConfig, EntityConfig, EnumConfig } from './types';\n\nexport const PARSERS: {[name: string]: Parser} = {\n  'Date': >{\n    type: 'Date',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    },\n    toJSON(value: Date) { \n      return Array.isArray(value) ?\n        value.map(v => new Date(v)) :\n        new Date(value);\n    }\n  },\n  'number': >{\n    type: 'number',\n    parse(value: any) {\n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    },\n    toJSON(value: number) { \n      return Array.isArray(value) ?\n        value.map(v => Number(v)) :\n        Number(value);\n    }\n  }\n};\n\nexport interface ODataParser extends Parser { \n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser});\n  toJsonSchema(options?: JsonSchemaExpandOptions);\n}\n\nexport class ODataEnumParser implements ODataParser {\n  name: string;\n  type: string;\n  flags?: boolean;\n  stringAsEnum?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n\n  constructor(meta: EnumConfig, namespace: string) {\n    this.name = meta.name;\n    this.type = `${namespace}.${this.name}`;\n    this.flags = meta.flags;\n    this.members = meta.members;\n  }\n\n  // Deserialize\n  parse(value: any) {\n    // String to number\n    if (value === null || typeof(value) === 'number') return value;\n    return this.flags ?\n      Enums.toFlags(this.members, value) :\n      Enums.toValue(this.members, value);\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    // Number to string\n    if (value === null || typeof(value) === 'string') return value;\n    let enums = this.flags ?\n      Enums.toEnums(this.members, value) :\n      [Enums.toEnum(this.members, value)];\n    if (!this.stringAsEnum)\n      enums = enums.map(e => `${this.type}'${e}'`);\n    return enums.join(\", \");\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = {\n      title: `The ${this.name} field`,\n      type: \"string\"\n    };\n    property.enum = Enums.keys(this.members);\n    return property;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.stringAsEnum = settings.stringAsEnum;\n  }\n}\n\nexport class ODataFieldParser implements ODataParser {\n  name: string;\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n\n  constructor(name: string, field: Field) {\n    this.name = name;\n    Object.assign(this, field);\n  }\n\n  resolve(value: any) {\n    return this.ref.split('/').reduce((acc, name) => acc[name], value);\n  }\n\n  // Deserialize\n  parse(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.parse(value) : value;\n  }\n\n  // Serialize\n  toJSON(value: any) {\n    if (value === null) return value;\n    return this.parser ? this.parser.toJSON(value) : value;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser = (this.type in PARSERS) ? \n      PARSERS[this.type] : \n      settings.parserForType(this.type);\n  }\n\n  // Json Schema\n  toJsonSchema(options: JsonSchemaExpandOptions = {}) {\n    let property = this.parser ? (this.parser as ODataParser).toJsonSchema(options) : {\n      title: `The ${this.name} field`,\n      type: this.parser ? \"object\" : this.type\n    };\n    if (this.maxLength)\n      property.maxLength = this.maxLength;\n    if (this.collection)\n      property = {\n        type: \"array\", \n        items: property,\n        additionalItems: false\n      };\n    return property;\n  }\n\n  isNavigation() {\n    return this.navigation;\n  }\n\n  isEnumType() {\n    return this.parser instanceof ODataEnumParser;\n  }\n\n  isEntityType() {\n    return this.parser instanceof ODataEntityParser;\n  }\n\n  isComplexType() {\n    return this.parser instanceof ODataEntityParser && this.parser.isComplex();\n  }\n}\n\nexport class ODataEntityParser implements ODataParser {\n  name: string;\n  type: string;\n  base: string;\n  parent: ODataEntityParser;\n  fields: ODataFieldParser[];\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.base = config.base;\n    this.type = `${namespace}.${this.name}`;\n    this.fields = Object.entries(config.fields)\n      .map(([name, f]) => new ODataFieldParser(name, f as Field));\n  }\n\n  // Deserialize\n  parse(objs: any): Type | Type[] {\n    if (this.parent)\n      objs = this.parent.parse(objs);\n    let _parse = (obj) =>\n      Object.assign(obj, this.fields\n        .filter(f => f.name in obj)\n        .reduce((acc, f) => Object.assign(acc, { [f.name]: f.parse(obj[f.name]) }), {})\n      );\n    return Array.isArray(objs) ?\n      objs.map(obj => _parse(obj)) :\n      _parse(objs);\n  }\n\n  // Serialize\n  toJSON(objs: any): any {\n    if (this.parent)\n      objs = this.parent.toJSON(objs);\n    let _toJSON = (obj) => Object.assign(obj, this.fields\n      .filter(f => f.name in obj)\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.toJSON(obj[f.name]) }), {})\n    );\n    return Array.isArray(objs) ? \n      objs.map(obj => _toJSON(obj)) :\n      _toJSON(objs);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    if (this.base) {\n      this.parent = settings.parserForType(this.base) as ODataEntityParser;\n    }\n    this.fields.forEach(f => f.configure(settings));\n  }\n\n  // Json Schema\n  toJsonSchema(config: JsonSchemaConfig = {}) {\n    let properties = this.fields\n      .filter(f => (!f.navigation || (config.expand && f.name in config.expand)) && (!config.select || (config.select).indexOf(f.name) !== -1))\n      .map(f => ({[f.name]: f.toJsonSchema(config[f.name])}))\n      .reduce((acc, v) => Object.assign(acc, v), {});\n    return {\n      title: `The ${this.name} schema`,\n      type: \"object\",\n      description: `The ${this.name} configuration`,\n      properties: properties,\n      required: this.fields.filter(f => !f.nullable).map(f => f.name)\n    };\n  }\n\n  typeFor(name: string): string {\n    let field = this.fields.find(f => f.name === name);\n    if (field)\n      return field.type;\n    else if (this.parent) \n      return this.parent.typeFor(name);\n  }\n\n  keys() { \n    let keys = (this.parent) ? this.parent.keys() : [];\n    return [...keys, ...this.fields.filter(f => f.key)];\n  }\n\n  resolveKey(attrs: any) {\n    let key = this.keys()\n      .reduce((acc, f) => Object.assign(acc, { [f.name]: f.resolve(attrs) }), {});\n    if (Object.keys(key).length === 1)\n      key = Object.values(key)[0];\n    if (!Types.isEmpty(key))\n      return key;\n  }\n\n  isComplex() {\n    return this.keys().length === 0;\n  }\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataPathSegments.html":{"url":"classes/ODataPathSegments.html","title":"class - ODataPathSegments","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataPathSegments\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                find\n                            \n                            \n                                has\n                            \n                            \n                                last\n                            \n                            \n                                path\n                            \n                            \n                                remove\n                            \n                            \n                                segment\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segments?: ODataSegment[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segments\n                                                  \n                                                        \n                                                                        ODataSegment[]\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            segments\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ODataSegment[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:55\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataPathSegments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            find\n                        \n                        \n                    \n                \n            \n            \n                \nfind(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            last\n                        \n                        \n                    \n                \n            \n            \n                \nlast()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SegmentHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            path\n                        \n                        \n                    \n                \n            \n            \n                \npath()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            segment\n                        \n                        \n                    \n                \n            \n            \n                \nsegment(name: string, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SegmentHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            types\n                        \n                        \n                    \n                \n            \n            \n                \ntypes()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, isoStringToDate } from '../utils/index';\n\nimport { OptionHandler } from './query-options';\nimport { PATH_SEPARATOR } from '../types';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport enum SegmentOptionNames {\n  key = 'key',\n  parameters = 'parameters'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type: string;\n  options: PlainObject;\n}\n\nconst pathSegmentsBuilder = (segment: ODataSegment): string => {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      let parameters = segment.options[SegmentOptionNames.parameters];\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.options[SegmentOptionNames.key];\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = (segments || []).map(({name, path, type, options}) => ({name, path, type, options: options || {}}));\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => !Types.isNullOrUndefined(t));\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => { \n      let json = { name: segment.name, path: segment.path, type: segment.type };\n      let options = isoStringToDate(JSON.parse(JSON.stringify(segment.options)));\n      if (!Types.isEmpty(options))\n        json.options = options;\n      return json; \n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(name: string, path?: string) {\n    // Backward search\n    return [...this.segments].reverse().find(s =>\n      s.name === name &&\n      (Types.isUndefined(path) || s.path === path));\n  }\n\n  last(): SegmentHandler {\n    if (this.segments.length > 0)\n      return new SegmentHandler(this.segments[this.segments.length - 1]);\n  }\n\n  segment(name: string, path?: string): SegmentHandler {\n    let segment = this.find(name, path);\n    if (!segment && !Types.isUndefined(path)) {\n      segment = { name, path, options: {} } as ODataSegment;\n      this.segments.push(segment);\n    }\n    if (segment)\n      return new SegmentHandler(segment);\n  }\n\n  has(name: string, path?: string) {\n    return !!this.find(name, path);\n  }\n\n  remove(name: string, path?: string) {\n    let segment = this.find(name, path);\n    this.segments = this.segments.filter(s => s !== segment);\n  }\n}\n\nclass SegmentHandler {\n  options?: PlainObject\n  constructor(private segment: ODataSegment) {\n    this.options = this.segment.options;\n  }\n\n  get name() {\n    return this.segment.name;\n  }\n\n  get type() {\n    return this.segment.type;\n  }\n\n  setType(value: string) {\n    this.segment.type = value;\n  }\n\n  get path() {\n    return this.segment.path;\n  }\n\n  setPath(value: string) {\n    this.segment.path = value;\n  }\n\n  // Option Handler\n  option(type: SegmentOptionNames, opts?: T) {\n    if (!Types.isUndefined(opts))\n      this.options[type] = opts;\n    return new OptionHandler(this.options, type as any);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataQueryOptions.html":{"url":"classes/ODataQueryOptions.html","title":"class - ODataQueryOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataQueryOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                clear\n                            \n                            \n                                clone\n                            \n                            \n                                has\n                            \n                            \n                                keep\n                            \n                            \n                                option\n                            \n                            \n                                params\n                            \n                            \n                                remove\n                            \n                            \n                                toJSON\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options?: PlainObject)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        PlainObject\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlainObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:25\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataQueryOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: QueryOptionNames)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            keep\n                        \n                        \n                    \n                \n            \n            \n                \nkeep(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(name: QueryOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:73\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                QueryOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         OptionHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            params\n                        \n                        \n                    \n                \n            \n            \n                \nparams()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PlainObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(names: QueryOptionNames[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    names\n                                    \n                                                QueryOptionNames[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { isoStringToDate, Types } from '../utils/index';\nimport { parseQuery } from '../types';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options?: PlainObject;\n\n  constructor(options?: PlainObject) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): PlainObject {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? parseQuery(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (!Types.isUndefined(opts))\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return !Types.isUndefined(this.options[name]);\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter((k: QueryOptionNames) => names.indexOf(k) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: PlainObject, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  // Primitive value\n  value() {\n    return this.o[this.n];\n  }\n\n  // Array\n  private assertArray(): Array {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = !Types.isUndefined(this.o[this.n]) ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n\n  // Hash map\n  private assertObject(): PlainObject {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(name: string, value: T) {\n    this.assertObject()[name] = value;\n  }\n\n  get(name: string): T {\n    if (!Types.isArray(this.o[this.n])) {\n      return this.o[this.n][name];\n    }\n  }\n\n  unset(name: string) {\n    delete this.assertObject()[name];\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter(v => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(name: string) {\n    return !!this.get(name);\n  }\n\n  assign(values: PlainObject) {\n    Object.assign(this.assertObject(), values);\n  }\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSchema.html":{"url":"classes/ODataSchema.html","title":"class - ODataSchema","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSchema\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                containers\n                            \n                            \n                                    Optional\n                                entities\n                            \n                            \n                                    Optional\n                                enums\n                            \n                            \n                                namespace\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    services\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: Schema)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:131\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        Schema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            entities\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:130\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            enums\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array>\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:129\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            namespace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:128\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        services\n                    \n                \n\n                \n                    \n                        getservices()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:140\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataServiceConfig.html":{"url":"classes/ODataServiceConfig.html","title":"class - ODataServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                annotations\n                            \n                            \n                                name\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ServiceConfig, namespace: string)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/config.ts:230\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        ServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        namespace\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            annotations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:230\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:228\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/config.ts:229\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(settings: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/config.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    settings\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ODataEntityParser, ODataFieldParser, ODataParser, ODataEnumParser } from '../parsers';\nimport { EntityConfig, EnumConfig, ServiceConfig, Schema, Container, Parser, Configuration, Field } from '../types';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Types } from '../utils';\nimport { ODataModel } from './model';\nimport { ODataCollection } from './collection';\n\nexport class ODataConfig {\n  name: string;\n  serviceRootUrl: string;\n  params: { [param: string]: string | string[] };\n  headers: { [param: string]: string | string[] };\n  metadataUrl?: string;\n  withCredentials?: boolean;\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean;\n  creation?: Date;\n  schemas?: Array;\n\n  constructor(config: Configuration) {\n    this.serviceRootUrl = config.serviceRootUrl;\n    if (this.serviceRootUrl.indexOf('?') != -1)\n      throw new Error(\"The 'serviceRootUrl' should not contain query string. Please use 'params' to add extra parameters\");\n    if (!this.serviceRootUrl.endsWith('/'))\n      this.serviceRootUrl += '/';\n    this.name = config.name;\n    this.params = config.params || {};\n    this.headers = config.headers || {};\n    this.metadataUrl = `${config.serviceRootUrl}$metadata`;\n    this.withCredentials = config.withCredentials || false;\n    this.acceptMetadata = config.acceptMetadata;\n    this.stringAsEnum = config.stringAsEnum || false;\n    this.creation = config.creation || new Date();\n\n    this.schemas = (config.schemas || []).map(schema => new ODataSchema(schema));\n  }\n  \n  configure() {\n    this.schemas\n      .forEach(schmea => schmea.configure({\n        stringAsEnum: this.stringAsEnum,\n        parserForType: (type: string) => this.parserForType(type)\n      })\n    );\n  }\n\n  //#region Find Config for Type\n  private schemaForType(type: string) {\n    let schema = this.schemas.find(s => type.startsWith(s.namespace));\n    if (schema)\n      return schema;\n  }\n\n  public enumConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.enums.find(e => e.type === type) as ODataEnumConfig;\n  }\n\n  public entityConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema)\n      return schema.entities.find(e => e.type === type) as ODataEntityConfig;\n  }\n\n  public serviceConfigForType(type: string) {\n    let schema = this.schemaForType(type);\n    if (schema) {\n      return schema.services.find(s => s.type === type) as ODataServiceConfig;\n    }\n  }\n\n  //#region Model and Collection for type\n  public modelForType(type: string): typeof ODataModel {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForType(type: string): typeof ODataCollection {\n    let config = this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  //#region Find Config for Name\n  public enumConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.enums], []>[])\n      .find(e => e.name === name) as ODataEnumConfig;\n  }\n\n  public entityConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.entities], []>[])\n      .find(e => e.name === name) as ODataEntityConfig;\n  }\n\n  public serviceConfigForName(name: string) {\n    return this.schemas.reduce((acc, schema) => [...acc, ...schema.services], [])\n      .find(e => e.name === name) as ODataServiceConfig;\n  }\n\n  //#region Model and Collection for type\n  public modelForName(name: string): typeof ODataModel {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.model as typeof ODataModel;\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let config = this.entityConfigForName(name);\n    if (!Types.isUndefined(config))\n      return config.collection as typeof ODataCollection;\n  }\n  //#endregion\n  //#endregion\n\n  public parserForType(type: string): ODataParser {\n    let config = this.enumConfigForType(type) || this.entityConfigForType(type);\n    if (!Types.isUndefined(config))\n      return config.parser as ODataParser;\n  }\n}\n\nexport class ODataSchema {\n  namespace: string;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array;\n\n  constructor(config: Schema) {\n    this.namespace = config.namespace;\n    this.enums = (config.enums || []).map(config => new ODataEnumConfig(config, this.namespace));\n    this.entities = (config.entities || []).map(config => new ODataEntityConfig(config, this.namespace));\n    this.containers = (config.containers || []).map(container => new ODataContainer(container, this.namespace));\n  }\n\n  get services(): Array {\n    return this.containers.reduce((acc, container) => [...acc, ...container.services], []);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.enums\n      .forEach(config => config.configure(settings));\n    this.entities\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataEnumConfig {\n  name: string;\n  type: string;\n  parser?: ODataEnumParser;\n  members: {[name: string]: number} | {[value: number]: string};\n  constructor(config: EnumConfig, namespace: string) {\n    this.name = config.name;\n    this.members = config.members;\n    this.type = `${namespace}.${this.name}`;\n    this.parser = new ODataEnumParser(config as EnumConfig, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n}\n\nexport class ODataEntityConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  parser?: ODataEntityParser;\n\n  constructor(config: EntityConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.model = config.model;\n    this.collection = config.collection;\n    this.parser = new ODataEntityParser(config, namespace);\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.parser.configure(settings);\n  }\n\n  fields(opts: {\n    include_parents?: boolean,\n    include_navigation?: boolean\n  } = {include_navigation: true, include_parents: true}): ODataFieldParser[] {\n    let parser = this.parser as ODataEntityParser;\n    let fields = []>[];\n    while (parser) {\n      fields = [\n        ...parser.fields.filter(field => opts.include_navigation || !field.navigation),\n        ...fields\n      ];\n      if (!opts.include_parents)\n        break;\n      parser = parser.parent;\n    }\n    return fields;\n  }\n}\n\nexport class ODataContainer {\n  name: string;\n  type: string;\n  annotations: any[];\n  services?: Array;\n  constructor(config: Container, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n    this.services = (config.services || []).map(config => new ODataServiceConfig(config, namespace));\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {\n    this.services\n      .forEach(config => config.configure(settings));\n  }\n}\n\nexport class ODataServiceConfig {\n  name: string;\n  type: string;\n  annotations: any[];\n  constructor(config: ServiceConfig, namespace: string) {\n    this.name = config.name;\n    this.type = `${namespace}.${this.name}`;\n    this.annotations = config.annotations;\n  }\n\n  configure(settings: {stringAsEnum: boolean, parserForType: (type: string) => ODataParser}) {}\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ODataServiceFactory.html":{"url":"injectables/ODataServiceFactory.html","title":"injectable - ODataServiceFactory","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ODataServiceFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/services/factory.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createEntityService\n                            \n                            \n                                createModelService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ODataClient)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/services/factory.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                        ODataClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createEntityService\n                        \n                        \n                    \n                \n            \n            \n                \ncreateEntityService(path: string, type?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:12\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataEntityService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createModelService\n                        \n                        \n                    \n                \n            \n            \n                \ncreateModelService(path: string, type?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/services/factory.ts:19\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        M\n                        C\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataModelService\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { ODataClient } from \"../client\";\nimport { ODataEntityService } from './entity';\nimport { ODataModel, ODataCollection } from '../models';\nimport { ODataModelService } from './model';\n\n@Injectable()\nexport class ODataServiceFactory {\n  constructor(protected client: ODataClient) { }\n\n  createEntityService(path: string, type?: string): ODataEntityService {\n    return new class extends ODataEntityService {\n      static path = path;\n      static entity = type;\n    }(this.client);\n  }\n\n  createModelService, C extends ODataCollection>(path: string, type?: string): ODataModelService {\n    return new class extends ODataModelService {\n      static path = path;\n      static entity = type;\n    }(this.client);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataSettings.html":{"url":"classes/ODataSettings.html","title":"class - ODataSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/models/settings.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                configs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                collectionForName\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                configForType\n                            \n                            \n                                    Public\n                                entityConfigForName\n                            \n                            \n                                    Public\n                                enumConfigForName\n                            \n                            \n                                    Public\n                                findConfigForTypes\n                            \n                            \n                                    Public\n                                modelForName\n                            \n                            \n                                    Public\n                                serviceConfigForName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configs: Configuration[])\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/models/settings.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configs\n                                                  \n                                                        \n                                                                        Configuration[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            configs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/models/settings.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            collectionForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    collectionForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            config\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    config(name?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            configForType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    configForType(type: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            entityConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    entityConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enumConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enumConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:36\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            findConfigForTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findConfigForTypes(types: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    types\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            modelForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    modelForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            serviceConfigForName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    serviceConfigForName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/models/settings.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Configuration } from '../types';\nimport { ODataConfig } from './config';\nimport { Types } from '../utils';\nimport { ODataCollection } from './collection';\nimport { ODataModel } from './model';\n\nexport class ODataSettings {\n  configs?: Array;\n\n  constructor(...configs: Configuration[]) {\n    this.configs = configs.map(config => new ODataConfig(config));\n    if (this.configs.length > 1 && this.configs.some(c => Types.isUndefined(c.name)))\n      throw new Error(\"Multiple APIs: Needs configuration names\");\n    this.configs.forEach(config => config.configure());\n  }\n\n  public config(name?: string) {\n    if (this.configs.length === 1) return this.configs[0];\n    let config = this.configs.find(c => !Types.isUndefined(name) && c.name === name);\n    if (config)\n      return config;\n  }\n\n  public findConfigForTypes(types: string[]) {\n    if (this.configs.length === 1) return this.configs[0];\n    let config = this.configs.find(c => c.schemas.some(s => types.some(type => type.startsWith(s.namespace))));\n    if (config)\n      return config;\n  }\n\n  public configForType(type: string) {\n    return this.findConfigForTypes([type]);\n  }\n\n  // Configs shortcuts\n  public enumConfigForName(name: string) {\n    let values = this.configs.map(config => config.enumConfigForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n\n  public entityConfigForName(name: string) {\n    let values = this.configs.map(config => config.entityConfigForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n\n  public serviceConfigForName(name: string) {\n    let values = this.configs.map(config => config.serviceConfigForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n\n  public modelForName(name: string): typeof ODataModel {\n    let values = this.configs.map(config => config.modelForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n\n  public collectionForName(name: string): typeof ODataCollection {\n    let values = this.configs.map(config => config.collectionForName(name)).filter(e => e);\n    if (values.length > 1)\n      throw Error(\"Multiple APIs: More than one value was found\");\n    return values[0];\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ODataValueAnnotations.html":{"url":"classes/ODataValueAnnotations.html","title":"class - ODataValueAnnotations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ODataValueAnnotations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/responses/annotations.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ODataAnnotations\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _context\n                            \n                            \n                                    Private\n                                _functions\n                            \n                            \n                                    Private\n                                _properties\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                clone\n                            \n                            \n                                    Static\n                                factory\n                            \n                            \n                                function\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    type\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:29\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _functions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:45\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _properties\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ODataAnnotations\n\n                                \n                            \n                        \n                            \n                                    Defined in         ODataAnnotations:55\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataValueAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataValueAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clone\n                        \n                        \n                    \n                \n            \n            \n                \nclone()\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:73\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ODataAnnotations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            factory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    factory(data: any)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ODataAnnotations\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            function\n                        \n                        \n                    \n                \n            \n            \n                \nfunction(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:81\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            property\n                        \n                        \n                    \n                \n            \n            \n                \nproperty(name: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ODataAnnotations\n\n                \n            \n            \n                \n                        Defined in         ODataAnnotations:77\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/responses/annotations.ts:96\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { \n  ODATA_ETAG, \n  ODATA_COUNT, \n  ODATA_NEXTLINK, \n  ODATA_TYPE, \n  ODATA_DELTALINK, \n  ODATA_METADATAETAG, \n  ODATA_MEDIA_EDITLINK, \n  ODATA_MEDIA_ETAG, \n  ODATA_MEDIA_READLINK, \n  ODATA_MEDIA_CONTENTTYPE, \n  ODATA_CONTEXT, \n  ODATA_ID, \n  ODATA_READLINK, \n  ODATA_EDITLINK, \n  ODATA_FUNCTION_PREFIX, \n  ODATA_ANNOTATION_PREFIX,\n  odataAnnotations\n} from '../../types';\n\nexport class ODataAnnotations {\n  constructor(protected value: { [name: string]: any }) { }\n\n  static factory(data: any) {\n    return new ODataAnnotations(odataAnnotations(data));\n  }\n\n  // Context\n  private _context: any;\n  get context(): { set: string, type: string | null } {\n    if (!this._context) {\n      this._context = {};\n      if (ODATA_CONTEXT in this.value) {\n        let value = this.value[ODATA_CONTEXT];\n        let index = value.lastIndexOf(\"#\");\n        let parts = value.substr(index + 1).split(\"/\");\n        let set = parts[0];\n        let type = parts.length > 3 ? parts[1] : null;\n        this._context = { set, type };\n      }\n    }\n    return this._context;\n  }\n\n  private _functions: any;\n  get functions() {\n    if (!this._functions) {\n      this._functions = Object.keys(this.value)\n        .filter(k => k.startsWith(ODATA_FUNCTION_PREFIX))\n        .reduce((acc, key) => Object.assign(acc, { [key.substr(1)]: this.value[key] }), {});\n    }\n    return this._functions;\n  }\n\n  private _properties: any;\n  get properties() {\n    if (!this._properties) {\n      this._properties = Object.keys(this.value)\n        .filter(k => k.indexOf(ODATA_ANNOTATION_PREFIX) > 0)\n        .reduce((acc, key) => {\n          let name = key.substr(0, key.indexOf(ODATA_ANNOTATION_PREFIX));\n          if (!(name in acc)) {\n            acc[name] = {};\n          }\n          Object.assign(acc[name], { [key.substr(key.indexOf(ODATA_ANNOTATION_PREFIX))]: this.value[key] });\n          return acc;\n        }, {});\n    }\n    return this._properties;\n  }\n\n  // Method\n  clone(): ODataAnnotations {\n    return new ODataAnnotations(this.value);\n  };\n\n  property(name: string) {\n    return this.properties[name];\n  }\n\n  function(name: string) {\n    return this.functions[name];\n  }\n\n}\n\nexport class ODataValueAnnotations extends ODataAnnotations {\n  clone(): ODataValueAnnotations {\n    return new ODataValueAnnotations(this.value);\n  };\n\n  static factory(data: any) {\n    return new ODataValueAnnotations(odataAnnotations(data));\n  }\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n}\n\nexport class ODataEntityAnnotations extends ODataAnnotations {\n  clone(): ODataEntityAnnotations {\n    return new ODataEntityAnnotations(this.value);\n  };\n\n  get type(): string {\n    if (ODATA_TYPE in this.value) {\n      return this.value[ODATA_TYPE].substr(1);\n    }\n  }\n\n  get id() {\n    if (ODATA_ID in this.value)\n      return this.value[ODATA_ID] as string;\n  }\n\n  get etag() {\n    if (ODATA_ETAG in this.value)\n      return this.value[ODATA_ETAG] as string;\n  }\n\n  get mediaEtag(): string {\n    if (ODATA_MEDIA_ETAG in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_ETAG] as string);\n  }\n\n  get metadataEtag() {\n    if (ODATA_METADATAETAG in this.value)\n      return this.value[ODATA_METADATAETAG] as string;\n  }\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get editLink(): string {\n    if (ODATA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_EDITLINK] as string);\n  }\n\n  get mediaReadLink(): string {\n    if (ODATA_MEDIA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_READLINK] as string);\n  }\n\n  get mediaEditLink(): string {\n    if (ODATA_MEDIA_EDITLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_MEDIA_EDITLINK] as string);\n  }\n\n  get mediaContentType(): string {\n    if (ODATA_MEDIA_CONTENTTYPE in this.value)\n      return this.value[ODATA_MEDIA_CONTENTTYPE] as string;\n  }\n\n  static factory(data: any) {\n    return new ODataEntityAnnotations(odataAnnotations(data));\n  }\n}\n\nexport class ODataEntitiesAnnotations extends ODataAnnotations {\n  clone(): ODataEntitiesAnnotations {\n    return new ODataEntitiesAnnotations(this.value);\n  };\n\n  get readLink(): string {\n    if (ODATA_READLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_READLINK] as string);\n  }\n\n  get count(): number {\n    if (ODATA_COUNT in this.value)\n      return this.value[ODATA_COUNT] as number;\n  }\n\n  get nextLink(): string {\n    if (ODATA_NEXTLINK in this.value)\n      return decodeURIComponent(this.value[ODATA_NEXTLINK] as string);\n  }\n\n  get deltaLink(): string {\n    if (ODATA_DELTALINK in this.value)\n      return decodeURIComponent(this.value[ODATA_DELTALINK] as string);\n  }\n\n  get top(): number {\n    let match = (this.nextLink || \"\").match(/\\$top=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skip(): number {\n    let match = (this.nextLink || \"\").match(/\\$skip=(\\d+)/);\n    if (match) return Number(match[1]);\n  }\n\n  get skiptoken(): string {\n    let match = (this.nextLink || \"\").match(/\\$skiptoken=([\\d\\w\\s]+)/);\n    if (match) return match[1];\n  }\n\n  static factory(data: any) {\n    return new ODataEntitiesAnnotations(odataAnnotations(data));\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OptionHandler.html":{"url":"classes/OptionHandler.html","title":"class - OptionHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OptionHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/query-options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                assertArray\n                            \n                            \n                                    Private\n                                assertObject\n                            \n                            \n                                assign\n                            \n                            \n                                at\n                            \n                            \n                                clear\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                push\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                toJSON\n                            \n                            \n                                unset\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(o: PlainObject, n: QueryOptionNames)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/query-options.ts:105\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        o\n                                                  \n                                                        \n                                                                        PlainObject\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        n\n                                                  \n                                                        \n                                                                        QueryOptionNames\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertArray()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            assertObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assertObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PlainObject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            assign\n                        \n                        \n                    \n                \n            \n            \n                \nassign(values: PlainObject)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:180\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                PlainObject\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            at\n                        \n                        \n                    \n                \n            \n            \n                \nat(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:139\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            has\n                        \n                        \n                    \n                \n            \n            \n                \nhas(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            push\n                        \n                        \n                    \n                \n            \n            \n                \npush(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            set\n                        \n                        \n                    \n                \n            \n            \n                \nset(name: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unset\n                        \n                        \n                    \n                \n            \n            \n                \nunset(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            value\n                        \n                        \n                    \n                \n            \n            \n                \nvalue()\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/query-options.ts:108\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { alias, Alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { isoStringToDate, Types } from '../utils/index';\nimport { parseQuery } from '../types';\n\nexport enum QueryOptionNames {\n  // System options\n  select = 'select',\n  filter = 'filter',\n  search = 'search',\n  transform = 'transform',\n  orderBy = 'orderBy',\n  top = 'top',\n  skip = 'skip',\n  skiptoken = 'skiptoken',\n  expand = 'expand',\n  format = 'format',\n  // Custom options\n  custom = 'custom'\n}\n\nexport class ODataQueryOptions {\n  options?: PlainObject;\n\n  constructor(options?: PlainObject) {\n    this.options = options || {};\n  }\n\n  // Params\n  params(): PlainObject {\n    let options = [\n      QueryOptionNames.select,\n      QueryOptionNames.filter,\n      QueryOptionNames.search,\n      QueryOptionNames.transform,\n      QueryOptionNames.orderBy,\n      QueryOptionNames.top,\n      QueryOptionNames.skip,\n      QueryOptionNames.skiptoken,\n      QueryOptionNames.expand,\n      QueryOptionNames.format]\n        .filter(key => !Types.isEmpty(this.options[key]))\n        .reduce((acc, key) => Object.assign(acc, {[key]: this.options[key]}), {});\n\n    let query = buildQuery(options);\n    let params = (query) ? parseQuery(query.substr(1)) : {};\n\n    // Custom\n    let custom = this.options[QueryOptionNames.custom] || {};\n    Object.assign(params, custom);\n\n    return params;\n  }\n\n  toString(): string {\n    return Object.entries(this.params())\n      .filter(([, value]) => value)\n      .map(([key, value]) => `${key}=${value}`)\n      .join(\"&\");\n  }\n\n  toJSON() {\n    return isoStringToDate(JSON.parse(JSON.stringify(this.options)));\n  }\n\n  clone() {\n    return new ODataQueryOptions(this.toJSON());\n  }\n\n  // Option Handler\n  option(name: QueryOptionNames, opts?: T) {\n    if (!Types.isUndefined(opts))\n      this.options[name] = opts;\n    return new OptionHandler(this.options, name);\n  }\n\n  // Query Options tools\n  has(name: QueryOptionNames) {\n    return !Types.isUndefined(this.options[name]);\n  }\n\n  remove(...names: QueryOptionNames[]) {\n    names.forEach(name => this.option(name).clear());\n  }\n\n  keep(...names: QueryOptionNames[]) {\n    this.options = Object.keys(this.options)\n      .filter((k: QueryOptionNames) => names.indexOf(k) !== -1)\n      .reduce((acc, k) => Object.assign(acc, { [k]: this.options[k] }), {});\n  }\n\n  // Aliases\n  alias(name: string, value: any): Alias {\n    return alias(name, value);\n  }\n\n  // Clear\n  clear() {\n    this.options = {};\n  }\n}\n\nexport class OptionHandler {\n  constructor(private o: PlainObject, private n: QueryOptionNames) { }\n\n  get name() {\n    return this.n;\n  }\n\n  toJSON() {\n    return this.o[this.n];\n  }\n\n  // Primitive value\n  value() {\n    return this.o[this.n];\n  }\n\n  // Array\n  private assertArray(): Array {\n    if (!Types.isArray(this.o[this.n]))\n      this.o[this.n] = !Types.isUndefined(this.o[this.n]) ? [this.o[this.n]] : [];\n    return this.o[this.n];\n  }\n\n  push(value: T) {\n    this.assertArray().push(value);\n  }\n\n  remove(value: T) {\n    this.o[this.n] = this.assertArray().filter(v => v !== value);\n    // If only one... down to value\n    if (this.o[this.n].length === 1)\n      this.o[this.n] = this.o[this.n][0];\n  }\n\n  at(index: number) {\n    return this.assertArray()[index];\n  }\n\n  // Hash map\n  private assertObject(): PlainObject {\n    if (!Types.isArray(this.o[this.n]) && Types.isObject(this.o[this.n])) {\n      return this.o[this.n];\n    }\n    let arr = this.assertArray();\n    let obj = arr.find(v => Types.isObject(v));\n    if (!obj) {\n      obj = {};\n      arr.push(obj);\n    }\n    return obj;\n  }\n\n  set(name: string, value: T) {\n    this.assertObject()[name] = value;\n  }\n\n  get(name: string): T {\n    if (!Types.isArray(this.o[this.n])) {\n      return this.o[this.n][name];\n    }\n  }\n\n  unset(name: string) {\n    delete this.assertObject()[name];\n    if (Types.isArray(this.o[this.n])) {\n      this.o[this.n] = this.o[this.n].filter(v => !Types.isEmpty(v));\n      if (this.o[this.n].length === 1)\n        this.o[this.n] = this.o[this.n][0];\n    }\n  }\n\n  has(name: string) {\n    return !!this.get(name);\n  }\n\n  assign(values: PlainObject) {\n    Object.assign(this.assertObject(), values);\n  }\n\n  clear() {\n    delete this.o[this.n];\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Parser.html":{"url":"interfaces/Parser.html","title":"interface - Parser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Parser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/types.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    parse\n                                \n                                \n                                    toJSON\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parse\n                        \n                        \n                    \n                \n            \n            \n                \nparse(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON(value: T | Partial)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/types.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T | Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { InjectionToken } from '@angular/core';\n\nexport type EntityKey = {\n  readonly [P in keyof T]?: T[P];\n} | string | number;\n\n// ANNOTATIONS\nexport const ODATA_ANNOTATION_PREFIX = '@odata';\nexport const ODATA_FUNCTION_PREFIX = '#';\n//odata.context: the context URL for a collection, entity, primitive value, or service document.\nexport const ODATA_CONTEXT = '@odata.context';\n//odata.count: the total count of a collection of entities or collection of entity references, if requested.\nexport const ODATA_COUNT = '@odata.count';\n//odata.nextLink: the next link of a collection with partial results\nexport const ODATA_NEXTLINK = '@odata.nextLink';\n//odata.deltaLink: the delta link for obtaining changes to the result, if requested\nexport const ODATA_DELTALINK = '@odata.deltaLink';\n//odata.id: the ID of the entity\nexport const ODATA_ID = '@odata.id';\n//odata.etag: the ETag of the entity\nexport const ODATA_ETAG = '@odata.etag';\n//odata.readLink: the link used to read the entity, if the edit link cannot be used to read the entity\nexport const ODATA_READLINK = '@odata.readLink';\n//odata.editLink: the link used to edit/update the entity, if the entity is updatable and the odata.id does not represent a URL that can be used to edit the entity\nexport const ODATA_EDITLINK = '@odata.editLink';\nexport const ODATA_METADATAETAG = '@odata.metadataEtag';\n//odata.associationLink: the link used to describe the relationship between this entity and related entities\nexport const ODATA_ASSOCIATIONLINK = '@odata.associationLink';\n//odata.type: the type of the containing object or targeted property if the type of the object or targeted property cannot be heuristically determined\nexport const ODATA_TYPE = '@odata.type';\n//odata.navigationLink: the link used to retrieve the values of a navigation property\nexport const ODATA_NAVIGATIONLINK = '@odata.navigationLink';\n//Media entities and stream properties may in addition contain the following annotations:\n//odata.mediaReadLink: the link used to read the stream\nexport const ODATA_MEDIA_READLINK = '@odata.mediaReadLink';\n//odata.mediaEditLink: the link used to edit/update the stream\nexport const ODATA_MEDIA_EDITLINK = '@odata.mediaEditLink';\n//odata.mediaEtag: the ETag of the stream, as appropriate\nexport const ODATA_MEDIA_ETAG = '@odata.mediaEtag';\n//odata.mediaContentType: the content type of the stream\nexport const ODATA_MEDIA_CONTENTTYPE = '@odata.mediaContentType';\n\nexport const $ID = '$id';\n\n// SEGMENTS\nexport const $METADATA = '$metadata';\nexport const $BATCH = '$batch';\nexport const $REF = '$ref';\nexport const $VALUE = '$value';\nexport const $COUNT = '$count';\n\n// HTTP HEADERS\nexport const IF_MATCH_HEADER = 'If-Match';\nexport const CONTENT_TYPE = 'Content-Type';\nexport const HTTP11 = 'HTTP/1.1';\nexport const ODATA_VERSION = 'OData-Version';\nexport const ACCEPT = 'Accept';\n\n// HTTP HEADER VALUES\nexport const APPLICATION_JSON = 'application/json';\nexport const APPLICATION_HTTP = 'application/http';\nexport const TEXT_PLAIN = 'text/plain';\nexport const VERSION_4_0 = '4.0';\nexport const MULTIPART_MIXED = 'multipart/mixed';\nexport const MULTIPART_MIXED_BOUNDARY = 'multipart/mixed;boundary=';\nexport const CONTENT_TRANSFER_ENCODING = 'Content-Transfer-Encoding';\nexport const CONTENT_ID = 'Content-ID';\n\n// URL PARTS\nexport const QUERY_SEPARATOR = '?';\nexport const PARAM_SEPARATOR = '&';\nexport const VALUE_SEPARATOR = '=';\nexport const PATH_SEPARATOR = '/';\nexport const ODATA_PARAM_PREFIX = '$';\nexport const ODATA_ALIAS_PREFIX = '@';\n\nexport const NEWLINE = '\\r\\n';\nexport const VALUE = 'value';\n\nexport const odataAnnotations = (value: any) => Object.keys(value)\n  .filter(key => key.indexOf(ODATA_ANNOTATION_PREFIX) !== -1 || key.startsWith(ODATA_FUNCTION_PREFIX))\n  .reduce((acc, key) => Object.assign(acc, {[key]: value[key]}), {});\n\nexport const entityAttributes = (value: any) => Object.keys(value)\n  .filter(key => key.indexOf(ODATA_ANNOTATION_PREFIX) === -1 && !key.startsWith(ODATA_FUNCTION_PREFIX))\n  .reduce((acc, key) => Object.assign(acc, {[key]: value[key]}), {});\n\nexport const parseQuery  = (query: string) => query.split(PARAM_SEPARATOR)\n  .reduce((acc, param: string) => {\n    let index = param.indexOf(VALUE_SEPARATOR);\n    if (index !== -1)\n      Object.assign(acc, {[param.substr(0, index)]: param.substr(index + 1)});\n    return acc;\n  }, {});\n\n// JSON SCHEMA\ntype JsonSchemaSelect = Array;\ntype JsonSchemaOrder = Array;\ntype JsonSchemaExpand = {[P in keyof T]?: JsonSchemaConfig };\n\nexport type JsonSchemaExpandOptions = {\n  select?: JsonSchemaSelect;\n  order?: JsonSchemaOrder;\n  expand?: JsonSchemaExpand;\n}\n\nexport type JsonSchemaConfig = JsonSchemaExpandOptions; \n\n// SETTINGS AND PARSERS\nexport type Field = {\n  type: string;\n  parser?: Parser;\n  default?: any;\n  maxLength?: number;\n  key?: boolean;\n  collection?: boolean;\n  nullable?: boolean;\n  navigation?: boolean;\n  field?: string;\n  ref?: string;\n}\n\nexport interface Parser {\n  type: string;\n  parse(value: any): any;\n  toJSON(value: T | Partial): any;\n}\n\nexport type Configuration = {\n  serviceRootUrl: string,\n  name?: string,\n  params?: { [param: string]: string | string[] };\n  headers?: { [param: string]: string | string[] };\n  withCredentials?: boolean,\n  acceptMetadata?: 'minimal' | 'full' | 'none';\n  stringAsEnum?: boolean,\n  creation?: Date,\n  schemas?: Array,\n  errorHandler?: (error: HttpErrorResponse) => Observable\n}\n\nexport const ODATA_CONFIGURATIONS = new InjectionToken('odata.configuraions');\n\nexport type Schema = {\n  namespace: string;\n  annotations?: Array;\n  enums?: Array>;\n  entities?: Array>;\n  containers?: Array\n}\n\nexport type Container = {\n  name: string;\n  annotations?: Array;\n  services?: Array;\n}\n\nexport type EnumConfig = {\n  name: string;\n  flags?: boolean;\n  members: {[name: string]: number} | {[value: number]: string};\n}\n\nexport type EntityConfig = {\n  name: string;\n  base?: string;\n  model?: { new(...any): any };\n  collection?: { new(...any): any };\n  annotations?: any[];\n  fields: { [P in keyof T]?: Field };\n}\n\nexport type ServiceConfig = {\n  name: string;\n  annotations?: any[];\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SegmentHandler.html":{"url":"classes/SegmentHandler.html","title":"class - SegmentHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SegmentHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/angular-odata/src/lib/resources/path-segments.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alias\n                            \n                            \n                                option\n                            \n                            \n                                setPath\n                            \n                            \n                                setType\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    type\n                                \n                                \n                                    path\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(segment: ODataSegment)\n                    \n                \n                        \n                            \n                                Defined in projects/angular-odata/src/lib/resources/path-segments.ts:122\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        segment\n                                                  \n                                                        \n                                                                        ODataSegment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PlainObject\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:122\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            alias\n                        \n                        \n                    \n                \n            \n            \n                \nalias(name: string, value?: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Alias\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            option\n                        \n                        \n                    \n                \n            \n            \n                \noption(type: SegmentOptionNames, opts?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:148\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SegmentOptionNames\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPath\n                        \n                        \n                    \n                \n            \n            \n                \nsetPath(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:127\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n\n                \n                    \n                        gettype()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:131\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        path\n                    \n                \n\n                \n                    \n                        getpath()\n                    \n                \n                            \n                                \n                                    Defined in projects/angular-odata/src/lib/resources/path-segments.ts:139\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import buildQuery, { guid, Alias, alias } from './builder';\nimport { PlainObject } from './builder';\n//import buildQuery from 'odata-query';\n\nimport { Types, isoStringToDate } from '../utils/index';\n\nimport { OptionHandler } from './query-options';\nimport { PATH_SEPARATOR } from '../types';\n\nexport enum PathSegmentNames {\n  batch = 'batch',\n  metadata = 'metadata',\n  entitySet = 'entitySet',\n  singleton = 'singleton',\n  type = 'type',\n  property = 'property',\n  navigationProperty = 'navigationProperty',\n  reference = 'reference',\n  value = 'value',\n  count = 'count',\n  function = 'function',\n  action = 'action'\n}\n\nexport enum SegmentOptionNames {\n  key = 'key',\n  parameters = 'parameters'\n}\n\nexport type ODataSegment = {\n  name: string;\n  path: string;\n  type: string;\n  options: PlainObject;\n}\n\nconst pathSegmentsBuilder = (segment: ODataSegment): string => {\n  switch (segment.name) {\n    case PathSegmentNames.function:\n      let parameters = segment.options[SegmentOptionNames.parameters];\n      return (parameters ?\n        buildQuery({ func: { [segment.path]: parameters }}) :\n        buildQuery({ func: segment.path})\n      ).slice(1);\n    default:\n      let key = segment.options[SegmentOptionNames.key];\n      if (typeof (key) === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(key)) {\n        key = guid(key);\n      }\n      return segment.path + (key ? buildQuery({ key }) : \"\");\n  }\n}\n\nexport class ODataPathSegments {\n  protected segments: ODataSegment[];\n\n  constructor(segments?: ODataSegment[]) {\n    this.segments = (segments || []).map(({name, path, type, options}) => ({name, path, type, options: options || {}}));\n  }\n\n  path(): string {\n    let chunks = this.segments\n      .map(pathSegmentsBuilder);\n    return chunks.join(PATH_SEPARATOR);\n  }\n\n  types(): string[] {\n    return this.segments.map(s => s.type).filter(t => !Types.isNullOrUndefined(t));\n  }\n\n  toString(): string {\n    return this.path();\n  }\n\n  toJSON() {\n    return this.segments.map(segment => { \n      let json = { name: segment.name, path: segment.path, type: segment.type };\n      let options = isoStringToDate(JSON.parse(JSON.stringify(segment.options)));\n      if (!Types.isEmpty(options))\n        json.options = options;\n      return json; \n    });\n  }\n\n  clone() {\n    return new ODataPathSegments(this.toJSON());\n  }\n\n  find(name: string, path?: string) {\n    // Backward search\n    return [...this.segments].reverse().find(s =>\n      s.name === name &&\n      (Types.isUndefined(path) || s.path === path));\n  }\n\n  last(): SegmentHandler {\n    if (this.segments.length > 0)\n      return new SegmentHandler(this.segments[this.segments.length - 1]);\n  }\n\n  segment(name: string, path?: string): SegmentHandler {\n    let segment = this.find(name, path);\n    if (!segment && !Types.isUndefined(path)) {\n      segment = { name, path, options: {} } as ODataSegment;\n      this.segments.push(segment);\n    }\n    if (segment)\n      return new SegmentHandler(segment);\n  }\n\n  has(name: string, path?: string) {\n    return !!this.find(name, path);\n  }\n\n  remove(name: string, path?: string) {\n    let segment = this.find(name, path);\n    this.segments = this.segments.filter(s => s !== segment);\n  }\n}\n\nclass SegmentHandler {\n  options?: PlainObject\n  constructor(private segment: ODataSegment) {\n    this.options = this.segment.options;\n  }\n\n  get name() {\n    return this.segment.name;\n  }\n\n  get type() {\n    return this.segment.type;\n  }\n\n  setType(value: string) {\n    this.segment.type = value;\n  }\n\n  get path() {\n    return this.segment.path;\n  }\n\n  setPath(value: string) {\n    this.segment.path = value;\n  }\n\n  // Option Handler\n  option(type: SegmentOptionNames, opts?: T) {\n    if (!Types.isUndefined(opts))\n      this.options[type] = opts;\n    return new OptionHandler(this.options, type as any);\n  }\n\n  // Aliases\n  alias(name: string, value?: any): Alias {\n    return alias(name, value);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.9\n        \n            @angular/common : ~9.1.9\n        \n            @angular/compiler : ~9.1.9\n        \n            @angular/core : ~9.1.9\n        \n            @angular/forms : ~9.1.9\n        \n            @angular/platform-browser : ~9.1.9\n        \n            @angular/platform-browser-dynamic : ~9.1.9\n        \n            @angular/router : ~9.1.9\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FieldType   (projects/.../metadata.ts)\n                        \n                        \n                            PathSegmentNames   (projects/.../path-segments.ts)\n                        \n                        \n                            QueryOptionNames   (projects/.../query-options.ts)\n                        \n                        \n                            RequestMethod   (projects/.../batch.ts)\n                        \n                        \n                            SegmentOptionNames   (projects/.../path-segments.ts)\n                        \n                        \n                            StandardAggregateMethods   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/responses/metadata.ts\n    \n        \n            \n                \n                    \n                        \n                        FieldType\n                    \n                \n                        \n                            \n                                 ATTRIBUTE\n                            \n                        \n                        \n                            \n                                 TAG\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n        \n            \n                \n                    \n                        \n                        PathSegmentNames\n                    \n                \n                        \n                            \n                                 batch\n                            \n                        \n                        \n                            \n                                Value : batch\n                            \n                        \n                        \n                            \n                                 metadata\n                            \n                        \n                        \n                            \n                                Value : metadata\n                            \n                        \n                        \n                            \n                                 entitySet\n                            \n                        \n                        \n                            \n                                Value : entitySet\n                            \n                        \n                        \n                            \n                                 singleton\n                            \n                        \n                        \n                            \n                                Value : singleton\n                            \n                        \n                        \n                            \n                                 type\n                            \n                        \n                        \n                            \n                                Value : type\n                            \n                        \n                        \n                            \n                                 property\n                            \n                        \n                        \n                            \n                                Value : property\n                            \n                        \n                        \n                            \n                                 navigationProperty\n                            \n                        \n                        \n                            \n                                Value : navigationProperty\n                            \n                        \n                        \n                            \n                                 reference\n                            \n                        \n                        \n                            \n                                Value : reference\n                            \n                        \n                        \n                            \n                                 value\n                            \n                        \n                        \n                            \n                                Value : value\n                            \n                        \n                        \n                            \n                                 count\n                            \n                        \n                        \n                            \n                                Value : count\n                            \n                        \n                        \n                            \n                                 function\n                            \n                        \n                        \n                            \n                                Value : function\n                            \n                        \n                        \n                            \n                                 action\n                            \n                        \n                        \n                            \n                                Value : action\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SegmentOptionNames\n                    \n                \n                        \n                            \n                                 key\n                            \n                        \n                        \n                            \n                                Value : key\n                            \n                        \n                        \n                            \n                                 parameters\n                            \n                        \n                        \n                            \n                                Value : parameters\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/query-options.ts\n    \n        \n            \n                \n                    \n                        \n                        QueryOptionNames\n                    \n                \n                        \n                            \n                                 select\n                            \n                        \n                        \n                            \n                                Value : select\n                            \n                        \n                        \n                            \n                                 filter\n                            \n                        \n                        \n                            \n                                Value : filter\n                            \n                        \n                        \n                            \n                                 search\n                            \n                        \n                        \n                            \n                                Value : search\n                            \n                        \n                        \n                            \n                                 transform\n                            \n                        \n                        \n                            \n                                Value : transform\n                            \n                        \n                        \n                            \n                                 orderBy\n                            \n                        \n                        \n                            \n                                Value : orderBy\n                            \n                        \n                        \n                            \n                                 top\n                            \n                        \n                        \n                            \n                                Value : top\n                            \n                        \n                        \n                            \n                                 skip\n                            \n                        \n                        \n                            \n                                Value : skip\n                            \n                        \n                        \n                            \n                                 skiptoken\n                            \n                        \n                        \n                            \n                                Value : skiptoken\n                            \n                        \n                        \n                            \n                                 expand\n                            \n                        \n                        \n                            \n                                Value : expand\n                            \n                        \n                        \n                            \n                                 format\n                            \n                        \n                        \n                            \n                                Value : format\n                            \n                        \n                        \n                            \n                                 custom\n                            \n                        \n                        \n                            \n                                Value : custom\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/requests/batch.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestMethod\n                    \n                \n                        \n                            \n                                 Get\n                            \n                        \n                        \n                            \n                                 Post\n                            \n                        \n                        \n                            \n                                 Put\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                 Options\n                            \n                        \n                        \n                            \n                                 Head\n                            \n                        \n                        \n                            \n                                 Patch\n                            \n                        \n            \n        \n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n            \n                \n                    \n                        \n                        StandardAggregateMethods\n                    \n                \n                        \n                            \n                                 sum\n                            \n                        \n                        \n                            \n                                Value : sum\n                            \n                        \n                        \n                            \n                                 min\n                            \n                        \n                        \n                            \n                                Value : min\n                            \n                        \n                        \n                            \n                                 max\n                            \n                        \n                        \n                            \n                                Value : max\n                            \n                        \n                        \n                            \n                                 average\n                            \n                        \n                        \n                            \n                                Value : average\n                            \n                        \n                        \n                            \n                                 countdistinct\n                            \n                        \n                        \n                            \n                                Value : countdistinct\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            buildAggregate   (projects/.../builder.ts)\n                        \n                        \n                            buildExpand   (projects/.../builder.ts)\n                        \n                        \n                            buildFilter   (projects/.../builder.ts)\n                        \n                        \n                            buildGroupBy   (projects/.../builder.ts)\n                        \n                        \n                            buildOrderBy   (projects/.../builder.ts)\n                        \n                        \n                            buildTransforms   (projects/.../builder.ts)\n                        \n                        \n                            buildUrl   (projects/.../builder.ts)\n                        \n                        \n                            createSettings   (projects/.../module.ts)\n                        \n                        \n                            escapeIllegalChars   (projects/.../builder.ts)\n                        \n                        \n                            handleValue   (projects/.../builder.ts)\n                        \n                        \n                            parseNot   (projects/.../builder.ts)\n                        \n                        \n                            Unnamed function   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            buildAggregate\n                        \n                        \n                    \n                \n            \n            \n                \nbuildAggregate(aggregate)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    aggregate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildExpand\n                        \n                        \n                    \n                \n            \n            \n                \nbuildExpand(expands)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expands\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildFilter\n                        \n                        \n                    \n                \n            \n            \n                \nbuildFilter(filters, aliases, propPrefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    propPrefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildGroupBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildGroupBy(groupBy)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    groupBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildOrderBy\n                        \n                        \n                    \n                \n            \n            \n                \nbuildOrderBy(orderBy, prefix)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    prefix\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildTransforms\n                        \n                        \n                    \n                \n            \n            \n                \nbuildTransforms(transforms)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transforms\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            buildUrl\n                        \n                        \n                    \n                \n            \n            \n                \nbuildUrl(path, params)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            escapeIllegalChars\n                        \n                        \n                    \n                \n            \n            \n                \nescapeIllegalChars(string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleValue\n                        \n                        \n                    \n                \n            \n            \n                \nhandleValue(value, aliases?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aliases\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseNot\n                        \n                        \n                    \n                \n            \n            \n                \nparseNot(builtFilters)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    builtFilters\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Unnamed function\n                        \n                        \n                    \n                \n            \n            \n                \nUnnamed function(undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/angular-odata/src/lib/module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSettings\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSettings(configs)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configs\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-odata\nA fluent API for querying, creating, updating and deleting OData resources in Angular.\nOData service for Angular.\nPlease check also my other related project, OData Angular Generator\nInstall:\nnpm i uuid\nnpm i angular-odataDemo:\nFull examples of the library:\n\nAngularODataEntity\nAngularODataModel\n\nUsage:\nSimple usage: Service Factory\nIn this mode the services are obtained from a factory and optionally we can use types for entities\n1) Add module to your project\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot({\n      serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n    })\n    ...\n  ]\n})\nexport class AppModule {}or build settings through a factory function.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule, ODataSettings } from 'angular-odata';\n\nexport function settingsFactory() {\n  return new ODataSettings({\n    serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/'\n  });\n}\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule\n  ]\n  providers: [\n    ...\n    { provide: ODataSettings, useFactory: settingsFactory }\n  ],\n})\nexport class AppModule {}2) Inject and use the ODataServiceFactory\nimport { Component } from '@angular/core';\nimport { ODataClient, ODATA_ETAG } from 'angular-odata';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'TripPin';\n  constructor(private factory: ODataServiceFactory) {\n    this.queries();\n  }\n\n  queries() {\n    // Use OData Service Factory\n    let airportsService = this.factory.createEntityService(\"Airports\");\n    let peopleService = this.factory.createEntityService(\"People\");\n\n    let airports = airportsService.entities();\n\n    // Fetch set\n    airports.all()\n      .subscribe(aports => console.log(\"All: \", aports));\n\n    // Fetch with count\n    airports.get({withCount: true})\n      .subscribe(([aports, annots]) => console.log(\"Airports: \", aports, \"Annotations: \", annots));\n\n    // Fetch by key\n    let airport = airports.entity(\"CYYZ\");\n    airport.get()\n      .subscribe(([aport, annots]) => console.log(\"Airport: \", aport, \"Annotations: \", annots));\n\n    // Filter\n    airports.filter({Location: {City: {CountryRegion: \"United States\"}}});\n    airports.get()\n      .subscribe(([aports, annots]) => console.log(\"Airports of United States: \", aports, \"Annotations: \", annots));\n\n    // Add filter\n    airports.filter().push({Location: {City: {Region: \"California\"}}});\n    airports.get()\n      .subscribe(([aports, annots]) => console.log(\"Airports in California: \", aports, \"Annotations: \", annots));\n\n    // Remove filter\n    airports.filter().clear();\n    airports.get()\n      .subscribe(([aports, annots]) => console.log(\"Airports: \", aports, \"Annotations: \", annots));\n\n    let people = peopleService.entities();\n\n    // Expand\n    people.expand({\n      Friends: { \n        expand: { Friends: { select: ['AddressInfo']}} \n      }, \n      Trips: { select: ['Name', 'Tags'] },\n    });\n    people.get({withCount: true})\n      .subscribe(([peop, annots]) => console.log(\"People with Friends and Trips: \", peop, \"Annotations: \", annots));\n\n    // Remove Expand\n    people.expand().clear();\n  }\n}Advanced usage: Create Custom Services\nIn this mode, services are created using custom definitions and corresponding configuration\n1) The entity with configuration\nimport { PersonGender } from './persongender.enum';\nimport { Location  } from './location.entity';\nimport { Photo } from './photo.entity';\nimport { Trip } from './trip.entity';\n\nexport interface Person {\n  UserName: string;\n  FirstName: string;\n  LastName: string;\n  Emails?: string[];\n  AddressInfo?: Location[];\n  Gender?: PersonGender;\n  Concurrency: number;\n  Friends?: Person[];\n  Trips?: Trip[];\n  Photo?: Photo\n}\n\nexport const PersonConfig = {\n  name: \"Person\",\n  fields: {\n    UserName: {type: 'string', key: true, ref: 'UserName', nullable: false}]},\n    FirstName: {type: 'string', nullable: false},\n    LastName: {type: 'string', nullable: false},\n    Emails: {type: 'string', collection: true},\n    AddressInfo: {type: 'Microsoft.OData.SampleService.Models.TripPin.Location', collection: true},\n    Gender: {type: 'Microsoft.OData.SampleService.Models.TripPin.PersonGender'},\n    Concurrency: {type: 'number', nullable: false},\n    Friends: {type: 'Microsoft.OData.SampleService.Models.TripPin.Person', collection: true, navigation: true},\n    Trips: {type: 'Microsoft.OData.SampleService.Models.TripPin.Trip', collection: true, navigation: true},\n    Photo: {type: 'Microsoft.OData.SampleService.Models.TripPin.Photo', navigation: true}\n  }\n} as EntityConfig;2) The api configuration \nimport ...\nimport { PersonGenderConfig } from './Microsoft/OData/SampleService/Models/TripPin/persongender.enum.config';\nimport { LocationConfig } from './Microsoft/OData/SampleService/Models/TripPin/location.entity.config';\nimport { PhotoConfig } from './Microsoft/OData/SampleService/Models/TripPin/photo.entity.config';\nimport { PersonConfig } from './Microsoft/OData/SampleService/Models/TripPin/person.entity.config';\nimport { TripConfig } from './Microsoft/OData/SampleService/Models/TripPin/trip.entity.config';\n\nexport const TripPinConfig = {\n  serviceRootUrl: 'https://services.odata.org/V4/(S(4m0tuxtnhcfctl4gzem3gr10))/TripPinServiceRW/',\n  schemas: [ // Schemas\n    {\n      namespace: \"Microsoft.OData.SampleService.Models.TripPin\",\n      enums: [\n        PersonGenderConfig\n      ],\n      entities: [\n        ...\n        LocationConfig,\n        PhotoConfig,\n        PersonConfig,\n        TripConfig\n      ]\n    }\n  ]\n}3) The service\n// Service\nimport { Injectable } from '@angular/core';\nimport { ODataEntityService } from 'angular-odata';\nimport { Person } from './person.entity';\n\n@Injectable()\nexport class PeopleService extends ODataEntityService {\n  static path: string = 'People';\n  static type: string = 'Microsoft.OData.SampleService.Models.TripPin.People';\n  static entity: string = 'Microsoft.OData.SampleService.Models.TripPin.Person';\n}4) Add module to your project\nimport { NgModule } from '@angular/core';\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, PeopleService } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig)\n    ...\n  ],\n  providers: [\n    PeopleService\n  ]\n})\nexport class AppModule {}5) Inject and use the entity service\nimport { Component } from '@angular/core';\nimport { ODataClient } from 'angular-odata';\nimport { PeopleService } from './trippin';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AngularODataEntity';\n  constructor(private people: PeopleService) {\n    this.show('scottketchum');\n  }\n\n  show(name: string) {\n    let person = this.people.entity({UserName: name});\n    person.expand({\n      Friends: {}, \n      Trips: {\n        expand: {\n          Photos: {}, \n          PlanItems: {}\n        }\n      }, \n      Photo: {}\n    });\n    person.get()\n      .subscribe(([person, ]) => {\n        this.person = person;\n        if (person.Photo) {\n          let media = this.photos.entity(person.Photo).media();\n          media.blob().subscribe(console.log);\n        }\n      });\n  }\n}Advanced usage: OData Generator\n1) If you choose using OData Angular Generator, import the config and the module from generated source.\nimport { NgModule } from '@angular/core';\n\nimport { ODataModule } from 'angular-odata';\nimport { TripPinConfig, TripPinModule } from './trippin';\n\n@NgModule({\n  imports: [\n    ...\n    ODataModule.forRoot(TripPinConfig),\n    TripPinModule\n  ]\n  ...\n})\nexport class AppModule {}For a deep query customizations the library use odata-query as a builder.\nCredits\nAngular OData is built using the following open source projects:\n\nOData v4 query builder\nGenerate RFC-compliant UUIDs in JavaScript\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ODataModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    70 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Aggregate   (projects/.../builder.ts)\n                        \n                        \n                            Alias   (projects/.../builder.ts)\n                        \n                        \n                            Binary   (projects/.../builder.ts)\n                        \n                        \n                            Configuration   (projects/.../types.ts)\n                        \n                        \n                            Container   (projects/.../types.ts)\n                        \n                        \n                            EntityConfig   (projects/.../types.ts)\n                        \n                        \n                            EntityKey   (projects/.../types.ts)\n                        \n                        \n                            EnumConfig   (projects/.../types.ts)\n                        \n                        \n                            Expand   (projects/.../builder.ts)\n                        \n                        \n                            ExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            Field   (projects/.../types.ts)\n                        \n                        \n                            Filter   (projects/.../builder.ts)\n                        \n                        \n                            GroupBy   (projects/.../builder.ts)\n                        \n                        \n                            Guid   (projects/.../builder.ts)\n                        \n                        \n                            HttpEntitiesOptions   (projects/.../http-options.ts)\n                        \n                        \n                            HttpEntityOptions   (projects/.../http-options.ts)\n                        \n                        \n                            HttpOptions   (projects/.../http-options.ts)\n                        \n                        \n                            HttpValueOptions   (projects/.../http-options.ts)\n                        \n                        \n                            Json   (projects/.../builder.ts)\n                        \n                        \n                            JsonSchemaConfig   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaExpand   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaExpandOptions   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaOrder   (projects/.../types.ts)\n                        \n                        \n                            JsonSchemaSelect   (projects/.../types.ts)\n                        \n                        \n                            NestedExpandOptions   (projects/.../builder.ts)\n                        \n                        \n                            ODataSegment   (projects/.../path-segments.ts)\n                        \n                        \n                            OrderBy   (projects/.../builder.ts)\n                        \n                        \n                            OrderByOptions   (projects/.../builder.ts)\n                        \n                        \n                            PlainObject   (projects/.../builder.ts)\n                        \n                        \n                            QueryOptions   (projects/.../builder.ts)\n                        \n                        \n                            Raw   (projects/.../builder.ts)\n                        \n                        \n                            Schema   (projects/.../types.ts)\n                        \n                        \n                            Select   (projects/.../builder.ts)\n                        \n                        \n                            ServiceConfig   (projects/.../types.ts)\n                        \n                        \n                            Transform   (projects/.../builder.ts)\n                        \n                        \n                            Value   (projects/.../builder.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/angular-odata/src/lib/resources/builder.ts\n    \n    \n        \n            \n                \n                    \n                    Aggregate\n                \n            \n            \n                \n                        string | literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Alias\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Binary\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Expand\n                \n            \n            \n                \n                        string |  | NestedExpandOptions | Array | Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Filter\n                \n            \n            \n                \n                            string | PlainObject | Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GroupBy\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Guid\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Json\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    NestedExpandOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderBy\n                \n            \n            \n                \n                        string | OrderByOptions | Array> | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderByOptions\n                \n            \n            \n                \n                         | \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PlainObject\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    QueryOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Raw\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Select\n                \n            \n            \n                \n                        string |  | Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Transform\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Value\n                \n            \n            \n                \n                        string | Date | number | boolean | Raw | Guid | Binary | Json | Alias\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/types.ts\n    \n    \n        \n            \n                \n                    \n                    Configuration\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Container\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EntityKey\n                \n            \n            \n                \n                         | string | number\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EnumConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Field\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaConfig\n                \n            \n            \n                \n                        JsonSchemaExpandOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpand\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaExpandOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaOrder\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    JsonSchemaSelect\n                \n            \n            \n                \n                        Array\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Schema\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ServiceConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/http-options.ts\n    \n    \n        \n            \n                \n                    \n                    HttpEntitiesOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpEntityOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpOptions\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HttpValueOptions\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/angular-odata/src/lib/resources/path-segments.ts\n    \n    \n        \n            \n                \n                    \n                    ODataSegment\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
